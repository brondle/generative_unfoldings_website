{"version":3,"sources":["node_modules/browser-pack/_prelude.js","index.js","node_modules/array-flat-polyfill/index.js","node_modules/canvas-sketch-util/lib/wrap.js","node_modules/canvas-sketch-util/math.js","node_modules/canvas-sketch/dist/node_modules/canvas-sketch/node_modules/object-assign/index.js","node_modules/canvas-sketch/dist/node_modules/canvas-sketch/node_modules/right-now/browser.js","node_modules/canvas-sketch/dist/node_modules/canvas-sketch/node_modules/is-promise/index.js","node_modules/canvas-sketch/dist/node_modules/canvas-sketch/node_modules/is-dom/index.js","node_modules/canvas-sketch/dist/node_modules/canvas-sketch/lib/util.js","node_modules/canvas-sketch/dist/node_modules/canvas-sketch/node_modules/repeat-string/index.js","node_modules/canvas-sketch/dist/node_modules/canvas-sketch/node_modules/deep-equal/lib/keys.js","node_modules/canvas-sketch/dist/node_modules/canvas-sketch/node_modules/deep-equal/lib/is_arguments.js","node_modules/canvas-sketch/dist/node_modules/canvas-sketch/node_modules/deep-equal/index.js","node_modules/canvas-sketch/dist/node_modules/canvas-sketch/node_modules/dateformat/lib/dateformat.js","node_modules/canvas-sketch/dist/node_modules/canvas-sketch/node_modules/pad-left/index.js","node_modules/canvas-sketch/dist/node_modules/canvas-sketch/lib/save.js","node_modules/canvas-sketch/dist/node_modules/canvas-sketch/lib/accessibility.js","node_modules/canvas-sketch/dist/node_modules/canvas-sketch/lib/paper-sizes.js","node_modules/canvas-sketch/dist/node_modules/canvas-sketch/node_modules/defined/index.js","node_modules/canvas-sketch/dist/node_modules/canvas-sketch/node_modules/convert-length/convert-length.js","node_modules/canvas-sketch/dist/node_modules/canvas-sketch/lib/distances.js","node_modules/canvas-sketch/dist/node_modules/canvas-sketch/lib/core/resizeCanvas.js","node_modules/canvas-sketch/dist/node_modules/canvas-sketch/node_modules/get-canvas-context/index.js","node_modules/canvas-sketch/dist/node_modules/canvas-sketch/lib/core/createCanvas.js","node_modules/canvas-sketch/dist/node_modules/canvas-sketch/lib/core/SketchManager.js","node_modules/canvas-sketch/dist/node_modules/canvas-sketch/lib/core/keyboardShortcuts.js","node_modules/canvas-sketch/dist/node_modules/canvas-sketch/lib/canvas-sketch.js","node_modules/decode-uri-component/index.js","node_modules/defined/index.js","node_modules/eases/sine-in.js","node_modules/query-string/index.js","node_modules/simplex-noise/simplex-noise.js","node_modules/split-on-first/index.js","node_modules/stemmer/index.js","node_modules/strict-uri-encode/index.js","node_modules/word-wrap/index.js","util/Random.js","util/bsp.js","util/findFocusWords.js","util/load-data.js","util/objectFit.js","util/prng.js","util/query.js","util/sketch.js","util/stopwords-en.json","util/tree-util.js","canvas-sketch-cli/injected/storage-key.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","query","canvasSketch","sketch","settings","shouldDownload","download","manager","Array","prototype","flat","Object","defineProperty","configurable","value","isNaN","arguments","Number","reduce","this","isArray","push","apply","slice","writable","flatMap","map","from","to","TypeError","cycle","Math","floor","defined","wrap","EPSILON","clamp","min","max","lerp","inverseLerp","abs","toFinite","defaultValue","isFinite","expandVector","dims","scalar","out","lerpArray","newArray","initialValue","mod","b","damp","lambda","dt","exp","fract","sign","degToRad","PI","radToDeg","pingPong","linspace","opts","endpoint","offset","_","lerpFrames","values","len","whole","frame","nextFrame","clamp01","v","smoothstep","x","dampArray","mapRange","inputMin","inputMax","outputMin","outputMax","outVal","expand2D","expand3D","expand4D","getOwnPropertySymbols","hasOwnProperty","propIsEnumerable","propertyIsEnumerable","objectAssign","assign","test1","String","getOwnPropertyNames","test2","fromCharCode","join","test3","split","forEach","letter","keys","err","shouldUseNative","target","source","symbols","val","toObject","s","key","browser","commonjsGlobal","performance","now","Date","isPromise_1","obj","then","isDom","window","Node","nodeType","nodeName","getClientAPI","arguments$1","isBrowser","document","cache","shim","supportsArgumentsClass","toString","supported","object","unsupported","pSlice","deepEqual","actual","expected","getTime","strict","isUndefinedOrNull","is_arguments","isBuffer","ka","kb","sort","objEquiv","copy","global","token","timezone","timezoneClip","dateFormat","date","mask","utc","gmt","undefined","toLowerCase","test","maskSlice","masks","d","D","m","y","H","M","L","getTimezoneOffset","W","targetThursday","getFullYear","getMonth","getDate","setDate","getDay","firstThursday","ds","setHours","getHours","getWeek","N","dow","getDayOfWeek","flags","dd","pad","ddd","i18n","dayNames","dddd","mm","mmm","monthNames","mmmm","yy","yyyy","h","hh","HH","MM","ss","l","round","timeNames","tt","T","TT","Z","match","pop","replace","S","default","shortDate","mediumDate","longDate","fullDate","shortTime","mediumTime","longTime","isoDate","isoTime","isoDateTime","isoUtcDateTime","expiresHeaderFormat","res","repeatString","str","num","substr","link","padLeft","ch","noop","defaultExts","extension","prefix","suffix","supportedEncodings","stream","isStart","Promise","resolve","reject","filename","resolveFilename","func","client","output","ev","saveDataURL","dataURL","splitIndex","indexOf","base64","byteString","atob","type","mimeMatch","exec","mime","ab","ArrayBuffer","ia","Uint8Array","charCodeAt","Blob","createBlobFromDataURL","blob","saveBlob","createElement","style","visibility","href","URL","createObjectURL","body","appendChild","onclick","setTimeout","revokeObjectURL","parentElement","removeChild","removeAttribute","click","opt","file","totalFrames","layerStr","totalLayers","layer","filter","Boolean","name","timeStamp","hash","commonTypos","dimension","animated","animating","unit","P5","pixellated","looping","pixelPerInch","allKeys","checkSettings","console","warn","includes","paperSizes","dict","preset","item","units","dimensions","defined$1","conversions","system","factor","cm","pt","pc","in","ft","anchors","metric","ratio","imperial","convertLength","fromUnit","toUnit","pixelsPerInch","precision","roundPixel","toFactor","fromFactor","isToPixel","fromUnitData","toUnitData","anchor","result","decimals","convertDistance$1","unitsFrom","unitsTo","resizeCanvas","props","width","height","styleWidth","styleHeight","canvasWidth","canvasHeight","hasDimensions","checkIfHasDimensions","exporting","scaleToFit","scaleToView","pixelRatio","exportPixelRatio","bleed","devicePixelRatio","basePixelRatio","maxPixelRatio","trimWidth","trimHeight","ref","element","parent","innerWidth","innerHeight","getBoundingClientRect","getParentSize","parentWidth","parentHeight","getDimensionsFromPreset","highest","lowest","orientation","landscape","realWidth","realHeight","aspect","windowAspect","scaleToFitPadding","maxWidth","maxHeight","getCanvasContext_1","canvas","gl","attribs","names","getContext","createCanvas","context","ownsCanvas","newCanvas","createCanvasElement","attributes","pixelated","imageSmoothingEnabled","mozImageSmoothingEnabled","oImageSmoothingEnabled","webkitImageSmoothingEnabled","msImageSmoothingEnabled","SketchManager","_settings","_props","_sketch","_raf","_recordTimeout","_lastRedrawResult","_isP5Resizing","_keyboardShortcuts","handler","enabled","keyCode","altKey","metaKey","ctrlKey","togglePlay","preventDefault","commit","save","addEventListener","removeEventListener","keyboardShortcuts","this$1","hotkeys","shiftKey","recording","endRecord","run","record","exportFrame","playing","pause","play","_animateHandler","animate","_resizeHandler","resize","render","get","_computePlayhead","currentTime","duration","_computeFrame","playhead","time","fps","_computeCurrentFrame","_getSizeProps","viewportWidth","viewportHeight","dispose","started","_signalBegin","tick","_cancelTimeouts","cancelAnimationFrame","_lastTime","requestAnimationFrame","error","stop","deltaTime","exportOpts","_createExportOptions","frameInterval","log","_signalEnd","beginRecord","_wrapContextScale","catch","response","begin","end","wasRecording","sequence","encoding","encodingQuality","dateformat","all","preExport","commitOpts","_doExportFrame","drawResult","concat","hasDataObject","data","toDataURL","exportCanvas","layerList","curOpt","saveParam","k","savePromise","parts","saveFile","saveResult","savedEvents","eventWithOutput","find","outputName","isClient","some","isStreaming","ofSeq","postExport","cb","_preRender","_postRender","p5","scale","scaleX","scaleY","scaleContext","restore","flush","redraw","submitDrawCall","update","notYetSupported","oldCanvas","oldContext","timeOpts","timeProps","getTimeProps","_setupGLKey","_appendCanvasIfNeeded","draw","oldSizes","newProps","pixelDensity","styleCanvas","newSizes","changed","deepEqual_1","_sizeChanged","frameIntervalMS","deltaTimeMS","hasDuration","isNewFrame","playbackRate","newTime","timeScale","isFinished","isLoopStart","loop","lastFrame","dispatch","mount","unmount","detach","ctx","clear","clearColor","bufferData","hasTotalFrames","totalFramesFromDuration","durationFromTotalFrames","Infinity","startTime","startFrame","hasStartTime","hasStartFrame","setup","loadAndRun","newSettings","load","unload","destroy","createSketch","preload","P5Constructor","p5Sketch","isGL","renderer","WEBGL","P2D","noLoop","setAttributes","_renderer","drawingContext","loader","attach","message","CACHE","runtimeCollisions","hotID","isHot","hot","id","isInjecting","previousData","cacheGet","next","oldManager","PaperSizes","singleMatcher","RegExp","multiMatcher","decodeComponents","components","decodeURIComponent","left","right","decode","input","tokens","encodedURI","replaceMap","%FE%FF","%FF%FE","entries","customDecodeURIComponent","cos","strictUriEncode","decodeComponent","splitOnFirst","validateArrayFormatSeparator","encode","options","encodeURIComponent","removeHash","hashStart","extract","queryStart","parseValue","parseNumbers","trim","parseBooleans","parse","arrayFormat","arrayFormatSeparator","formatter","accumulator","isEncodedArray","newValue","parserForArrayFormat","ret","create","param","keysSorter","stringify","shouldFilter","skipNull","isNullOrUndefined","skipEmptyString","index","encoderForArrayFormat","objectCopy","parseUrl","url","url_","parseFragmentIdentifier","fragmentIdentifier","stringifyUrl","queryFromUrl","parsedQueryFromUrl","queryString","getHash","F2","sqrt","G2","G3","F4","G4","SimplexNoise","randomOrSeed","random","s0","s1","s2","mash","alea","buildPermutationTable","perm","permMod12","aux","grad3","Float32Array","grad4","noise2D","xin","yin","i1","j1","n0","n1","n2","j","x0","y0","x1","y1","x2","y2","ii","jj","t0","gi0","t1","gi1","t2","gi2","noise3D","zin","n3","k1","i2","j2","k2","z0","z1","z2","x3","y3","z3","kk","t3","gi3","noise4D","z","w","n4","l1","l2","i3","j3","k3","l3","w0","rankx","ranky","rankz","rankw","w1","w2","w3","x4","y4","z4","w4","ll","t4","gi4","_buildPermutationTable","define","amd","string","separator","separatorIndex","firstCharacterWasLowerCaseY","sfxSsesOrIes","sfxS","sfxEED","gt0","sfxEdOrIng","vowelInStem","sfxAtOrBlOrIz","sfxMultiConsonantLike","consonantLike","sfxY","step2","step2list","step3","step3list","step4","gt1","sfxIon","sfxE","eq1","sfxLl","ational","tional","enci","anci","izer","bli","alli","entli","eli","ousli","ization","ation","ator","alism","iveness","fulness","ousness","aliti","iviti","biliti","logi","icate","ative","alize","iciti","ical","ful","ness","consonants","vowels","toUpperCase","identity","indent","newline","escape","regexString","cut","re","line","PRNG","Random","seed","generateSeedFast","prng","_nextGaussian","_hasNextGaussian","valueNonZero","boolean","chance","range","rangeFloor","pick","array","shuffle","onCircle","insideCircle","radius","onSphere","phi","theta","acos","sin","insideSphere","cbrt","quaternion","u1","u2","u3","sq1","sq2","theta1","theta2","weighted","weightedSet","set","weightedSetIndex","deck","current","[object Object]","cur","gaussian","mean","standardDerivation","v1","v2","multiplier","arr","rand","tmp","weight","weights","totalWeight","pureSeed","generateSeed","Partition","bounds","depth","copyBounds","children","cx","cy","leaf","idx","splice","bsp","cellWidth","cellHeight","rows","columns","maxDepth","minDimension","splitter","shouldSplit","variance","squariness","randomChoice","bias","pow","roundToGrid","largeEnough","part","randomRange","horizontal","inverse","off","splitBounds","roundBoundsToGrid","graph","splitPart","childBounds","bound","walk","walkNode","walkAll","stack","list","leafOnly","node","reverse","stemmer","stopwords","stopwordSet","Set","excludePOSFromFocus","tagMap","nonStops","has","best","nonVerbs","startsWith","findFocusWords","async","loadLines","resp","fetch","text","tokenize","haikusRaw","rawAssociations","seasons","cuesToTargets","Map","targetsToCues","cue","targets","seasonCue","seasonTarget","add","cues","cleanPOS","pattern","tags","tokenSet","phrases","items","verses","patterns","wordToTag","allKeywords","verse","seasonToSeasonalWords","seasonalWordsToSeasons","season","seasonKey","others","neighbours","prev","other","associated","randomWord","gatherThemes","haiku","findSeason","walkAssociations","words","sums","winter","autumn","spring","summer","exactMatches","size","matches","seasonResults","excludeClashingSeasonalWords","curSeasons","inputWords","maxIterations","minHaikus","otherSeasons","associatedWithInput","poems","settingList","filterHaiku","stanza","minAttempts","exclude","verse0","pattern0","focus","closest","verse1s","minSize","verse1","pattern1","validPatterns","chunk","second","third","farthest","verse2s","verse2","pattern2","poem","themesClose","themesFar","lineTokens","relations","inputs","assoc","relations1","relations2","related","relation","countAssociations","sum","norm","na","nb","nc","i0","intersections","score","iz0","iz1","iz2","countRelationshipLines","debug","hits","include","attempts","maxAttempts","checkChunk","nextChunks","newContext","curPattern","validPattern","sets","associatedWords","scored","word","direct","neighbs","epochs","iterations","minSteps","maxSteps","start","steps","innerLoop","isCueToTarget","childWidth","childHeight","fit","padding","offsetX","offsetY","childRatio","parentRatio","MAX_VALID_UINT32","MAX_UINT32","uint32","defaultRandom","SizeState","state","Uint32Array","UPPER_MASK","LOWER_MASK","mag01","uint32Seed","twist","next_uint32","nextIncludingOne","crypto","getRandomValues","qs","parsed","location","search","isNumber","parseQuery","MathUtil","objectFit","loadData","treeUtil","wordWrap","isFrame","page","pageNum","parseInt","isPrint","print","isStatic","showText","shouldCoverBackground","nohighlight","fonts","bold","regular","def","font","FontFace","isSVG","svg","defaultFontFamily","drawDirectToCanvas","targetScale","fontSize","textMeasuredWidth","foreground","background","corpus","jitterNoise","lastUserText","caretVisible","caretTickDelay","caretElapsed","defaultInputs","staticInput","defaultText","inputEl","selectionStart","position","opacity","top","submit","createInput","clearUserTextTimeout","textInputEnded","textInputTimer","textInputDelay","frameTickElapsed","frameTickDelay","haikus","remainingHaikus","leafs","leafsToProcess","particles","particlesLeftToDraw","infoText","canvas2","context2","needsReset","showGrid","setFont","grid","altContext","clearRect","fillStyle","fillRect","tree","traverse","getLeafNodes","labels","haikuCount","haikuCellSpots","minGrid","maxGrid","pixelBoundsToGridBounds","minCol","minRow","maxCol","maxRow","colSpace","rowSpace","space","rowLabels","fill","curWords","label","charAt","row","col","createCell","haikuIndexToSplice","haikuLoop","hi","lines","justified","remainingLines","lineOff","colStart","rowStart","willCollide","char","rowspan","allParticles","coverBackground","unshift","generateLeafs","generate","didStep","gridWidth","gridHeight","tx","ty","tw","th","translate","totalToProcessPerFrame","drawCount","drawText","strokeStyle","globalAlpha","beginPath","px","py","rect","ax","ay","moveTo","arc","stroke","drawImage","foff","infoGrid","setFontFamily","userText","curText","symbol","coverBackgroundColor","caretW","caretH","globalCompositeOperation","userPosition","pos","gridToPixel","renderFrame","svgSerialize","textWidth","texts","tokenStr","clearTimeout","fontFamily","textAlign","textBaseline","measureText","margin","paddingY","paddingOffset","ceil","currentSet","color","drawn","durationIn","durationOut","active","delay","alpha","minPx","maxPx","pixelToGridUnclamped","frameFloor","oy","sx","sy","fx","fy","doCover","sliceHeight","clip","lineWidth","strokeText","fillText","traverseDepthFirst","root","shift","traverseBreadthFirst","leafNodes","CANVAS_SKETCH_DEFAULT_STORAGE_KEY"],"mappings":"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","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","require(\"array-flat-polyfill\");\nconst query = require(\"./util/query\");\nconst canvasSketch = require(\"canvas-sketch\");\nconst { sketch, settings } = require(\"./util/sketch\");\nconst shouldDownload = query.download !== false;\n\n(async () => {\n  const manager = await canvasSketch(sketch, settings);\n\n  if (shouldDownload) manager.sketch.download();\n})();\n","Array.prototype.flat||Object.defineProperty(Array.prototype,\"flat\",{configurable:!0,value:function r(){var t=isNaN(arguments[0])?1:Number(arguments[0]);return t?Array.prototype.reduce.call(this,function(a,e){return Array.isArray(e)?a.push.apply(a,r.call(e,t-1)):a.push(e),a},[]):Array.prototype.slice.call(this)},writable:!0}),Array.prototype.flatMap||Object.defineProperty(Array.prototype,\"flatMap\",{configurable:!0,value:function(r){return Array.prototype.map.apply(this,arguments).flat()},writable:!0})\n","module.exports = wrap;\nfunction wrap (value, from, to) {\n  if (typeof from !== 'number' || typeof to !== 'number') {\n    throw new TypeError('Must specify \"to\" and \"from\" arguments as numbers');\n  }\n  // algorithm from http://stackoverflow.com/a/5852628/599884\n  if (from > to) {\n    var t = from;\n    from = to;\n    to = t;\n  }\n  var cycle = to - from;\n  if (cycle === 0) {\n    return to;\n  }\n  return value - cycle * Math.floor((value - from) / cycle);\n}\n","var defined = require('defined');\nvar wrap = require('./lib/wrap');\nvar EPSILON = Number.EPSILON;\n\nfunction clamp (value, min, max) {\n  return min < max\n    ? (value < min ? min : value > max ? max : value)\n    : (value < max ? max : value > min ? min : value);\n}\n\nfunction clamp01 (v) {\n  return clamp(v, 0, 1);\n}\n\nfunction lerp (min, max, t) {\n  return min * (1 - t) + max * t;\n}\n\nfunction inverseLerp (min, max, t) {\n  if (Math.abs(min - max) < EPSILON) return 0;\n  else return (t - min) / (max - min);\n}\n\nfunction smoothstep (min, max, t) {\n  var x = clamp(inverseLerp(min, max, t), 0, 1);\n  return x * x * (3 - 2 * x);\n}\n\nfunction toFinite (n, defaultValue) {\n  defaultValue = defined(defaultValue, 0);\n  return typeof n === 'number' && isFinite(n) ? n : defaultValue;\n}\n\nfunction expandVector (dims) {\n  if (typeof dims !== 'number') throw new TypeError('Expected dims argument');\n  return function (p, defaultValue) {\n    defaultValue = defined(defaultValue, 0);\n    var scalar;\n    if (p == null) {\n      // No vector, create a default one\n      scalar = defaultValue;\n    } else if (typeof p === 'number' && isFinite(p)) {\n      // Expand single channel to multiple vector\n      scalar = p;\n    }\n\n    var out = [];\n    var i;\n    if (scalar == null) {\n      for (i = 0; i < dims; i++) {\n        out[i] = toFinite(p[i], defaultValue);\n      }\n    } else {\n      for (i = 0; i < dims; i++) {\n        out[i] = scalar;\n      }\n    }\n    return out;\n  };\n}\n\nfunction lerpArray (min, max, t, out) {\n  out = out || [];\n  if (min.length !== max.length) {\n    throw new TypeError('min and max array are expected to have the same length');\n  }\n  for (var i = 0; i < min.length; i++) {\n    out[i] = lerp(min[i], max[i], t);\n  }\n  return out;\n}\n\nfunction newArray (n, initialValue) {\n  n = defined(n, 0);\n  if (typeof n !== 'number') throw new TypeError('Expected n argument to be a number');\n  var out = [];\n  for (var i = 0; i < n; i++) out.push(initialValue);\n  return out;\n}\n\nfunction linspace (n, opts) {\n  n = defined(n, 0);\n  if (typeof n !== 'number') throw new TypeError('Expected n argument to be a number');\n  opts = opts || {};\n  if (typeof opts === 'boolean') {\n    opts = { endpoint: true };\n  }\n  var offset = defined(opts.offset, 0);\n  if (opts.endpoint) {\n    return newArray(n).map(function (_, i) {\n      return n <= 1 ? 0 : ((i + offset) / (n - 1));\n    });\n  } else {\n    return newArray(n).map(function (_, i) {\n      return (i + offset) / n;\n    });\n  }\n}\n\nfunction lerpFrames (values, t, out) {\n  t = clamp(t, 0, 1);\n\n  var len = values.length - 1;\n  var whole = t * len;\n  var frame = Math.floor(whole);\n  var fract = whole - frame;\n\n  var nextFrame = Math.min(frame + 1, len);\n  var a = values[frame % values.length];\n  var b = values[nextFrame % values.length];\n  if (typeof a === 'number' && typeof b === 'number') {\n    return lerp(a, b, fract);\n  } else if (Array.isArray(a) && Array.isArray(b)) {\n    return lerpArray(a, b, fract, out);\n  } else {\n    throw new TypeError('Mismatch in value type of two array elements: ' + frame + ' and ' + nextFrame);\n  }\n}\n\nfunction mod (a, b) {\n  return ((a % b) + b) % b;\n}\n\nfunction degToRad (n) {\n  return n * Math.PI / 180;\n}\n\nfunction radToDeg (n) {\n  return n * 180 / Math.PI;\n}\n\nfunction fract (n) {\n  return n - Math.floor(n);\n}\n\nfunction sign (n) {\n  if (n > 0) return 1;\n  else if (n < 0) return -1;\n  else return 0;\n}\n\n// Specific function from Unity / ofMath, not sure its needed?\n// function lerpWrap (a, b, t, min, max) {\n//   return wrap(a + wrap(b - a, min, max) * t, min, max)\n// }\n\nfunction pingPong (t, length) {\n  t = mod(t, length * 2);\n  return length - Math.abs(t - length);\n}\n\nfunction damp (a, b, lambda, dt) {\n  return lerp(a, b, 1 - Math.exp(-lambda * dt));\n}\n\nfunction dampArray (a, b, lambda, dt, out) {\n  out = out || [];\n  for (var i = 0; i < a.length; i++) {\n    out[i] = damp(a[i], b[i], lambda, dt);\n  }\n  return out;\n}\n\nfunction mapRange (value, inputMin, inputMax, outputMin, outputMax, clamp) {\n  // Reference:\n  // https://openframeworks.cc/documentation/math/ofMath/\n  if (Math.abs(inputMin - inputMax) < EPSILON) {\n    return outputMin;\n  } else {\n    var outVal = ((value - inputMin) / (inputMax - inputMin) * (outputMax - outputMin) + outputMin);\n    if (clamp) {\n      if (outputMax < outputMin) {\n        if (outVal < outputMax) outVal = outputMax;\n        else if (outVal > outputMin) outVal = outputMin;\n      } else {\n        if (outVal > outputMax) outVal = outputMax;\n        else if (outVal < outputMin) outVal = outputMin;\n      }\n    }\n    return outVal;\n  }\n}\n\nmodule.exports = {\n  mod: mod,\n  fract: fract,\n  sign: sign,\n  degToRad: degToRad,\n  radToDeg: radToDeg,\n  wrap: wrap,\n  pingPong: pingPong,\n  linspace: linspace,\n  lerp: lerp,\n  lerpArray: lerpArray,\n  inverseLerp: inverseLerp,\n  lerpFrames: lerpFrames,\n  clamp: clamp,\n  clamp01: clamp01,\n  smoothstep: smoothstep,\n  damp: damp,\n  dampArray: dampArray,\n  mapRange: mapRange,\n  expand2D: expandVector(2),\n  expand3D: expandVector(3),\n  expand4D: expandVector(4)\n};\n","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","module.exports =\n  global.performance &&\n  global.performance.now ? function now() {\n    return performance.now()\n  } : Date.now || function now() {\n    return +new Date\n  }\n","module.exports = isPromise;\n\nfunction isPromise(obj) {\n  return !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof obj.then === 'function';\n}\n","module.exports = isNode\n\nfunction isNode (val) {\n  return (!val || typeof val !== 'object')\n    ? false\n    : (typeof window === 'object' && typeof window.Node === 'object')\n      ? (val instanceof window.Node)\n      : (typeof val.nodeType === 'number') &&\n        (typeof val.nodeName === 'string')\n}\n","// TODO: We can remove a huge chunk of bundle size by using a smaller\n// utility module for converting units.\nimport isDOM from 'is-dom';\n\nexport function getClientAPI () {\n  return typeof window !== 'undefined' && window['canvas-sketch-cli'];\n}\n\nexport function defined () {\n  for (let i = 0; i < arguments.length; i++) {\n    if (arguments[i] != null) {\n      return arguments[i];\n    }\n  }\n  return undefined;\n}\n\nexport function isBrowser () {\n  return typeof document !== 'undefined';\n}\n\nexport function isWebGLContext (ctx) {\n  return typeof ctx.clear === 'function' && typeof ctx.clearColor === 'function' && typeof ctx.bufferData === 'function';\n}\n\nexport function isCanvas (element) {\n  return isDOM(element) && /canvas/i.test(element.nodeName) && typeof element.getContext === 'function';\n}\n","/*!\n * repeat-string <https://github.com/jonschlinkert/repeat-string>\n *\n * Copyright (c) 2014-2015, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\n'use strict';\n\n/**\n * Results cache\n */\n\nvar res = '';\nvar cache;\n\n/**\n * Expose `repeat`\n */\n\nmodule.exports = repeat;\n\n/**\n * Repeat the given `string` the specified `number`\n * of times.\n *\n * **Example:**\n *\n * ```js\n * var repeat = require('repeat-string');\n * repeat('A', 5);\n * //=> AAAAA\n * ```\n *\n * @param {String} `string` The string to repeat\n * @param {Number} `number` The number of times to repeat the string\n * @return {String} Repeated string\n * @api public\n */\n\nfunction repeat(str, num) {\n  if (typeof str !== 'string') {\n    throw new TypeError('expected a string');\n  }\n\n  // cover common, quick use cases\n  if (num === 1) return str;\n  if (num === 2) return str + str;\n\n  var max = str.length * num;\n  if (cache !== str || typeof cache === 'undefined') {\n    cache = str;\n    res = '';\n  } else if (res.length >= max) {\n    return res.substr(0, max);\n  }\n\n  while (max > res.length && num > 1) {\n    if (num & 1) {\n      res += str;\n    }\n\n    num >>= 1;\n    str += str;\n  }\n\n  res += str;\n  res = res.substr(0, max);\n  return res;\n}\n","exports = module.exports = typeof Object.keys === 'function'\n  ? Object.keys : shim;\n\nexports.shim = shim;\nfunction shim (obj) {\n  var keys = [];\n  for (var key in obj) keys.push(key);\n  return keys;\n}\n","var supportsArgumentsClass = (function(){\n  return Object.prototype.toString.call(arguments)\n})() == '[object Arguments]';\n\nexports = module.exports = supportsArgumentsClass ? supported : unsupported;\n\nexports.supported = supported;\nfunction supported(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n};\n\nexports.unsupported = unsupported;\nfunction unsupported(object){\n  return object &&\n    typeof object == 'object' &&\n    typeof object.length == 'number' &&\n    Object.prototype.hasOwnProperty.call(object, 'callee') &&\n    !Object.prototype.propertyIsEnumerable.call(object, 'callee') ||\n    false;\n};\n","var pSlice = Array.prototype.slice;\nvar objectKeys = require('./lib/keys.js');\nvar isArguments = require('./lib/is_arguments.js');\n\nvar deepEqual = module.exports = function (actual, expected, opts) {\n  if (!opts) opts = {};\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n\n  } else if (actual instanceof Date && expected instanceof Date) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if (!actual || !expected || typeof actual != 'object' && typeof expected != 'object') {\n    return opts.strict ? actual === expected : actual == expected;\n\n  // 7.4. For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else {\n    return objEquiv(actual, expected, opts);\n  }\n}\n\nfunction isUndefinedOrNull(value) {\n  return value === null || value === undefined;\n}\n\nfunction isBuffer (x) {\n  if (!x || typeof x !== 'object' || typeof x.length !== 'number') return false;\n  if (typeof x.copy !== 'function' || typeof x.slice !== 'function') {\n    return false;\n  }\n  if (x.length > 0 && typeof x[0] !== 'number') return false;\n  return true;\n}\n\nfunction objEquiv(a, b, opts) {\n  var i, key;\n  if (isUndefinedOrNull(a) || isUndefinedOrNull(b))\n    return false;\n  // an identical 'prototype' property.\n  if (a.prototype !== b.prototype) return false;\n  //~~~I've managed to break Object.keys through screwy arguments passing.\n  //   Converting to array solves the problem.\n  if (isArguments(a)) {\n    if (!isArguments(b)) {\n      return false;\n    }\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return deepEqual(a, b, opts);\n  }\n  if (isBuffer(a)) {\n    if (!isBuffer(b)) {\n      return false;\n    }\n    if (a.length !== b.length) return false;\n    for (i = 0; i < a.length; i++) {\n      if (a[i] !== b[i]) return false;\n    }\n    return true;\n  }\n  try {\n    var ka = objectKeys(a),\n        kb = objectKeys(b);\n  } catch (e) {//happens when one is a string literal and the other isn't\n    return false;\n  }\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length != kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] != kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!deepEqual(a[key], b[key], opts)) return false;\n  }\n  return typeof a === typeof b;\n}\n","/*\n * Date Format 1.2.3\n * (c) 2007-2009 Steven Levithan <stevenlevithan.com>\n * MIT license\n *\n * Includes enhancements by Scott Trenda <scott.trenda.net>\n * and Kris Kowal <cixar.com/~kris.kowal/>\n *\n * Accepts a date, a mask, or a date and a mask.\n * Returns a formatted version of the given date.\n * The date defaults to the current date/time.\n * The mask defaults to dateFormat.masks.default.\n */\n\n(function(global) {\n  'use strict';\n\n  var dateFormat = (function() {\n      var token = /d{1,4}|m{1,4}|yy(?:yy)?|([HhMsTt])\\1?|[LloSZWN]|\"[^\"]*\"|'[^']*'/g;\n      var timezone = /\\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\\d{4})?)\\b/g;\n      var timezoneClip = /[^-+\\dA-Z]/g;\n  \n      // Regexes and supporting functions are cached through closure\n      return function (date, mask, utc, gmt) {\n  \n        // You can't provide utc if you skip other args (use the 'UTC:' mask prefix)\n        if (arguments.length === 1 && kindOf(date) === 'string' && !/\\d/.test(date)) {\n          mask = date;\n          date = undefined;\n        }\n  \n        date = date || new Date;\n  \n        if(!(date instanceof Date)) {\n          date = new Date(date);\n        }\n  \n        if (isNaN(date)) {\n          throw TypeError('Invalid date');\n        }\n  \n        mask = String(dateFormat.masks[mask] || mask || dateFormat.masks['default']);\n  \n        // Allow setting the utc/gmt argument via the mask\n        var maskSlice = mask.slice(0, 4);\n        if (maskSlice === 'UTC:' || maskSlice === 'GMT:') {\n          mask = mask.slice(4);\n          utc = true;\n          if (maskSlice === 'GMT:') {\n            gmt = true;\n          }\n        }\n  \n        var _ = utc ? 'getUTC' : 'get';\n        var d = date[_ + 'Date']();\n        var D = date[_ + 'Day']();\n        var m = date[_ + 'Month']();\n        var y = date[_ + 'FullYear']();\n        var H = date[_ + 'Hours']();\n        var M = date[_ + 'Minutes']();\n        var s = date[_ + 'Seconds']();\n        var L = date[_ + 'Milliseconds']();\n        var o = utc ? 0 : date.getTimezoneOffset();\n        var W = getWeek(date);\n        var N = getDayOfWeek(date);\n        var flags = {\n          d:    d,\n          dd:   pad(d),\n          ddd:  dateFormat.i18n.dayNames[D],\n          dddd: dateFormat.i18n.dayNames[D + 7],\n          m:    m + 1,\n          mm:   pad(m + 1),\n          mmm:  dateFormat.i18n.monthNames[m],\n          mmmm: dateFormat.i18n.monthNames[m + 12],\n          yy:   String(y).slice(2),\n          yyyy: y,\n          h:    H % 12 || 12,\n          hh:   pad(H % 12 || 12),\n          H:    H,\n          HH:   pad(H),\n          M:    M,\n          MM:   pad(M),\n          s:    s,\n          ss:   pad(s),\n          l:    pad(L, 3),\n          L:    pad(Math.round(L / 10)),\n          t:    H < 12 ? dateFormat.i18n.timeNames[0] : dateFormat.i18n.timeNames[1],\n          tt:   H < 12 ? dateFormat.i18n.timeNames[2] : dateFormat.i18n.timeNames[3],\n          T:    H < 12 ? dateFormat.i18n.timeNames[4] : dateFormat.i18n.timeNames[5],\n          TT:   H < 12 ? dateFormat.i18n.timeNames[6] : dateFormat.i18n.timeNames[7],\n          Z:    gmt ? 'GMT' : utc ? 'UTC' : (String(date).match(timezone) || ['']).pop().replace(timezoneClip, ''),\n          o:    (o > 0 ? '-' : '+') + pad(Math.floor(Math.abs(o) / 60) * 100 + Math.abs(o) % 60, 4),\n          S:    ['th', 'st', 'nd', 'rd'][d % 10 > 3 ? 0 : (d % 100 - d % 10 != 10) * d % 10],\n          W:    W,\n          N:    N\n        };\n  \n        return mask.replace(token, function (match) {\n          if (match in flags) {\n            return flags[match];\n          }\n          return match.slice(1, match.length - 1);\n        });\n      };\n    })();\n\n  dateFormat.masks = {\n    'default':               'ddd mmm dd yyyy HH:MM:ss',\n    'shortDate':             'm/d/yy',\n    'mediumDate':            'mmm d, yyyy',\n    'longDate':              'mmmm d, yyyy',\n    'fullDate':              'dddd, mmmm d, yyyy',\n    'shortTime':             'h:MM TT',\n    'mediumTime':            'h:MM:ss TT',\n    'longTime':              'h:MM:ss TT Z',\n    'isoDate':               'yyyy-mm-dd',\n    'isoTime':               'HH:MM:ss',\n    'isoDateTime':           'yyyy-mm-dd\\'T\\'HH:MM:sso',\n    'isoUtcDateTime':        'UTC:yyyy-mm-dd\\'T\\'HH:MM:ss\\'Z\\'',\n    'expiresHeaderFormat':   'ddd, dd mmm yyyy HH:MM:ss Z'\n  };\n\n  // Internationalization strings\n  dateFormat.i18n = {\n    dayNames: [\n      'Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat',\n      'Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'\n    ],\n    monthNames: [\n      'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec',\n      'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'\n    ],\n    timeNames: [\n      'a', 'p', 'am', 'pm', 'A', 'P', 'AM', 'PM'\n    ]\n  };\n\nfunction pad(val, len) {\n  val = String(val);\n  len = len || 2;\n  while (val.length < len) {\n    val = '0' + val;\n  }\n  return val;\n}\n\n/**\n * Get the ISO 8601 week number\n * Based on comments from\n * http://techblog.procurios.nl/k/n618/news/view/33796/14863/Calculate-ISO-8601-week-and-year-in-javascript.html\n *\n * @param  {Object} `date`\n * @return {Number}\n */\nfunction getWeek(date) {\n  // Remove time components of date\n  var targetThursday = new Date(date.getFullYear(), date.getMonth(), date.getDate());\n\n  // Change date to Thursday same week\n  targetThursday.setDate(targetThursday.getDate() - ((targetThursday.getDay() + 6) % 7) + 3);\n\n  // Take January 4th as it is always in week 1 (see ISO 8601)\n  var firstThursday = new Date(targetThursday.getFullYear(), 0, 4);\n\n  // Change date to Thursday same week\n  firstThursday.setDate(firstThursday.getDate() - ((firstThursday.getDay() + 6) % 7) + 3);\n\n  // Check if daylight-saving-time-switch occurred and correct for it\n  var ds = targetThursday.getTimezoneOffset() - firstThursday.getTimezoneOffset();\n  targetThursday.setHours(targetThursday.getHours() - ds);\n\n  // Number of weeks between target Thursday and first Thursday\n  var weekDiff = (targetThursday - firstThursday) / (86400000*7);\n  return 1 + Math.floor(weekDiff);\n}\n\n/**\n * Get ISO-8601 numeric representation of the day of the week\n * 1 (for Monday) through 7 (for Sunday)\n * \n * @param  {Object} `date`\n * @return {Number}\n */\nfunction getDayOfWeek(date) {\n  var dow = date.getDay();\n  if(dow === 0) {\n    dow = 7;\n  }\n  return dow;\n}\n\n/**\n * kind-of shortcut\n * @param  {*} val\n * @return {String}\n */\nfunction kindOf(val) {\n  if (val === null) {\n    return 'null';\n  }\n\n  if (val === undefined) {\n    return 'undefined';\n  }\n\n  if (typeof val !== 'object') {\n    return typeof val;\n  }\n\n  if (Array.isArray(val)) {\n    return 'array';\n  }\n\n  return {}.toString.call(val)\n    .slice(8, -1).toLowerCase();\n};\n\n\n\n  if (typeof define === 'function' && define.amd) {\n    define(function () {\n      return dateFormat;\n    });\n  } else if (typeof exports === 'object') {\n    module.exports = dateFormat;\n  } else {\n    global.dateFormat = dateFormat;\n  }\n})(this);\n","/*!\n * pad-left <https://github.com/jonschlinkert/pad-left>\n *\n * Copyright (c) 2014-2015, Jon Schlinkert.\n * Licensed under the MIT license.\n */\n\n'use strict';\n\nvar repeat = require('repeat-string');\n\nmodule.exports = function padLeft(str, num, ch) {\n  str = str.toString();\n\n  if (typeof num === 'undefined') {\n    return str;\n  }\n\n  if (ch === 0) {\n    ch = '0';\n  } else if (ch) {\n    ch = ch.toString();\n  } else {\n    ch = ' ';\n  }\n\n  return repeat(ch, num - str.length) + str;\n};\n","import dateformat from 'dateformat';\nimport assign from 'object-assign';\nimport padLeft from 'pad-left';\nimport { getClientAPI } from './util';\n\nconst noop = () => {};\nlet link;\nlet defaultExts = { extension: '', prefix: '', suffix: '' };\n\n// Alternative solution for saving files,\n// a bit slower and does not work in Safari\n// function fetchBlobFromDataURL (dataURL) {\n//   return window.fetch(dataURL).then(res => res.blob());\n// }\n\nconst supportedEncodings = [\n  'image/png',\n  'image/jpeg',\n  'image/webp'\n];\n\nfunction stream (isStart, opts = {}) {\n  return new Promise((resolve, reject) => {\n    opts = assign({}, defaultExts, opts);\n    const filename = resolveFilename(Object.assign({}, opts, {\n      extension: '',\n      frame: undefined\n    }));\n    const func = isStart ? 'streamStart' : 'streamEnd';\n    const client = getClientAPI();\n    if (client && client.output && typeof client[func] === 'function') {\n      return client[func](assign({}, opts, { filename }))\n        .then(ev => resolve(ev));\n    } else {\n      return resolve({ filename, client: false });\n    }\n  });\n}\n\nexport function streamStart (opts = {}) {\n  return stream(true, opts);\n}\n\nexport function streamEnd (opts = {}) {\n  return stream(false, opts);\n}\n\nexport function exportCanvas (canvas, opt = {}) {\n  const encoding = opt.encoding || 'image/png';\n  if (!supportedEncodings.includes(encoding)) throw new Error(`Invalid canvas encoding ${encoding}`);\n  let extension = (encoding.split('/')[1] || '').replace(/jpeg/i, 'jpg');\n  if (extension) extension = `.${extension}`.toLowerCase();\n  return {\n    extension,\n    type: encoding,\n    dataURL: canvas.toDataURL(encoding, opt.encodingQuality)\n  };\n}\n\nfunction createBlobFromDataURL (dataURL) {\n  return new Promise((resolve) => {\n    const splitIndex = dataURL.indexOf(',');\n    if (splitIndex === -1) {\n      resolve(new window.Blob());\n      return;\n    }\n    const base64 = dataURL.slice(splitIndex + 1);\n    const byteString = window.atob(base64);\n    const type = dataURL.slice(0, splitIndex);\n    const mimeMatch = /data:([^;]+)/.exec(type);\n    const mime = (mimeMatch ? mimeMatch[1] : '') || undefined;\n    const ab = new ArrayBuffer(byteString.length);\n    const ia = new Uint8Array(ab);\n    for (var i = 0; i < byteString.length; i++) {\n      ia[i] = byteString.charCodeAt(i);\n    }\n    resolve(new window.Blob([ ab ], { type: mime }));\n  });\n}\n\nexport function saveDataURL (dataURL, opts = {}) {\n  return createBlobFromDataURL(dataURL)\n    .then(blob => saveBlob(blob, opts));\n}\n\nexport function saveBlob (blob, opts = {}) {\n  return new Promise(resolve => {\n    opts = assign({}, defaultExts, opts);\n    const filename = opts.filename;\n\n    const client = getClientAPI();\n    if (client && typeof client.saveBlob === 'function' && client.output) {\n      // native saving using a CLI tool\n      return client.saveBlob(blob, assign({}, opts, { filename }))\n        .then(ev => resolve(ev));\n    } else {\n      // force download\n      if (!link) {\n        link = document.createElement('a');\n        link.style.visibility = 'hidden';\n        link.target = '_blank';\n      }\n      link.download = filename;\n      link.href = window.URL.createObjectURL(blob);\n      document.body.appendChild(link);\n      link.onclick = () => {\n        link.onclick = noop;\n        setTimeout(() => {\n          window.URL.revokeObjectURL(blob);\n          if (link.parentElement) link.parentElement.removeChild(link);\n          link.removeAttribute('href');\n          resolve({ filename, client: false });\n        });\n      };\n      link.click();\n    }\n  });\n}\n\nexport function saveFile (data, opts = {}) {\n  const parts = Array.isArray(data) ? data : [ data ];\n  const blob = new window.Blob(parts, { type: opts.type || '' });\n  return saveBlob(blob, opts);\n}\n\nexport function getTimeStamp () {\n  const dateFormatStr = `yyyy.mm.dd-HH.MM.ss`;\n  return dateformat(new Date(), dateFormatStr);\n}\n\nexport function getDefaultFile (prefix = '', suffix = '', ext) {\n  // const dateFormatStr = `yyyy.mm.dd-HH.MM.ss`;\n  const dateFormatStr = `yyyy-mm-dd 'at' h.MM.ss TT`;\n  return `${prefix}${dateformat(new Date(), dateFormatStr)}${suffix}${ext}`;\n}\n\nexport function resolveFilename (opt = {}) {\n  opt = assign({}, opt);\n\n  // Custom filename function\n  if (typeof opt.file === 'function') {\n    return opt.file(opt);\n  } else if (opt.file) {\n    return opt.file;\n  }\n\n  let frame = null;\n  let extension = '';\n  if (typeof opt.extension === 'string') extension = opt.extension;\n\n  if (typeof opt.frame === 'number') {\n    let totalFrames;\n    if (typeof opt.totalFrames === 'number') {\n      totalFrames = opt.totalFrames;\n    } else {\n      totalFrames = Math.max(10000, opt.frame);\n    }\n    frame = padLeft(String(opt.frame), String(totalFrames).length, '0');\n  }\n\n  const layerStr = isFinite(opt.totalLayers) && isFinite(opt.layer) && opt.totalLayers > 1 ? `${opt.layer}` : '';\n  if (frame != null) {\n    return [ layerStr, frame ].filter(Boolean).join('-') + extension;\n  } else {\n    const defaultFileName = opt.timeStamp;\n    return [ opt.prefix, opt.name || defaultFileName, layerStr, opt.hash, opt.suffix ].filter(Boolean).join('-') + extension;\n  }\n}\n","// Handle some common typos\nconst commonTypos = {\n  dimension: 'dimensions',\n  animated: 'animate',\n  animating: 'animate',\n  unit: 'units',\n  P5: 'p5',\n  pixellated: 'pixelated',\n  looping: 'loop',\n  pixelPerInch: 'pixels'\n};\n\n// Handle all other typos\nconst allKeys = [\n  'dimensions', 'units', 'pixelsPerInch', 'orientation',\n  'scaleToFit', 'scaleToView', 'bleed', 'pixelRatio',\n  'exportPixelRatio', 'maxPixelRatio', 'scaleContext',\n  'resizeCanvas', 'styleCanvas', 'canvas', 'context', 'attributes',\n  'parent', 'file', 'name', 'prefix', 'suffix', 'animate', 'playing',\n  'loop', 'duration', 'totalFrames', 'fps', 'playbackRate', 'timeScale',\n  'frame', 'time', 'flush', 'pixelated', 'hotkeys', 'p5', 'id',\n  'scaleToFitPadding', 'data', 'params', 'encoding', 'encodingQuality'\n];\n\n// This is fairly opinionated and forces users to use the 'data' parameter\n// if they want to pass along non-setting objects...\nexport const checkSettings = (settings) => {\n  const keys = Object.keys(settings);\n  keys.forEach(key => {\n    if (key in commonTypos) {\n      const actual = commonTypos[key];\n      console.warn(`[canvas-sketch] Could not recognize the setting \"${key}\", did you mean \"${actual}\"?`);\n    } else if (!allKeys.includes(key)) {\n      console.warn(`[canvas-sketch] Could not recognize the setting \"${key}\"`);\n    }\n  });\n};\n","const defaultUnits = 'mm';\n\nconst data = [\n  // Common Paper Sizes\n  // (Mostly North-American based)\n  [ 'postcard', 101.6, 152.4 ],\n  [ 'poster-small', 280, 430 ],\n  [ 'poster', 460, 610 ],\n  [ 'poster-large', 610, 910 ],\n  [ 'business-card', 50.8, 88.9 ],\n\n  // Photographic Print Paper Sizes\n  [ '2r', 64, 89 ],\n  [ '3r', 89, 127 ],\n  [ '4r', 102, 152 ],\n  [ '5r', 127, 178 ], // 5″x7″\n  [ '6r', 152, 203 ], // 6″x8″\n  [ '8r', 203, 254 ], // 8″x10″\n  [ '10r', 254, 305 ], // 10″x12″\n  [ '11r', 279, 356 ], // 11″x14″\n  [ '12r', 305, 381 ],\n\n  // Standard Paper Sizes\n  [ 'a0', 841, 1189 ],\n  [ 'a1', 594, 841 ],\n  [ 'a2', 420, 594 ],\n  [ 'a3', 297, 420 ],\n  [ 'a4', 210, 297 ],\n  [ 'a5', 148, 210 ],\n  [ 'a6', 105, 148 ],\n  [ 'a7', 74, 105 ],\n  [ 'a8', 52, 74 ],\n  [ 'a9', 37, 52 ],\n  [ 'a10', 26, 37 ],\n  [ '2a0', 1189, 1682 ],\n  [ '4a0', 1682, 2378 ],\n  [ 'b0', 1000, 1414 ],\n  [ 'b1', 707, 1000 ],\n  [ 'b1+', 720, 1020 ],\n  [ 'b2', 500, 707 ],\n  [ 'b2+', 520, 720 ],\n  [ 'b3', 353, 500 ],\n  [ 'b4', 250, 353 ],\n  [ 'b5', 176, 250 ],\n  [ 'b6', 125, 176 ],\n  [ 'b7', 88, 125 ],\n  [ 'b8', 62, 88 ],\n  [ 'b9', 44, 62 ],\n  [ 'b10', 31, 44 ],\n  [ 'b11', 22, 32 ],\n  [ 'b12', 16, 22 ],\n  [ 'c0', 917, 1297 ],\n  [ 'c1', 648, 917 ],\n  [ 'c2', 458, 648 ],\n  [ 'c3', 324, 458 ],\n  [ 'c4', 229, 324 ],\n  [ 'c5', 162, 229 ],\n  [ 'c6', 114, 162 ],\n  [ 'c7', 81, 114 ],\n  [ 'c8', 57, 81 ],\n  [ 'c9', 40, 57 ],\n  [ 'c10', 28, 40 ],\n  [ 'c11', 22, 32 ],\n  [ 'c12', 16, 22 ],\n\n  // Use inches for North American sizes,\n  // as it produces less float precision errors\n  [ 'half-letter', 5.5, 8.5, 'in' ],\n  [ 'letter', 8.5, 11, 'in' ],\n  [ 'legal', 8.5, 14, 'in' ],\n  [ 'junior-legal', 5, 8, 'in' ],\n  [ 'ledger', 11, 17, 'in' ],\n  [ 'tabloid', 11, 17, 'in' ],\n  [ 'ansi-a', 8.5, 11.0, 'in' ],\n  [ 'ansi-b', 11.0, 17.0, 'in' ],\n  [ 'ansi-c', 17.0, 22.0, 'in' ],\n  [ 'ansi-d', 22.0, 34.0, 'in' ],\n  [ 'ansi-e', 34.0, 44.0, 'in' ],\n  [ 'arch-a', 9, 12, 'in' ],\n  [ 'arch-b', 12, 18, 'in' ],\n  [ 'arch-c', 18, 24, 'in' ],\n  [ 'arch-d', 24, 36, 'in' ],\n  [ 'arch-e', 36, 48, 'in' ],\n  [ 'arch-e1', 30, 42, 'in' ],\n  [ 'arch-e2', 26, 38, 'in' ],\n  [ 'arch-e3', 27, 39, 'in' ]\n];\n\nexport default data.reduce((dict, preset) => {\n  const item = {\n    units: preset[3] || defaultUnits,\n    dimensions: [ preset[1], preset[2] ]\n  };\n  dict[preset[0]] = item;\n  dict[preset[0].replace(/-/g, ' ')] = item;\n  return dict;\n}, {});\n","module.exports = function () {\n    for (var i = 0; i < arguments.length; i++) {\n        if (arguments[i] !== undefined) return arguments[i];\n    }\n};\n","var defined = require('defined');\nvar units = [ 'mm', 'cm', 'm', 'pc', 'pt', 'in', 'ft', 'px' ];\n\nvar conversions = {\n  // metric\n  m: {\n    system: 'metric',\n    factor: 1\n  },\n  cm: {\n    system: 'metric',\n    factor: 1 / 100\n  },\n  mm: {\n    system: 'metric',\n    factor: 1 / 1000\n  },\n  // imperial\n  pt: {\n    system: 'imperial',\n    factor: 1 / 72\n  },\n  pc: {\n    system: 'imperial',\n    factor: 1 / 6\n  },\n  in: {\n    system: 'imperial',\n    factor: 1\n  },\n  ft: {\n    system: 'imperial',\n    factor: 12\n  }\n};\n\nconst anchors = {\n  metric: {\n    unit: 'm',\n    ratio: 1 / 0.0254\n  },\n  imperial: {\n    unit: 'in',\n    ratio: 0.0254\n  }\n};\n\nfunction round (value, decimals) {\n  return Number(Math.round(value + 'e' + decimals) + 'e-' + decimals);\n}\n\nfunction convertDistance (value, fromUnit, toUnit, opts) {\n  if (typeof value !== 'number' || !isFinite(value)) throw new Error('Value must be a finite number');\n  if (!fromUnit || !toUnit) throw new Error('Must specify from and to units');\n\n  opts = opts || {};\n  var pixelsPerInch = defined(opts.pixelsPerInch, 96);\n  var precision = opts.precision;\n  var roundPixel = opts.roundPixel !== false;\n\n  fromUnit = fromUnit.toLowerCase();\n  toUnit = toUnit.toLowerCase();\n\n  if (units.indexOf(fromUnit) === -1) throw new Error('Invalid from unit \"' + fromUnit + '\", must be one of: ' + units.join(', '));\n  if (units.indexOf(toUnit) === -1) throw new Error('Invalid from unit \"' + toUnit + '\", must be one of: ' + units.join(', '));\n\n  if (fromUnit === toUnit) {\n    // We don't need to convert from A to B since they are the same already\n    return value;\n  }\n\n  var toFactor = 1;\n  var fromFactor = 1;\n  var isToPixel = false;\n\n  if (fromUnit === 'px') {\n    fromFactor = 1 / pixelsPerInch;\n    fromUnit = 'in';\n  }\n  if (toUnit === 'px') {\n    isToPixel = true;\n    toFactor = pixelsPerInch;\n    toUnit = 'in';\n  }\n\n  var fromUnitData = conversions[fromUnit];\n  var toUnitData = conversions[toUnit];\n\n  // source to anchor inside source's system\n  var anchor = value * fromUnitData.factor * fromFactor;\n\n  // if systems differ, convert one to another\n  if (fromUnitData.system !== toUnitData.system) {\n    // regular 'm' to 'in' and so forth\n    anchor *= anchors[fromUnitData.system].ratio;\n  }\n\n  var result = anchor / toUnitData.factor * toFactor;\n  if (isToPixel && roundPixel) {\n    result = Math.round(result);\n  } else if (typeof precision === 'number' && isFinite(precision)) {\n    result = round(result, precision);\n  }\n  return result;\n}\n\nmodule.exports = convertDistance;\nmodule.exports.units = units;\n","import paperSizes from './paper-sizes';\nimport convertLength from 'convert-length';\n\nexport function getDimensionsFromPreset (dimensions, unitsTo = 'px', pixelsPerInch = 72) {\n  if (typeof dimensions === 'string') {\n    const key = dimensions.toLowerCase();\n    if (!(key in paperSizes)) {\n      throw new Error(`The dimension preset \"${dimensions}\" is not supported or could not be found; try using a4, a3, postcard, letter, etc.`)\n    }\n    const preset = paperSizes[key];\n    return preset.dimensions.map(d => {\n      return convertDistance(d, preset.units, unitsTo, pixelsPerInch);\n    });\n  } else {\n    return dimensions;\n  }\n}\n\nexport function convertDistance (dimension, unitsFrom = 'px', unitsTo = 'px', pixelsPerInch = 72) {\n  return convertLength(dimension, unitsFrom, unitsTo, {\n    pixelsPerInch,\n    precision: 4,\n    roundPixel: true\n  });\n}\n","import { getDimensionsFromPreset, convertDistance } from '../distances';\nimport { isBrowser, defined } from '../util';\n\nfunction checkIfHasDimensions (settings) {\n  if (!settings.dimensions) return false;\n  if (typeof settings.dimensions === 'string') return true;\n  if (Array.isArray(settings.dimensions) && settings.dimensions.length >= 2) return true;\n  return false;\n}\n\nfunction getParentSize (props, settings) {\n  // When no { dimension } is passed in node, we default to HTML canvas size\n  if (!isBrowser()) {\n    return [ 300, 150 ];\n  }\n\n  let element = settings.parent || window;\n\n  if (element === window ||\n      element === document ||\n      element === document.body) {\n    return [ window.innerWidth, window.innerHeight ];\n  } else {\n    const { width, height } = element.getBoundingClientRect();\n    return [ width, height ];\n  }\n}\n\nexport default function resizeCanvas (props, settings) {\n  let width, height;\n  let styleWidth, styleHeight;\n  let canvasWidth, canvasHeight;\n\n  const browser = isBrowser();\n  const dimensions = settings.dimensions;\n  const hasDimensions = checkIfHasDimensions(settings);\n  const exporting = props.exporting;\n  let scaleToFit = hasDimensions ? settings.scaleToFit !== false : false;\n  let scaleToView = (!exporting && hasDimensions) ? settings.scaleToView : true;\n  // in node, cancel both of these options\n  if (!browser) scaleToFit = scaleToView = false;\n  const units = settings.units;\n  const pixelsPerInch = (typeof settings.pixelsPerInch === 'number' && isFinite(settings.pixelsPerInch)) ? settings.pixelsPerInch : 72;\n  const bleed = defined(settings.bleed, 0);\n\n  const devicePixelRatio = browser ? window.devicePixelRatio : 1;\n  const basePixelRatio = scaleToView ? devicePixelRatio : 1;\n\n  let pixelRatio, exportPixelRatio;\n\n  // If a pixel ratio is specified, we will use it.\n  // Otherwise:\n  //  -> If dimension is specified, use base ratio (i.e. size for export)\n  //  -> If no dimension is specified, use device ratio (i.e. size for screen)\n  if (typeof settings.pixelRatio === 'number' && isFinite(settings.pixelRatio)) {\n    // When { pixelRatio } is specified, it's also used as default exportPixelRatio.\n    pixelRatio = settings.pixelRatio;\n    exportPixelRatio = defined(settings.exportPixelRatio, pixelRatio);\n  } else {\n    if (hasDimensions) {\n      // When a dimension is specified, use the base ratio rather than screen ratio\n      pixelRatio = basePixelRatio;\n      // Default to a pixel ratio of 1 so that you end up with the same dimension\n      // you specified, i.e. [ 500, 500 ] is exported as 500x500 px\n      exportPixelRatio = defined(settings.exportPixelRatio, 1);\n    } else {\n      // No dimension is specified, assume full-screen retina sizing\n      pixelRatio = devicePixelRatio;\n      // Default to screen pixel ratio, so that it's like taking a device screenshot\n      exportPixelRatio = defined(settings.exportPixelRatio, pixelRatio);\n    }\n  }\n\n  // Clamp pixel ratio\n  if (typeof settings.maxPixelRatio === 'number' && isFinite(settings.maxPixelRatio)) {\n    pixelRatio = Math.min(settings.maxPixelRatio, pixelRatio);\n  }\n\n  // Handle export pixel ratio\n  if (exporting) {\n    pixelRatio = exportPixelRatio;\n  }\n\n  // parentWidth = typeof parentWidth === 'undefined' ? defaultNodeSize[0] : parentWidth;\n  // parentHeight = typeof parentHeight === 'undefined' ? defaultNodeSize[1] : parentHeight;\n\n  let [ parentWidth, parentHeight ] = getParentSize(props, settings);\n  let trimWidth, trimHeight;\n\n  // You can specify a dimensions in pixels or cm/m/in/etc\n  if (hasDimensions) {\n    const result = getDimensionsFromPreset(dimensions, units, pixelsPerInch);\n    const highest = Math.max(result[0], result[1]);\n    const lowest = Math.min(result[0], result[1]);\n    if (settings.orientation) {\n      const landscape = settings.orientation === 'landscape';\n      width = landscape ? highest : lowest;\n      height = landscape ? lowest : highest;\n    } else {\n      width = result[0];\n      height = result[1];\n    }\n\n    trimWidth = width;\n    trimHeight = height;\n\n    // Apply bleed which is assumed to be in the same units\n    width += bleed * 2;\n    height += bleed * 2;\n  } else {\n    width = parentWidth;\n    height = parentHeight;\n    trimWidth = width;\n    trimHeight = height;\n  }\n\n  // Real size in pixels after PPI is taken into account\n  let realWidth = width;\n  let realHeight = height;\n  if (hasDimensions && units) {\n    // Convert to digital/pixel units if necessary\n    realWidth = convertDistance(width, units, 'px', pixelsPerInch);\n    realHeight = convertDistance(height, units, 'px', pixelsPerInch);\n  }\n\n  // How big to set the 'view' of the canvas in the browser (i.e. style)\n  styleWidth = Math.round(realWidth);\n  styleHeight = Math.round(realHeight);\n\n  // If we wish to scale the view to the browser window\n  if (scaleToFit && !exporting && hasDimensions) {\n    const aspect = width / height;\n    const windowAspect = parentWidth / parentHeight;\n    const scaleToFitPadding = defined(settings.scaleToFitPadding, 40);\n    const maxWidth = Math.round(parentWidth - scaleToFitPadding * 2);\n    const maxHeight = Math.round(parentHeight - scaleToFitPadding * 2);\n    if (styleWidth > maxWidth || styleHeight > maxHeight) {\n      if (windowAspect > aspect) {\n        styleHeight = maxHeight;\n        styleWidth = Math.round(styleHeight * aspect);\n      } else {\n        styleWidth = maxWidth;\n        styleHeight = Math.round(styleWidth / aspect);\n      }\n    }\n  }\n\n  canvasWidth = scaleToView ? Math.round(pixelRatio * styleWidth) : Math.round(pixelRatio * realWidth);\n  canvasHeight = scaleToView ? Math.round(pixelRatio * styleHeight) : Math.round(pixelRatio * realHeight);\n\n  const viewportWidth = scaleToView ? Math.round(styleWidth) : Math.round(realWidth);\n  const viewportHeight = scaleToView ? Math.round(styleHeight) : Math.round(realHeight);\n\n  const scaleX = canvasWidth / width;\n  const scaleY = canvasHeight / height;\n\n  // Assign to current props\n  return {\n    bleed,\n    pixelRatio,\n    width,\n    height,\n    dimensions: [ width, height ],\n    units: units || 'px',\n    scaleX,\n    scaleY,\n    pixelsPerInch,\n    viewportWidth,\n    viewportHeight,\n    canvasWidth,\n    canvasHeight,\n    trimWidth,\n    trimHeight,\n    styleWidth,\n    styleHeight\n  };\n}\n","module.exports = getCanvasContext\nfunction getCanvasContext (type, opts) {\n  if (typeof type !== 'string') {\n    throw new TypeError('must specify type string')\n  }\n\n  opts = opts || {}\n\n  if (typeof document === 'undefined' && !opts.canvas) {\n    return null // check for Node\n  }\n\n  var canvas = opts.canvas || document.createElement('canvas')\n  if (typeof opts.width === 'number') {\n    canvas.width = opts.width\n  }\n  if (typeof opts.height === 'number') {\n    canvas.height = opts.height\n  }\n\n  var attribs = opts\n  var gl\n  try {\n    var names = [ type ]\n    // prefix GL contexts\n    if (type.indexOf('webgl') === 0) {\n      names.push('experimental-' + type)\n    }\n\n    for (var i = 0; i < names.length; i++) {\n      gl = canvas.getContext(names[i], attribs)\n      if (gl) return gl\n    }\n  } catch (e) {\n    gl = null\n  }\n  return (gl || null) // ensure null on fail\n}\n","import assign from 'object-assign';\nimport getCanvasContext from 'get-canvas-context';\nimport { isBrowser } from '../util';\n\nfunction createCanvasElement () {\n  if (!isBrowser()) {\n    throw new Error('It appears you are runing from Node.js or a non-browser environment. Try passing in an existing { canvas } interface instead.');\n  }\n  return document.createElement('canvas');\n}\n\nexport default function createCanvas (settings = {}) {\n  let context, canvas;\n  let ownsCanvas = false;\n  if (settings.canvas !== false) {\n    // Determine the canvas and context to create\n    context = settings.context;\n    if (!context || typeof context === 'string') {\n      let newCanvas = settings.canvas;\n      if (!newCanvas) {\n        newCanvas = createCanvasElement();\n        ownsCanvas = true;\n      }\n      const type = context || '2d';\n      if (typeof newCanvas.getContext !== 'function') {\n        throw new Error(`The specified { canvas } element does not have a getContext() function, maybe it is not a <canvas> tag?`);\n      }\n      context = getCanvasContext(type, assign({}, settings.attributes, { canvas: newCanvas }));\n      if (!context) {\n        throw new Error(`Failed at canvas.getContext('${type}') - the browser may not support this context, or a different context may already be in use with this canvas.`);\n      }\n    }\n\n    canvas = context.canvas;\n    // Ensure context matches user's canvas expectations\n    if (settings.canvas && canvas !== settings.canvas) {\n      throw new Error('The { canvas } and { context } settings must point to the same underlying canvas element');\n    }\n\n    // Apply pixelation to canvas if necessary, this is mostly a convenience utility\n    if (settings.pixelated) {\n      context.imageSmoothingEnabled = false;\n      context.mozImageSmoothingEnabled = false;\n      context.oImageSmoothingEnabled = false;\n      context.webkitImageSmoothingEnabled = false;\n      context.msImageSmoothingEnabled = false;\n      canvas.style['image-rendering'] = 'pixelated';\n    }\n  }\n  return { canvas, context, ownsCanvas };\n}\n","import assign from 'object-assign';\nimport rightNow from 'right-now';\nimport isPromise from 'is-promise';\nimport { isBrowser, defined, isWebGLContext, isCanvas, getClientAPI } from '../util';\nimport deepEqual from 'deep-equal';\nimport {\n  resolveFilename,\n  saveFile,\n  saveDataURL,\n  getTimeStamp,\n  exportCanvas,\n  streamStart,\n  streamEnd\n} from '../save';\nimport { checkSettings } from '../accessibility';\n\nimport keyboardShortcuts from './keyboardShortcuts';\nimport resizeCanvas from './resizeCanvas';\nimport createCanvas from './createCanvas';\n\nclass SketchManager {\n  constructor () {\n    this._settings = {};\n    this._props = {};\n    this._sketch = undefined;\n    this._raf = null;\n    this._recordTimeout = null;\n\n    // Some hacky things required to get around p5.js structure\n    this._lastRedrawResult = undefined;\n    this._isP5Resizing = false;\n\n    this._keyboardShortcuts = keyboardShortcuts({\n      enabled: () => this.settings.hotkeys !== false,\n      save: (ev) => {\n        if (ev.shiftKey) {\n          if (this.props.recording) {\n            this.endRecord();\n            this.run();\n          } else this.record();\n        } else if (!this.props.recording) {\n          this.exportFrame();\n        }\n      },\n      togglePlay: () => {\n        if (this.props.playing) this.pause();\n        else this.play();\n      },\n      commit: (ev) => {\n        this.exportFrame({ commit: true });\n      }\n    });\n\n    this._animateHandler = () => this.animate();\n\n    this._resizeHandler = () => {\n      const changed = this.resize();\n      // Only re-render when size actually changes\n      if (changed) {\n        this.render();\n      }\n    };\n  }\n\n  get sketch () {\n    return this._sketch;\n  }\n\n  get settings () {\n    return this._settings;\n  }\n\n  get props () {\n    return this._props;\n  }\n\n  _computePlayhead (currentTime, duration) {\n    const hasDuration = typeof duration === 'number' && isFinite(duration);\n    return hasDuration ? currentTime / duration : 0;\n  }\n\n  _computeFrame (playhead, time, totalFrames, fps) {\n    return (isFinite(totalFrames) && totalFrames > 1)\n      ? Math.floor(playhead * (totalFrames - 1))\n      : Math.floor(fps * time);\n  }\n\n  _computeCurrentFrame () {\n    return this._computeFrame(\n      this.props.playhead, this.props.time,\n      this.props.totalFrames, this.props.fps\n    );\n  }\n\n  _getSizeProps () {\n    const props = this.props;\n    return {\n      width: props.width,\n      height: props.height,\n      pixelRatio: props.pixelRatio,\n      canvasWidth: props.canvasWidth,\n      canvasHeight: props.canvasHeight,\n      viewportWidth: props.viewportWidth,\n      viewportHeight: props.viewportHeight\n    };\n  }\n\n  run () {\n    if (!this.sketch) throw new Error('should wait until sketch is loaded before trying to play()');\n\n    // Start an animation frame loop if necessary\n    if (this.settings.playing !== false) {\n      this.play();\n    }\n\n    // Let's let this warning hang around for a few versions...\n    if (typeof this.sketch.dispose === 'function') {\n      console.warn('In canvas-sketch@0.0.23 the dispose() event has been renamed to unload()');\n    }\n\n    // In case we aren't playing or animated, make sure we still trigger begin message...\n    if (!this.props.started) {\n      this._signalBegin();\n      this.props.started = true;\n    }\n\n    // Render an initial frame\n    this.tick();\n    this.render();\n    return this;\n  }\n\n  _cancelTimeouts () {\n    if (this._raf != null && typeof window !== 'undefined' && typeof window.cancelAnimationFrame === 'function') {\n      window.cancelAnimationFrame(this._raf);\n      this._raf = null;\n    }\n    if (this._recordTimeout != null) {\n      clearTimeout(this._recordTimeout);\n      this._recordTimeout = null;\n    }\n  }\n\n  play () {\n    let animate = this.settings.animate;\n    if ('animation' in this.settings) {\n      animate = true;\n      console.warn('[canvas-sketch] { animation } has been renamed to { animate }');\n    }\n    if (!animate) return;\n    if (!isBrowser()) {\n      console.error('[canvas-sketch] WARN: Using { animate } in Node.js is not yet supported');\n      return;\n    }\n    if (this.props.playing) return;\n    if (!this.props.started) {\n      this._signalBegin();\n      this.props.started = true;\n    }\n\n    // console.log('play', this.props.time)\n\n    // Start a render loop\n    this.props.playing = true;\n    this._cancelTimeouts();\n    this._lastTime = rightNow();\n    this._raf = window.requestAnimationFrame(this._animateHandler);\n  }\n\n  pause () {\n    if (this.props.recording) this.endRecord();\n    this.props.playing = false;\n\n    this._cancelTimeouts();\n  }\n\n  togglePlay () {\n    if (this.props.playing) this.pause();\n    else this.play();\n  }\n\n  // Stop and reset to frame zero\n  stop () {\n    this.pause();\n    this.props.frame = 0;\n    this.props.playhead = 0;\n    this.props.time = 0;\n    this.props.deltaTime = 0;\n    this.props.started = false;\n    this.render();\n  }\n\n  record () {\n    if (this.props.recording) return;\n    if (!isBrowser()) {\n      console.error('[canvas-sketch] WARN: Recording from Node.js is not yet supported');\n      return;\n    }\n\n    this.stop();\n    this.props.playing = true;\n    this.props.recording = true;\n\n    const exportOpts = this._createExportOptions({ sequence: true });\n\n    const frameInterval = 1 / this.props.fps;\n    // Render each frame in the sequence\n    this._cancelTimeouts();\n    const tick = () => {\n      if (!this.props.recording) return Promise.resolve();\n      this.props.deltaTime = frameInterval;\n      this.tick();\n      return this.exportFrame(exportOpts)\n        .then(() => {\n          if (!this.props.recording) return; // was cancelled before\n          this.props.deltaTime = 0;\n          this.props.frame++;\n          if (this.props.frame < this.props.totalFrames) {\n            this.props.time += frameInterval;\n            this.props.playhead = this._computePlayhead(this.props.time, this.props.duration);\n            this._recordTimeout = setTimeout(tick, 0);\n          } else {\n            console.log('Finished recording');\n            this._signalEnd();\n            this.endRecord();\n            this.stop();\n            this.run();\n          }\n        });\n    };\n\n    // Trigger a start event before we begin recording\n    if (!this.props.started) {\n      this._signalBegin();\n      this.props.started = true;\n    }\n\n    // Trigger 'begin record' event\n    if (this.sketch && typeof this.sketch.beginRecord === 'function') {\n      this._wrapContextScale(props => this.sketch.beginRecord(props));\n    }\n\n    // Initiate a streaming start if necessary\n    streamStart(exportOpts)\n      .catch(err => {\n        console.error(err);\n      })\n      .then(response => {\n        this._raf = window.requestAnimationFrame(tick);\n      });\n  }\n\n  _signalBegin () {\n    if (this.sketch && typeof this.sketch.begin === 'function') {\n      this._wrapContextScale(props => this.sketch.begin(props));\n    }\n  }\n\n  _signalEnd () {\n    if (this.sketch && typeof this.sketch.end === 'function') {\n      this._wrapContextScale(props => this.sketch.end(props));\n    }\n  }\n\n  endRecord () {\n    const wasRecording = this.props.recording;\n\n    this._cancelTimeouts();\n    this.props.recording = false;\n    this.props.deltaTime = 0;\n    this.props.playing = false;\n\n    // tell CLI that stream has finished\n    return streamEnd()\n      .catch(err => {\n        console.error(err);\n      })\n      .then(() => {\n        // Trigger 'end record' event\n        if (wasRecording && this.sketch && typeof this.sketch.endRecord === 'function') {\n          this._wrapContextScale(props => this.sketch.endRecord(props));\n        }\n      });\n  }\n\n  _createExportOptions (opt = {}) {\n    return {\n      sequence: opt.sequence,\n      save: opt.save,\n      fps: this.props.fps,\n      frame: opt.sequence ? this.props.frame : undefined,\n      file: this.settings.file,\n      name: this.settings.name,\n      prefix: this.settings.prefix,\n      suffix: this.settings.suffix,\n      encoding: this.settings.encoding,\n      encodingQuality: this.settings.encodingQuality,\n      timeStamp: opt.timeStamp || getTimeStamp(),\n      totalFrames: isFinite(this.props.totalFrames) ? Math.max(0, this.props.totalFrames) : 1000\n    };\n  }\n\n  exportFrame (opt = {}) {\n    if (!this.sketch) return Promise.all([]);\n    if (typeof this.sketch.preExport === 'function') {\n      this.sketch.preExport();\n    }\n\n    // Options for export function\n    let exportOpts = this._createExportOptions(opt);\n\n    const client = getClientAPI();\n    let p = Promise.resolve();\n    if (client && opt.commit && typeof client.commit === 'function') {\n      const commitOpts = assign({}, exportOpts);\n      const hash = client.commit(commitOpts);\n      if (isPromise(hash)) p = hash;\n      else p = Promise.resolve(hash);\n    }\n\n    return p.then(hash => {\n      return this._doExportFrame(assign({}, exportOpts, { hash: hash || '' }));\n    }).then(result => {\n      // Most common usecase is to export a single layer,\n      // so let's optimize the user experience for that.\n      if (result.length === 1) return result[0];\n      else return result;\n    });\n  }\n\n  _doExportFrame (exportOpts = {}) {\n    this._props.exporting = true;\n\n    // Resize to output resolution\n    this.resize();\n\n    // Draw at this output resolution\n    let drawResult = this.render();\n\n    // The self owned canvas (may be undefined...!)\n    const canvas = this.props.canvas;\n\n    // Get list of results from render\n    if (typeof drawResult === 'undefined') {\n      drawResult = [ canvas ];\n    }\n    drawResult = [].concat(drawResult).filter(Boolean);\n\n    // Transform the canvas/file descriptors into a consistent format,\n    // and pull out any data URLs from canvas elements\n    drawResult = drawResult.map(result => {\n      const hasDataObject = typeof result === 'object' && result && ('data' in result || 'dataURL' in result);\n      const data = hasDataObject ? result.data : result;\n      const opts = hasDataObject ? assign({}, result, { data }) : { data };\n      if (isCanvas(data)) {\n        const encoding = opts.encoding || exportOpts.encoding;\n        const encodingQuality = defined(opts.encodingQuality, exportOpts.encodingQuality, 0.95);\n        const { dataURL, extension, type } = exportCanvas(data, { encoding, encodingQuality });\n        return Object.assign(opts, { dataURL, extension, type });\n      } else {\n        return opts;\n      }\n    });\n\n    // Now return to regular rendering mode\n    this._props.exporting = false;\n    this.resize();\n    this.render();\n\n    // And now we can save each result\n    return Promise.all(drawResult.map((result, i, layerList) => {\n      // By default, if rendering multiple layers we will give them indices\n      const curOpt = assign({\n        extension: '',\n        prefix: '',\n        suffix: ''\n      }, exportOpts, result, {\n        layer: i,\n        totalLayers: layerList.length\n      });\n\n      // If export is explicitly not saving, make sure nothing saves\n      // Otherwise default to the layer save option, or fallback to true\n      const saveParam = exportOpts.save === false ? false : result.save;\n      curOpt.save = saveParam !== false;\n\n      // Resolve a full filename from all the options\n      curOpt.filename = resolveFilename(curOpt);\n\n      // Clean up some parameters that may be ambiguous to the user\n      delete curOpt.encoding;\n      delete curOpt.encodingQuality;\n\n      // Clean it up further by just removing undefined values\n      for (let k in curOpt) {\n        if (typeof curOpt[k] === 'undefined') delete curOpt[k];\n      }\n\n      let savePromise = Promise.resolve({});\n      if (curOpt.save) {\n        // Whether to actually save (download) this fragment\n        const data = curOpt.data;\n        if (curOpt.dataURL) {\n          const dataURL = curOpt.dataURL;\n          savePromise = saveDataURL(dataURL, curOpt);\n        } else {\n          savePromise = saveFile(data, curOpt);\n        }\n      }\n      return savePromise.then(saveResult => {\n        return Object.assign({}, curOpt, saveResult);\n      });\n    })).then(ev => {\n      const savedEvents = ev.filter(e => e.save);\n      if (savedEvents.length > 0) {\n        // Log the saved exports\n        const eventWithOutput = savedEvents.find(e => e.outputName);\n        const isClient = savedEvents.some(e => e.client);\n        const isStreaming = savedEvents.some(e => e.stream);\n        let item;\n        // many files, just log how many were exported\n        if (savedEvents.length > 1) item = savedEvents.length;\n        // in CLI, we know exact path dirname\n        else if (eventWithOutput) item = `${eventWithOutput.outputName}/${savedEvents[0].filename}`;\n        // in browser, we can only know it went to \"browser download folder\"\n        else item = `${savedEvents[0].filename}`;\n        let ofSeq = '';\n        if (exportOpts.sequence) {\n          const hasTotalFrames = isFinite(this.props.totalFrames);\n          ofSeq = hasTotalFrames ? ` (frame ${exportOpts.frame + 1} / ${this.props.totalFrames})` : ` (frame ${exportOpts.frame})`;\n        } else if (savedEvents.length > 1) {\n          ofSeq = ` files`;\n        }\n        const client = isClient ? 'canvas-sketch-cli' : 'canvas-sketch';\n        const action = isStreaming ? 'Streaming into' : 'Exported';\n        console.log(`%c[${client}]%c ${action} %c${item}%c${ofSeq}`, 'color: #8e8e8e;', 'color: initial;', 'font-weight: bold;', 'font-weight: initial;');\n      }\n      if (typeof this.sketch.postExport === 'function') {\n        this.sketch.postExport();\n      }\n      return ev;\n    });\n  }\n\n  _wrapContextScale (cb) {\n    this._preRender();\n    cb(this.props);\n    this._postRender();\n  }\n\n  _preRender () {\n    const props = this.props;\n\n    // Scale context for unit sizing\n    if (!this.props.gl && props.context && !props.p5) {\n      props.context.save();\n      if (this.settings.scaleContext !== false) {\n        props.context.scale(props.scaleX, props.scaleY);\n      }\n    } else if (props.p5) {\n      props.p5.scale(props.scaleX / props.pixelRatio, props.scaleY / props.pixelRatio);\n    }\n  }\n\n  _postRender () {\n    const props = this.props;\n\n    if (!this.props.gl && props.context && !props.p5) {\n      props.context.restore();\n    }\n\n    // Flush by default, this may be revisited at a later point.\n    // We do this to ensure toDataURL can be called immediately after.\n    // Most likely browsers already handle this, so we may revisit this and\n    // remove it if it improves performance without any usability issues.\n    if (props.gl && this.settings.flush !== false && !props.p5) {\n      props.gl.flush();\n    }\n  }\n\n  tick () {\n    if (this.sketch && typeof this.sketch.tick === 'function') {\n      this._preRender();\n      this.sketch.tick(this.props);\n      this._postRender();\n    }\n  }\n\n  render () {\n    if (this.props.p5) {\n      this._lastRedrawResult = undefined;\n      this.props.p5.redraw();\n      return this._lastRedrawResult;\n    } else {\n      return this.submitDrawCall();\n    }\n  }\n\n  submitDrawCall () {\n    if (!this.sketch) return;\n\n    const props = this.props;\n    this._preRender();\n\n    let drawResult;\n\n    if (typeof this.sketch === 'function') {\n      drawResult = this.sketch(props);\n    } else if (typeof this.sketch.render === 'function') {\n      drawResult = this.sketch.render(props);\n    }\n\n    this._postRender();\n\n    return drawResult;\n  }\n\n  update (opt = {}) {\n    // Currently update() is only focused on resizing,\n    // but later we will support other options like switching\n    // frames and such.\n    const notYetSupported = [\n      'animate'\n    ];\n\n    Object.keys(opt).forEach(key => {\n      if (notYetSupported.indexOf(key) >= 0) {\n        throw new Error(`Sorry, the { ${key} } option is not yet supported with update().`);\n      }\n    });\n\n    const oldCanvas = this._settings.canvas;\n    const oldContext = this._settings.context;\n\n    // Merge new options into settings\n    for (let key in opt) {\n      const value = opt[key];\n      if (typeof value !== 'undefined') { // ignore undefined\n        this._settings[key] = value;\n      }\n    }\n\n    // Merge in time props\n    const timeOpts = Object.assign({}, this._settings, opt);\n    if ('time' in opt && 'frame' in opt) throw new Error('You should specify { time } or { frame } but not both');\n    else if ('time' in opt) delete timeOpts.frame;\n    else if ('frame' in opt) delete timeOpts.time;\n    if ('duration' in opt && 'totalFrames' in opt) throw new Error('You should specify { duration } or { totalFrames } but not both');\n    else if ('duration' in opt) delete timeOpts.totalFrames;\n    else if ('totalFrames' in opt) delete timeOpts.duration;\n\n    // Merge in user data without copying\n    if ('data' in opt) this._props.data = opt.data;\n\n    const timeProps = this.getTimeProps(timeOpts);\n    Object.assign(this._props, timeProps);\n\n    // If either canvas or context is changed, we should re-update\n    if (oldCanvas !== this._settings.canvas || oldContext !== this._settings.context) {\n      const { canvas, context } = createCanvas(this._settings);\n\n      this.props.canvas = canvas;\n      this.props.context = context;\n\n      // Delete or add a 'gl' prop for convenience\n      this._setupGLKey();\n\n      // Re-mount the new canvas if it has no parent\n      this._appendCanvasIfNeeded();\n    }\n\n    // Special case to support P5.js\n    if (opt.p5 && typeof opt.p5 !== 'function') {\n      this.props.p5 = opt.p5;\n      this.props.p5.draw = () => {\n        if (this._isP5Resizing) return;\n        this._lastRedrawResult = this.submitDrawCall();\n      };\n    }\n\n    // Update playing state if necessary\n    if ('playing' in opt) {\n      if (opt.playing) this.play();\n      else this.pause();\n    }\n\n    checkSettings(this._settings);\n\n    // Draw new frame\n    this.resize();\n    this.render();\n    return this.props;\n  }\n\n  resize () {\n    const oldSizes = this._getSizeProps();\n\n    const settings = this.settings;\n    const props = this.props;\n\n    // Recompute new properties based on current setup\n    const newProps = resizeCanvas(props, settings);\n\n    // Assign to current props\n    Object.assign(this._props, newProps);\n\n    // Now we actually update the canvas width/height and style props\n    const {\n      pixelRatio,\n      canvasWidth,\n      canvasHeight,\n      styleWidth,\n      styleHeight\n    } = this.props;\n\n    // Update canvas settings\n    const canvas = this.props.canvas;\n    if (canvas && settings.resizeCanvas !== false) {\n      if (props.p5) {\n        // P5.js specific edge case\n        if (canvas.width !== canvasWidth || canvas.height !== canvasHeight) {\n          this._isP5Resizing = true;\n          // This causes a re-draw :\\ so we ignore draws in the mean time... sorta hacky\n          props.p5.pixelDensity(pixelRatio);\n          props.p5.resizeCanvas(canvasWidth / pixelRatio, canvasHeight / pixelRatio, false);\n          this._isP5Resizing = false;\n        }\n      } else {\n        // Force canvas size\n        if (canvas.width !== canvasWidth) canvas.width = canvasWidth;\n        if (canvas.height !== canvasHeight) canvas.height = canvasHeight;\n      }\n      // Update canvas style\n      if (isBrowser() && settings.styleCanvas !== false) {\n        canvas.style.width = `${styleWidth}px`;\n        canvas.style.height = `${styleHeight}px`;\n      }\n    }\n\n    const newSizes = this._getSizeProps();\n    let changed = !deepEqual(oldSizes, newSizes);\n    if (changed) {\n      this._sizeChanged();\n    }\n    return changed;\n  }\n\n  _sizeChanged () {\n    // Send resize event to sketch\n    if (this.sketch && typeof this.sketch.resize === 'function') {\n      this.sketch.resize(this.props);\n    }\n  }\n\n  animate () {\n    if (!this.props.playing) return;\n    if (!isBrowser()) {\n      console.error('[canvas-sketch] WARN: Animation in Node.js is not yet supported');\n      return;\n    }\n    this._raf = window.requestAnimationFrame(this._animateHandler);\n\n    let now = rightNow();\n\n    const fps = this.props.fps;\n    const frameIntervalMS = 1000 / fps;\n    let deltaTimeMS = now - this._lastTime;\n\n    const duration = this.props.duration;\n    const hasDuration = typeof duration === 'number' && isFinite(duration);\n\n    let isNewFrame = true;\n    const playbackRate = this.settings.playbackRate;\n    if (playbackRate === 'fixed') {\n      deltaTimeMS = frameIntervalMS;\n    } else if (playbackRate === 'throttle') {\n      if (deltaTimeMS > frameIntervalMS) {\n        now = now - (deltaTimeMS % frameIntervalMS);\n        this._lastTime = now;\n      } else {\n        isNewFrame = false;\n      }\n    } else {\n      this._lastTime = now;\n    }\n\n    const deltaTime = deltaTimeMS / 1000;\n    let newTime = this.props.time + deltaTime * this.props.timeScale;\n\n    // Handle reverse time scale\n    if (newTime < 0 && hasDuration) {\n      newTime = duration + newTime;\n    }\n\n    // Re-start animation\n    let isFinished = false;\n    let isLoopStart = false;\n\n    const looping = this.settings.loop !== false;\n\n    if (hasDuration && newTime >= duration) {\n      // Re-start animation\n      if (looping) {\n        isNewFrame = true;\n        newTime = newTime % duration;\n        isLoopStart = true;\n      } else {\n        isNewFrame = false;\n        newTime = duration;\n        isFinished = true;\n      }\n\n      this._signalEnd();\n    }\n\n    if (isNewFrame) {\n      this.props.deltaTime = deltaTime;\n      this.props.time = newTime;\n      this.props.playhead = this._computePlayhead(newTime, duration);\n      const lastFrame = this.props.frame;\n      this.props.frame = this._computeCurrentFrame();\n      if (isLoopStart) this._signalBegin();\n      if (lastFrame !== this.props.frame) this.tick();\n      this.render();\n      this.props.deltaTime = 0;\n    }\n\n    if (isFinished) {\n      this.pause();\n    }\n  }\n\n  dispatch (cb) {\n    if (typeof cb !== 'function') throw new Error('must pass function into dispatch()');\n    cb(this.props);\n    this.render();\n  }\n\n  mount () {\n    this._appendCanvasIfNeeded();\n  }\n\n  unmount () {\n    if (isBrowser()) {\n      window.removeEventListener('resize', this._resizeHandler);\n      this._keyboardShortcuts.detach();\n    }\n    if (this.props.canvas.parentElement) {\n      this.props.canvas.parentElement.removeChild(this.props.canvas);\n    }\n  }\n\n  _appendCanvasIfNeeded () {\n    if (!isBrowser()) return;\n    if (this.settings.parent !== false && (this.props.canvas && !this.props.canvas.parentElement)) {\n      const defaultParent = this.settings.parent || document.body;\n      defaultParent.appendChild(this.props.canvas);\n    }\n  }\n\n  _setupGLKey () {\n    if (this.props.context) {\n      if (isWebGLContext(this.props.context)) {\n        this._props.gl = this.props.context;\n      } else {\n        delete this._props.gl;\n      }\n    }\n  }\n\n  getTimeProps (settings = {}) {\n    // Get timing data\n    let duration = settings.duration;\n    let totalFrames = settings.totalFrames;\n    const timeScale = defined(settings.timeScale, 1);\n    const fps = defined(settings.fps, 24);\n    const hasDuration = typeof duration === 'number' && isFinite(duration);\n    const hasTotalFrames = typeof totalFrames === 'number' && isFinite(totalFrames);\n\n    const totalFramesFromDuration = hasDuration ? Math.floor(fps * duration) : undefined;\n    const durationFromTotalFrames = hasTotalFrames ? (totalFrames / fps) : undefined;\n    if (hasDuration && hasTotalFrames && totalFramesFromDuration !== totalFrames) {\n      throw new Error('You should specify either duration or totalFrames, but not both. Or, they must match exactly.');\n    }\n\n    if (typeof settings.dimensions === 'undefined' && typeof settings.units !== 'undefined') {\n      console.warn(`You've specified a { units } setting but no { dimension }, so the units will be ignored.`);\n    }\n\n    totalFrames = defined(totalFrames, totalFramesFromDuration, Infinity);\n    duration = defined(duration, durationFromTotalFrames, Infinity);\n\n    const startTime = settings.time;\n    const startFrame = settings.frame;\n    const hasStartTime = typeof startTime === 'number' && isFinite(startTime);\n    const hasStartFrame = typeof startFrame === 'number' && isFinite(startFrame);\n\n    // start at zero unless user specifies frame or time (but not both mismatched)\n    let time = 0;\n    let frame = 0;\n    let playhead = 0;\n    if (hasStartTime && hasStartFrame) {\n      throw new Error('You should specify either start frame or time, but not both.');\n    } else if (hasStartTime) {\n      // User specifies time, we infer frames from FPS\n      time = startTime;\n      playhead = this._computePlayhead(time, duration);\n      frame = this._computeFrame(\n        playhead, time,\n        totalFrames, fps\n      );\n    } else if (hasStartFrame) {\n      // User specifies frame number, we infer time from FPS\n      frame = startFrame;\n      time = frame / fps;\n      playhead = this._computePlayhead(time, duration);\n    }\n\n    return {\n      playhead,\n      time,\n      frame,\n      duration,\n      totalFrames,\n      fps,\n      timeScale\n    };\n  }\n\n  setup (settings = {}) {\n    if (this.sketch) throw new Error('Multiple setup() calls not yet supported.');\n\n    this._settings = Object.assign({}, settings, this._settings);\n\n    checkSettings(this._settings);\n\n    // Get initial canvas & context\n    const { context, canvas } = createCanvas(this._settings);\n\n    const timeProps = this.getTimeProps(this._settings);\n\n    // Initial render state features\n    this._props = {\n      ...timeProps,\n      canvas,\n      context,\n      deltaTime: 0,\n      started: false,\n      exporting: false,\n      playing: false,\n      recording: false,\n      settings: this.settings,\n      data: this.settings.data,\n\n      // Export some specific actions to the sketch\n      render: () => this.render(),\n      togglePlay: () => this.togglePlay(),\n      dispatch: (cb) => this.dispatch(cb),\n      tick: () => this.tick(),\n      resize: () => this.resize(),\n      update: (opt) => this.update(opt),\n      exportFrame: opt => this.exportFrame(opt),\n      record: () => this.record(),\n      play: () => this.play(),\n      pause: () => this.pause(),\n      stop: () => this.stop()\n    };\n\n    // For WebGL sketches, a gl variable reads a bit better\n    this._setupGLKey();\n\n    // Trigger initial resize now so that canvas is already sized\n    // by the time we load the sketch\n    this.resize();\n  }\n\n  loadAndRun (canvasSketch, newSettings) {\n    return this.load(canvasSketch, newSettings).then(() => {\n      this.run();\n      return this;\n    });\n  }\n\n  unload () {\n    this.pause();\n    if (!this.sketch) return;\n    if (typeof this.sketch.unload === 'function') {\n      this._wrapContextScale(props => this.sketch.unload(props));\n    }\n    this._sketch = null;\n  }\n\n  destroy () {\n    this.unload();\n    this.unmount();\n  }\n\n  load (createSketch, newSettings) {\n    // User didn't specify a function\n    if (typeof createSketch !== 'function') {\n      throw new Error('The function must take in a function as the first parameter. Example:\\n  canvasSketcher(() => { ... }, settings)');\n    }\n\n    if (this.sketch) {\n      this.unload();\n    }\n\n    if (typeof newSettings !== 'undefined') {\n      this.update(newSettings);\n    }\n\n    // This is a bit of a tricky case; we set up the auto-scaling here\n    // in case the user decides to render anything to the context *before* the\n    // render() function... However, users should instead use begin() function for that.\n    this._preRender();\n\n    let preload = Promise.resolve();\n\n    // Because of P5.js's unusual structure, we have to do a bit of\n    // library-specific changes to support it properly.\n    if (this.settings.p5) {\n      if (!isBrowser()) {\n        throw new Error('[canvas-sketch] ERROR: Using p5.js in Node.js is not supported');\n      }\n      preload = new Promise(resolve => {\n        let P5Constructor = this.settings.p5;\n        let preload;\n        if (P5Constructor.p5) {\n          preload = P5Constructor.preload;\n          P5Constructor = P5Constructor.p5;\n        }\n\n        // The sketch setup; disable loop, set sizing, etc.\n        const p5Sketch = p5 => {\n          // Hook in preload if necessary\n          if (preload) p5.preload = () => preload(p5);\n          p5.setup = () => {\n            const props = this.props;\n            const isGL = this.settings.context === 'webgl';\n            const renderer = isGL ? p5.WEBGL : p5.P2D;\n            p5.noLoop();\n            p5.pixelDensity(props.pixelRatio);\n            p5.createCanvas(props.viewportWidth, props.viewportHeight, renderer);\n            if (isGL && this.settings.attributes) {\n              p5.setAttributes(this.settings.attributes);\n            }\n\n            this.update({ p5, canvas: p5.canvas, context: p5._renderer.drawingContext });\n            resolve();\n          };\n        };\n\n        // Support global and instance P5.js modes\n        if (typeof P5Constructor === 'function') {\n          new P5Constructor(p5Sketch);\n        } else {\n          if (typeof window.createCanvas !== 'function') {\n            throw new Error(\"{ p5 } setting is passed but can't find p5.js in global (window) scope. Maybe you did not create it globally?\\nnew p5(); // <-- attaches to global scope\");\n          }\n          p5Sketch(window);\n        }\n      });\n    }\n\n    return preload.then(() => {\n      // Load the user's sketch\n      let loader = createSketch(this.props);\n      if (!isPromise(loader)) {\n        loader = Promise.resolve(loader);\n      }\n      return loader;\n    }).then(sketch => {\n      if (!sketch) sketch = {};\n      this._sketch = sketch;\n\n      // Once the sketch is loaded we can add the events\n      if (isBrowser()) {\n        this._keyboardShortcuts.attach();\n        window.addEventListener('resize', this._resizeHandler);\n      }\n\n      this._postRender();\n\n      // The initial resize() in the constructor will not have\n      // triggered a resize() event on the sketch, since it was before\n      // the sketch was loaded. So we send the signal here, allowing\n      // users to react to the initial size before first render.\n      this._sizeChanged();\n      return this;\n    }).catch(err => {\n      console.warn('Could not start sketch, the async loading function rejected with an error:\\n    Error: ' + err.message);\n      throw err;\n    });\n  }\n}\n\nexport default SketchManager;\n","import { getClientAPI } from '../util';\n\nexport default function (opt = {}) {\n  const handler = ev => {\n    if (!opt.enabled()) return;\n\n    const client = getClientAPI();\n    if (ev.keyCode === 83 && !ev.altKey && (ev.metaKey || ev.ctrlKey)) {\n      // Cmd + S\n      ev.preventDefault();\n      opt.save(ev);\n    } else if (ev.keyCode === 32) {\n      // Space\n      // TODO: what to do with this? keep it, or remove it?\n      opt.togglePlay(ev);\n    } else if (client && !ev.altKey && ev.keyCode === 75 && (ev.metaKey || ev.ctrlKey)) {\n      // Cmd + K, only when canvas-sketch-cli is used\n      ev.preventDefault();\n      opt.commit(ev);\n    }\n  };\n\n  const attach = () => {\n    window.addEventListener('keydown', handler);\n  };\n\n  const detach = () => {\n    window.removeEventListener('keydown', handler);\n  };\n\n  return {\n    attach,\n    detach\n  };\n}\n","import SketchManager from './core/SketchManager';\nimport PaperSizes from './paper-sizes';\nimport { getClientAPI, defined } from './util';\n\nconst CACHE = 'hot-id-cache';\nconst runtimeCollisions = [];\n\nfunction isHotReload () {\n  const client = getClientAPI();\n  return client && client.hot;\n}\n\nfunction cacheGet (id) {\n  const client = getClientAPI();\n  if (!client) return undefined;\n  client[CACHE] = client[CACHE] || {};\n  return client[CACHE][id];\n}\n\nfunction cachePut (id, data) {\n  const client = getClientAPI();\n  if (!client) return undefined;\n  client[CACHE] = client[CACHE] || {};\n  client[CACHE][id] = data;\n}\n\nfunction getTimeProp (oldManager, newSettings) {\n  // Static sketches ignore the time persistency\n  return newSettings.animate ? { time: oldManager.props.time } : undefined;\n}\n\nfunction canvasSketch (sketch, settings = {}) {\n  if (settings.p5) {\n    if (settings.canvas || (settings.context && typeof settings.context !== 'string')) {\n      throw new Error(`In { p5 } mode, you can't pass your own canvas or context, unless the context is a \"webgl\" or \"2d\" string`);\n    }\n\n    // Do not create a canvas on startup, since P5.js does that for us\n    const context = typeof settings.context === 'string' ? settings.context : false;\n    settings = Object.assign({}, settings, { canvas: false, context });\n  }\n\n  const isHot = isHotReload();\n  let hotID;\n  if (isHot) {\n    // Use a magic name by default, force user to define each sketch if they\n    // require more than one in an application. Open to other ideas on how to tackle\n    // this as well...\n    hotID = defined(settings.id, '$__DEFAULT_CANVAS_SKETCH_ID__$');\n  }\n  let isInjecting = isHot && typeof hotID === 'string';\n\n  if (isInjecting && runtimeCollisions.includes(hotID)) {\n    console.warn(`Warning: You have multiple calls to canvasSketch() in --hot mode. You must pass unique { id } strings in settings to enable hot reload across multiple sketches. `, hotID);\n    isInjecting = false;\n  }\n\n  let preload = Promise.resolve();\n\n  if (isInjecting) {\n    // Mark this as already spotted in this runtime instance\n    runtimeCollisions.push(hotID);\n\n    const previousData = cacheGet(hotID);\n    if (previousData) {\n      const next = () => {\n        // Grab new props from old sketch instance\n        const newProps = getTimeProp(previousData.manager, settings);\n        // Destroy the old instance\n        previousData.manager.destroy();\n        // Pass along new props\n        return newProps;\n      };\n\n      // Move along the next data...\n      preload = previousData.load.then(next).catch(next);\n    }\n  }\n\n  return preload.then(newProps => {\n    const manager = new SketchManager();\n    let result;\n    if (sketch) {\n      // Merge with incoming data\n      settings = Object.assign({}, settings, newProps);\n\n      // Apply settings and create a canvas\n      manager.setup(settings);\n\n      // Mount to DOM\n      manager.mount();\n\n      // load the sketch first\n      result = manager.loadAndRun(sketch);\n    } else {\n      result = Promise.resolve(manager);\n    }\n    if (isInjecting) {\n      cachePut(hotID, { load: result, manager });\n    }\n    return result;\n  });\n}\n\n// TODO: Figure out a nice way to export things.\ncanvasSketch.canvasSketch = canvasSketch;\ncanvasSketch.PaperSizes = PaperSizes;\n\nexport default canvasSketch;\n","'use strict';\nvar token = '%[a-f0-9]{2}';\nvar singleMatcher = new RegExp(token, 'gi');\nvar multiMatcher = new RegExp('(' + token + ')+', 'gi');\n\nfunction decodeComponents(components, split) {\n\ttry {\n\t\t// Try to decode the entire string first\n\t\treturn decodeURIComponent(components.join(''));\n\t} catch (err) {\n\t\t// Do nothing\n\t}\n\n\tif (components.length === 1) {\n\t\treturn components;\n\t}\n\n\tsplit = split || 1;\n\n\t// Split the array in 2 parts\n\tvar left = components.slice(0, split);\n\tvar right = components.slice(split);\n\n\treturn Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));\n}\n\nfunction decode(input) {\n\ttry {\n\t\treturn decodeURIComponent(input);\n\t} catch (err) {\n\t\tvar tokens = input.match(singleMatcher);\n\n\t\tfor (var i = 1; i < tokens.length; i++) {\n\t\t\tinput = decodeComponents(tokens, i).join('');\n\n\t\t\ttokens = input.match(singleMatcher);\n\t\t}\n\n\t\treturn input;\n\t}\n}\n\nfunction customDecodeURIComponent(input) {\n\t// Keep track of all the replacements and prefill the map with the `BOM`\n\tvar replaceMap = {\n\t\t'%FE%FF': '\\uFFFD\\uFFFD',\n\t\t'%FF%FE': '\\uFFFD\\uFFFD'\n\t};\n\n\tvar match = multiMatcher.exec(input);\n\twhile (match) {\n\t\ttry {\n\t\t\t// Decode as big chunks as possible\n\t\t\treplaceMap[match[0]] = decodeURIComponent(match[0]);\n\t\t} catch (err) {\n\t\t\tvar result = decode(match[0]);\n\n\t\t\tif (result !== match[0]) {\n\t\t\t\treplaceMap[match[0]] = result;\n\t\t\t}\n\t\t}\n\n\t\tmatch = multiMatcher.exec(input);\n\t}\n\n\t// Add `%C2` at the end of the map to make sure it does not replace the combinator before everything else\n\treplaceMap['%C2'] = '\\uFFFD';\n\n\tvar entries = Object.keys(replaceMap);\n\n\tfor (var i = 0; i < entries.length; i++) {\n\t\t// Replace all decoded components\n\t\tvar key = entries[i];\n\t\tinput = input.replace(new RegExp(key, 'g'), replaceMap[key]);\n\t}\n\n\treturn input;\n}\n\nmodule.exports = function (encodedURI) {\n\tif (typeof encodedURI !== 'string') {\n\t\tthrow new TypeError('Expected `encodedURI` to be of type `string`, got `' + typeof encodedURI + '`');\n\t}\n\n\ttry {\n\t\tencodedURI = encodedURI.replace(/\\+/g, ' ');\n\n\t\t// Try the built in decoder first\n\t\treturn decodeURIComponent(encodedURI);\n\t} catch (err) {\n\t\t// Fallback to a more advanced decoder\n\t\treturn customDecodeURIComponent(encodedURI);\n\t}\n};\n","module.exports = function () {\n    for (var i = 0; i < arguments.length; i++) {\n        if (arguments[i] !== undefined) return arguments[i];\n    }\n};\n","function sineIn (t) {\n  var v = Math.cos(t * Math.PI * 0.5)\n  if (Math.abs(v) < 1e-14) return 1\n  else return 1 - v\n}\n\nmodule.exports = sineIn\n","'use strict';\nconst strictUriEncode = require('strict-uri-encode');\nconst decodeComponent = require('decode-uri-component');\nconst splitOnFirst = require('split-on-first');\n\nconst isNullOrUndefined = value => value === null || value === undefined;\n\nfunction encoderForArrayFormat(options) {\n\tswitch (options.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tconst index = result.length;\n\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), '[', index, ']'].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '[', encode(index, options), ']=', encode(value, options)].join('')\n\t\t\t\t];\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), '[]'].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), '[]=', encode(value, options)].join('')];\n\t\t\t};\n\n\t\tcase 'comma':\n\t\tcase 'separator':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (value === null || value === undefined || value.length === 0) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (result.length === 0) {\n\t\t\t\t\treturn [[encode(key, options), '=', encode(value, options)].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [[result, encode(value, options)].join(options.arrayFormatSeparator)];\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, encode(key, options)];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), '=', encode(value, options)].join('')];\n\t\t\t};\n\t}\n}\n\nfunction parserForArrayFormat(options) {\n\tlet result;\n\n\tswitch (options.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /\\[(\\d*)\\]$/.exec(key);\n\n\t\t\t\tkey = key.replace(/\\[\\d*\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = {};\n\t\t\t\t}\n\n\t\t\t\taccumulator[key][result[1]] = value;\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(\\[\\])$/.exec(key);\n\t\t\t\tkey = key.replace(/\\[\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\n\t\tcase 'comma':\n\t\tcase 'separator':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = typeof value === 'string' && value.includes(options.arrayFormatSeparator);\n\t\t\t\tconst isEncodedArray = (typeof value === 'string' && !isArray && decode(value, options).includes(options.arrayFormatSeparator));\n\t\t\t\tvalue = isEncodedArray ? decode(value, options) : value;\n\t\t\t\tconst newValue = isArray || isEncodedArray ? value.split(options.arrayFormatSeparator).map(item => decode(item, options)) : value === null ? value : decode(value, options);\n\t\t\t\taccumulator[key] = newValue;\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\t}\n}\n\nfunction validateArrayFormatSeparator(value) {\n\tif (typeof value !== 'string' || value.length !== 1) {\n\t\tthrow new TypeError('arrayFormatSeparator must be single character string');\n\t}\n}\n\nfunction encode(value, options) {\n\tif (options.encode) {\n\t\treturn options.strict ? strictUriEncode(value) : encodeURIComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction decode(value, options) {\n\tif (options.decode) {\n\t\treturn decodeComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction keysSorter(input) {\n\tif (Array.isArray(input)) {\n\t\treturn input.sort();\n\t}\n\n\tif (typeof input === 'object') {\n\t\treturn keysSorter(Object.keys(input))\n\t\t\t.sort((a, b) => Number(a) - Number(b))\n\t\t\t.map(key => input[key]);\n\t}\n\n\treturn input;\n}\n\nfunction removeHash(input) {\n\tconst hashStart = input.indexOf('#');\n\tif (hashStart !== -1) {\n\t\tinput = input.slice(0, hashStart);\n\t}\n\n\treturn input;\n}\n\nfunction getHash(url) {\n\tlet hash = '';\n\tconst hashStart = url.indexOf('#');\n\tif (hashStart !== -1) {\n\t\thash = url.slice(hashStart);\n\t}\n\n\treturn hash;\n}\n\nfunction extract(input) {\n\tinput = removeHash(input);\n\tconst queryStart = input.indexOf('?');\n\tif (queryStart === -1) {\n\t\treturn '';\n\t}\n\n\treturn input.slice(queryStart + 1);\n}\n\nfunction parseValue(value, options) {\n\tif (options.parseNumbers && !Number.isNaN(Number(value)) && (typeof value === 'string' && value.trim() !== '')) {\n\t\tvalue = Number(value);\n\t} else if (options.parseBooleans && value !== null && (value.toLowerCase() === 'true' || value.toLowerCase() === 'false')) {\n\t\tvalue = value.toLowerCase() === 'true';\n\t}\n\n\treturn value;\n}\n\nfunction parse(query, options) {\n\toptions = Object.assign({\n\t\tdecode: true,\n\t\tsort: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ',',\n\t\tparseNumbers: false,\n\t\tparseBooleans: false\n\t}, options);\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst formatter = parserForArrayFormat(options);\n\n\t// Create an object with no prototype\n\tconst ret = Object.create(null);\n\n\tif (typeof query !== 'string') {\n\t\treturn ret;\n\t}\n\n\tquery = query.trim().replace(/^[?#&]/, '');\n\n\tif (!query) {\n\t\treturn ret;\n\t}\n\n\tfor (const param of query.split('&')) {\n\t\tlet [key, value] = splitOnFirst(options.decode ? param.replace(/\\+/g, ' ') : param, '=');\n\n\t\t// Missing `=` should be `null`:\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\t\tvalue = value === undefined ? null : ['comma', 'separator'].includes(options.arrayFormat) ? value : decode(value, options);\n\t\tformatter(decode(key, options), value, ret);\n\t}\n\n\tfor (const key of Object.keys(ret)) {\n\t\tconst value = ret[key];\n\t\tif (typeof value === 'object' && value !== null) {\n\t\t\tfor (const k of Object.keys(value)) {\n\t\t\t\tvalue[k] = parseValue(value[k], options);\n\t\t\t}\n\t\t} else {\n\t\t\tret[key] = parseValue(value, options);\n\t\t}\n\t}\n\n\tif (options.sort === false) {\n\t\treturn ret;\n\t}\n\n\treturn (options.sort === true ? Object.keys(ret).sort() : Object.keys(ret).sort(options.sort)).reduce((result, key) => {\n\t\tconst value = ret[key];\n\t\tif (Boolean(value) && typeof value === 'object' && !Array.isArray(value)) {\n\t\t\t// Sort object keys, not values\n\t\t\tresult[key] = keysSorter(value);\n\t\t} else {\n\t\t\tresult[key] = value;\n\t\t}\n\n\t\treturn result;\n\t}, Object.create(null));\n}\n\nexports.extract = extract;\nexports.parse = parse;\n\nexports.stringify = (object, options) => {\n\tif (!object) {\n\t\treturn '';\n\t}\n\n\toptions = Object.assign({\n\t\tencode: true,\n\t\tstrict: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ','\n\t}, options);\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst shouldFilter = key => (\n\t\t(options.skipNull && isNullOrUndefined(object[key])) ||\n\t\t(options.skipEmptyString && object[key] === '')\n\t);\n\n\tconst formatter = encoderForArrayFormat(options);\n\n\tconst objectCopy = {};\n\n\tfor (const key of Object.keys(object)) {\n\t\tif (!shouldFilter(key)) {\n\t\t\tobjectCopy[key] = object[key];\n\t\t}\n\t}\n\n\tconst keys = Object.keys(objectCopy);\n\n\tif (options.sort !== false) {\n\t\tkeys.sort(options.sort);\n\t}\n\n\treturn keys.map(key => {\n\t\tconst value = object[key];\n\n\t\tif (value === undefined) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (value === null) {\n\t\t\treturn encode(key, options);\n\t\t}\n\n\t\tif (Array.isArray(value)) {\n\t\t\treturn value\n\t\t\t\t.reduce(formatter(key), [])\n\t\t\t\t.join('&');\n\t\t}\n\n\t\treturn encode(key, options) + '=' + encode(value, options);\n\t}).filter(x => x.length > 0).join('&');\n};\n\nexports.parseUrl = (url, options) => {\n\toptions = Object.assign({\n\t\tdecode: true\n\t}, options);\n\n\tconst [url_, hash] = splitOnFirst(url, '#');\n\n\treturn Object.assign(\n\t\t{\n\t\t\turl: url_.split('?')[0] || '',\n\t\t\tquery: parse(extract(url), options)\n\t\t},\n\t\toptions && options.parseFragmentIdentifier && hash ? {fragmentIdentifier: decode(hash, options)} : {}\n\t);\n};\n\nexports.stringifyUrl = (object, options) => {\n\toptions = Object.assign({\n\t\tencode: true,\n\t\tstrict: true\n\t}, options);\n\n\tconst url = removeHash(object.url).split('?')[0] || '';\n\tconst queryFromUrl = exports.extract(object.url);\n\tconst parsedQueryFromUrl = exports.parse(queryFromUrl, {sort: false});\n\n\tconst query = Object.assign(parsedQueryFromUrl, object.query);\n\tlet queryString = exports.stringify(query, options);\n\tif (queryString) {\n\t\tqueryString = `?${queryString}`;\n\t}\n\n\tlet hash = getHash(object.url);\n\tif (object.fragmentIdentifier) {\n\t\thash = `#${encode(object.fragmentIdentifier, options)}`;\n\t}\n\n\treturn `${url}${queryString}${hash}`;\n};\n","/*\n * A fast javascript implementation of simplex noise by Jonas Wagner\n\nBased on a speed-improved simplex noise algorithm for 2D, 3D and 4D in Java.\nWhich is based on example code by Stefan Gustavson (stegu@itn.liu.se).\nWith Optimisations by Peter Eastman (peastman@drizzle.stanford.edu).\nBetter rank ordering method by Stefan Gustavson in 2012.\n\n\n Copyright (c) 2018 Jonas Wagner\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n */\n(function() {\n  'use strict';\n\n  var F2 = 0.5 * (Math.sqrt(3.0) - 1.0);\n  var G2 = (3.0 - Math.sqrt(3.0)) / 6.0;\n  var F3 = 1.0 / 3.0;\n  var G3 = 1.0 / 6.0;\n  var F4 = (Math.sqrt(5.0) - 1.0) / 4.0;\n  var G4 = (5.0 - Math.sqrt(5.0)) / 20.0;\n\n  function SimplexNoise(randomOrSeed) {\n    var random;\n    if (typeof randomOrSeed == 'function') {\n      random = randomOrSeed;\n    }\n    else if (randomOrSeed) {\n      random = alea(randomOrSeed);\n    } else {\n      random = Math.random;\n    }\n    this.p = buildPermutationTable(random);\n    this.perm = new Uint8Array(512);\n    this.permMod12 = new Uint8Array(512);\n    for (var i = 0; i < 512; i++) {\n      this.perm[i] = this.p[i & 255];\n      this.permMod12[i] = this.perm[i] % 12;\n    }\n\n  }\n  SimplexNoise.prototype = {\n    grad3: new Float32Array([1, 1, 0,\n      -1, 1, 0,\n      1, -1, 0,\n\n      -1, -1, 0,\n      1, 0, 1,\n      -1, 0, 1,\n\n      1, 0, -1,\n      -1, 0, -1,\n      0, 1, 1,\n\n      0, -1, 1,\n      0, 1, -1,\n      0, -1, -1]),\n    grad4: new Float32Array([0, 1, 1, 1, 0, 1, 1, -1, 0, 1, -1, 1, 0, 1, -1, -1,\n      0, -1, 1, 1, 0, -1, 1, -1, 0, -1, -1, 1, 0, -1, -1, -1,\n      1, 0, 1, 1, 1, 0, 1, -1, 1, 0, -1, 1, 1, 0, -1, -1,\n      -1, 0, 1, 1, -1, 0, 1, -1, -1, 0, -1, 1, -1, 0, -1, -1,\n      1, 1, 0, 1, 1, 1, 0, -1, 1, -1, 0, 1, 1, -1, 0, -1,\n      -1, 1, 0, 1, -1, 1, 0, -1, -1, -1, 0, 1, -1, -1, 0, -1,\n      1, 1, 1, 0, 1, 1, -1, 0, 1, -1, 1, 0, 1, -1, -1, 0,\n      -1, 1, 1, 0, -1, 1, -1, 0, -1, -1, 1, 0, -1, -1, -1, 0]),\n    noise2D: function(xin, yin) {\n      var permMod12 = this.permMod12;\n      var perm = this.perm;\n      var grad3 = this.grad3;\n      var n0 = 0; // Noise contributions from the three corners\n      var n1 = 0;\n      var n2 = 0;\n      // Skew the input space to determine which simplex cell we're in\n      var s = (xin + yin) * F2; // Hairy factor for 2D\n      var i = Math.floor(xin + s);\n      var j = Math.floor(yin + s);\n      var t = (i + j) * G2;\n      var X0 = i - t; // Unskew the cell origin back to (x,y) space\n      var Y0 = j - t;\n      var x0 = xin - X0; // The x,y distances from the cell origin\n      var y0 = yin - Y0;\n      // For the 2D case, the simplex shape is an equilateral triangle.\n      // Determine which simplex we are in.\n      var i1, j1; // Offsets for second (middle) corner of simplex in (i,j) coords\n      if (x0 > y0) {\n        i1 = 1;\n        j1 = 0;\n      } // lower triangle, XY order: (0,0)->(1,0)->(1,1)\n      else {\n        i1 = 0;\n        j1 = 1;\n      } // upper triangle, YX order: (0,0)->(0,1)->(1,1)\n      // A step of (1,0) in (i,j) means a step of (1-c,-c) in (x,y), and\n      // a step of (0,1) in (i,j) means a step of (-c,1-c) in (x,y), where\n      // c = (3-sqrt(3))/6\n      var x1 = x0 - i1 + G2; // Offsets for middle corner in (x,y) unskewed coords\n      var y1 = y0 - j1 + G2;\n      var x2 = x0 - 1.0 + 2.0 * G2; // Offsets for last corner in (x,y) unskewed coords\n      var y2 = y0 - 1.0 + 2.0 * G2;\n      // Work out the hashed gradient indices of the three simplex corners\n      var ii = i & 255;\n      var jj = j & 255;\n      // Calculate the contribution from the three corners\n      var t0 = 0.5 - x0 * x0 - y0 * y0;\n      if (t0 >= 0) {\n        var gi0 = permMod12[ii + perm[jj]] * 3;\n        t0 *= t0;\n        n0 = t0 * t0 * (grad3[gi0] * x0 + grad3[gi0 + 1] * y0); // (x,y) of grad3 used for 2D gradient\n      }\n      var t1 = 0.5 - x1 * x1 - y1 * y1;\n      if (t1 >= 0) {\n        var gi1 = permMod12[ii + i1 + perm[jj + j1]] * 3;\n        t1 *= t1;\n        n1 = t1 * t1 * (grad3[gi1] * x1 + grad3[gi1 + 1] * y1);\n      }\n      var t2 = 0.5 - x2 * x2 - y2 * y2;\n      if (t2 >= 0) {\n        var gi2 = permMod12[ii + 1 + perm[jj + 1]] * 3;\n        t2 *= t2;\n        n2 = t2 * t2 * (grad3[gi2] * x2 + grad3[gi2 + 1] * y2);\n      }\n      // Add contributions from each corner to get the final noise value.\n      // The result is scaled to return values in the interval [-1,1].\n      return 70.0 * (n0 + n1 + n2);\n    },\n    // 3D simplex noise\n    noise3D: function(xin, yin, zin) {\n      var permMod12 = this.permMod12;\n      var perm = this.perm;\n      var grad3 = this.grad3;\n      var n0, n1, n2, n3; // Noise contributions from the four corners\n      // Skew the input space to determine which simplex cell we're in\n      var s = (xin + yin + zin) * F3; // Very nice and simple skew factor for 3D\n      var i = Math.floor(xin + s);\n      var j = Math.floor(yin + s);\n      var k = Math.floor(zin + s);\n      var t = (i + j + k) * G3;\n      var X0 = i - t; // Unskew the cell origin back to (x,y,z) space\n      var Y0 = j - t;\n      var Z0 = k - t;\n      var x0 = xin - X0; // The x,y,z distances from the cell origin\n      var y0 = yin - Y0;\n      var z0 = zin - Z0;\n      // For the 3D case, the simplex shape is a slightly irregular tetrahedron.\n      // Determine which simplex we are in.\n      var i1, j1, k1; // Offsets for second corner of simplex in (i,j,k) coords\n      var i2, j2, k2; // Offsets for third corner of simplex in (i,j,k) coords\n      if (x0 >= y0) {\n        if (y0 >= z0) {\n          i1 = 1;\n          j1 = 0;\n          k1 = 0;\n          i2 = 1;\n          j2 = 1;\n          k2 = 0;\n        } // X Y Z order\n        else if (x0 >= z0) {\n          i1 = 1;\n          j1 = 0;\n          k1 = 0;\n          i2 = 1;\n          j2 = 0;\n          k2 = 1;\n        } // X Z Y order\n        else {\n          i1 = 0;\n          j1 = 0;\n          k1 = 1;\n          i2 = 1;\n          j2 = 0;\n          k2 = 1;\n        } // Z X Y order\n      }\n      else { // x0<y0\n        if (y0 < z0) {\n          i1 = 0;\n          j1 = 0;\n          k1 = 1;\n          i2 = 0;\n          j2 = 1;\n          k2 = 1;\n        } // Z Y X order\n        else if (x0 < z0) {\n          i1 = 0;\n          j1 = 1;\n          k1 = 0;\n          i2 = 0;\n          j2 = 1;\n          k2 = 1;\n        } // Y Z X order\n        else {\n          i1 = 0;\n          j1 = 1;\n          k1 = 0;\n          i2 = 1;\n          j2 = 1;\n          k2 = 0;\n        } // Y X Z order\n      }\n      // A step of (1,0,0) in (i,j,k) means a step of (1-c,-c,-c) in (x,y,z),\n      // a step of (0,1,0) in (i,j,k) means a step of (-c,1-c,-c) in (x,y,z), and\n      // a step of (0,0,1) in (i,j,k) means a step of (-c,-c,1-c) in (x,y,z), where\n      // c = 1/6.\n      var x1 = x0 - i1 + G3; // Offsets for second corner in (x,y,z) coords\n      var y1 = y0 - j1 + G3;\n      var z1 = z0 - k1 + G3;\n      var x2 = x0 - i2 + 2.0 * G3; // Offsets for third corner in (x,y,z) coords\n      var y2 = y0 - j2 + 2.0 * G3;\n      var z2 = z0 - k2 + 2.0 * G3;\n      var x3 = x0 - 1.0 + 3.0 * G3; // Offsets for last corner in (x,y,z) coords\n      var y3 = y0 - 1.0 + 3.0 * G3;\n      var z3 = z0 - 1.0 + 3.0 * G3;\n      // Work out the hashed gradient indices of the four simplex corners\n      var ii = i & 255;\n      var jj = j & 255;\n      var kk = k & 255;\n      // Calculate the contribution from the four corners\n      var t0 = 0.6 - x0 * x0 - y0 * y0 - z0 * z0;\n      if (t0 < 0) n0 = 0.0;\n      else {\n        var gi0 = permMod12[ii + perm[jj + perm[kk]]] * 3;\n        t0 *= t0;\n        n0 = t0 * t0 * (grad3[gi0] * x0 + grad3[gi0 + 1] * y0 + grad3[gi0 + 2] * z0);\n      }\n      var t1 = 0.6 - x1 * x1 - y1 * y1 - z1 * z1;\n      if (t1 < 0) n1 = 0.0;\n      else {\n        var gi1 = permMod12[ii + i1 + perm[jj + j1 + perm[kk + k1]]] * 3;\n        t1 *= t1;\n        n1 = t1 * t1 * (grad3[gi1] * x1 + grad3[gi1 + 1] * y1 + grad3[gi1 + 2] * z1);\n      }\n      var t2 = 0.6 - x2 * x2 - y2 * y2 - z2 * z2;\n      if (t2 < 0) n2 = 0.0;\n      else {\n        var gi2 = permMod12[ii + i2 + perm[jj + j2 + perm[kk + k2]]] * 3;\n        t2 *= t2;\n        n2 = t2 * t2 * (grad3[gi2] * x2 + grad3[gi2 + 1] * y2 + grad3[gi2 + 2] * z2);\n      }\n      var t3 = 0.6 - x3 * x3 - y3 * y3 - z3 * z3;\n      if (t3 < 0) n3 = 0.0;\n      else {\n        var gi3 = permMod12[ii + 1 + perm[jj + 1 + perm[kk + 1]]] * 3;\n        t3 *= t3;\n        n3 = t3 * t3 * (grad3[gi3] * x3 + grad3[gi3 + 1] * y3 + grad3[gi3 + 2] * z3);\n      }\n      // Add contributions from each corner to get the final noise value.\n      // The result is scaled to stay just inside [-1,1]\n      return 32.0 * (n0 + n1 + n2 + n3);\n    },\n    // 4D simplex noise, better simplex rank ordering method 2012-03-09\n    noise4D: function(x, y, z, w) {\n      var perm = this.perm;\n      var grad4 = this.grad4;\n\n      var n0, n1, n2, n3, n4; // Noise contributions from the five corners\n      // Skew the (x,y,z,w) space to determine which cell of 24 simplices we're in\n      var s = (x + y + z + w) * F4; // Factor for 4D skewing\n      var i = Math.floor(x + s);\n      var j = Math.floor(y + s);\n      var k = Math.floor(z + s);\n      var l = Math.floor(w + s);\n      var t = (i + j + k + l) * G4; // Factor for 4D unskewing\n      var X0 = i - t; // Unskew the cell origin back to (x,y,z,w) space\n      var Y0 = j - t;\n      var Z0 = k - t;\n      var W0 = l - t;\n      var x0 = x - X0; // The x,y,z,w distances from the cell origin\n      var y0 = y - Y0;\n      var z0 = z - Z0;\n      var w0 = w - W0;\n      // For the 4D case, the simplex is a 4D shape I won't even try to describe.\n      // To find out which of the 24 possible simplices we're in, we need to\n      // determine the magnitude ordering of x0, y0, z0 and w0.\n      // Six pair-wise comparisons are performed between each possible pair\n      // of the four coordinates, and the results are used to rank the numbers.\n      var rankx = 0;\n      var ranky = 0;\n      var rankz = 0;\n      var rankw = 0;\n      if (x0 > y0) rankx++;\n      else ranky++;\n      if (x0 > z0) rankx++;\n      else rankz++;\n      if (x0 > w0) rankx++;\n      else rankw++;\n      if (y0 > z0) ranky++;\n      else rankz++;\n      if (y0 > w0) ranky++;\n      else rankw++;\n      if (z0 > w0) rankz++;\n      else rankw++;\n      var i1, j1, k1, l1; // The integer offsets for the second simplex corner\n      var i2, j2, k2, l2; // The integer offsets for the third simplex corner\n      var i3, j3, k3, l3; // The integer offsets for the fourth simplex corner\n      // simplex[c] is a 4-vector with the numbers 0, 1, 2 and 3 in some order.\n      // Many values of c will never occur, since e.g. x>y>z>w makes x<z, y<w and x<w\n      // impossible. Only the 24 indices which have non-zero entries make any sense.\n      // We use a thresholding to set the coordinates in turn from the largest magnitude.\n      // Rank 3 denotes the largest coordinate.\n      i1 = rankx >= 3 ? 1 : 0;\n      j1 = ranky >= 3 ? 1 : 0;\n      k1 = rankz >= 3 ? 1 : 0;\n      l1 = rankw >= 3 ? 1 : 0;\n      // Rank 2 denotes the second largest coordinate.\n      i2 = rankx >= 2 ? 1 : 0;\n      j2 = ranky >= 2 ? 1 : 0;\n      k2 = rankz >= 2 ? 1 : 0;\n      l2 = rankw >= 2 ? 1 : 0;\n      // Rank 1 denotes the second smallest coordinate.\n      i3 = rankx >= 1 ? 1 : 0;\n      j3 = ranky >= 1 ? 1 : 0;\n      k3 = rankz >= 1 ? 1 : 0;\n      l3 = rankw >= 1 ? 1 : 0;\n      // The fifth corner has all coordinate offsets = 1, so no need to compute that.\n      var x1 = x0 - i1 + G4; // Offsets for second corner in (x,y,z,w) coords\n      var y1 = y0 - j1 + G4;\n      var z1 = z0 - k1 + G4;\n      var w1 = w0 - l1 + G4;\n      var x2 = x0 - i2 + 2.0 * G4; // Offsets for third corner in (x,y,z,w) coords\n      var y2 = y0 - j2 + 2.0 * G4;\n      var z2 = z0 - k2 + 2.0 * G4;\n      var w2 = w0 - l2 + 2.0 * G4;\n      var x3 = x0 - i3 + 3.0 * G4; // Offsets for fourth corner in (x,y,z,w) coords\n      var y3 = y0 - j3 + 3.0 * G4;\n      var z3 = z0 - k3 + 3.0 * G4;\n      var w3 = w0 - l3 + 3.0 * G4;\n      var x4 = x0 - 1.0 + 4.0 * G4; // Offsets for last corner in (x,y,z,w) coords\n      var y4 = y0 - 1.0 + 4.0 * G4;\n      var z4 = z0 - 1.0 + 4.0 * G4;\n      var w4 = w0 - 1.0 + 4.0 * G4;\n      // Work out the hashed gradient indices of the five simplex corners\n      var ii = i & 255;\n      var jj = j & 255;\n      var kk = k & 255;\n      var ll = l & 255;\n      // Calculate the contribution from the five corners\n      var t0 = 0.6 - x0 * x0 - y0 * y0 - z0 * z0 - w0 * w0;\n      if (t0 < 0) n0 = 0.0;\n      else {\n        var gi0 = (perm[ii + perm[jj + perm[kk + perm[ll]]]] % 32) * 4;\n        t0 *= t0;\n        n0 = t0 * t0 * (grad4[gi0] * x0 + grad4[gi0 + 1] * y0 + grad4[gi0 + 2] * z0 + grad4[gi0 + 3] * w0);\n      }\n      var t1 = 0.6 - x1 * x1 - y1 * y1 - z1 * z1 - w1 * w1;\n      if (t1 < 0) n1 = 0.0;\n      else {\n        var gi1 = (perm[ii + i1 + perm[jj + j1 + perm[kk + k1 + perm[ll + l1]]]] % 32) * 4;\n        t1 *= t1;\n        n1 = t1 * t1 * (grad4[gi1] * x1 + grad4[gi1 + 1] * y1 + grad4[gi1 + 2] * z1 + grad4[gi1 + 3] * w1);\n      }\n      var t2 = 0.6 - x2 * x2 - y2 * y2 - z2 * z2 - w2 * w2;\n      if (t2 < 0) n2 = 0.0;\n      else {\n        var gi2 = (perm[ii + i2 + perm[jj + j2 + perm[kk + k2 + perm[ll + l2]]]] % 32) * 4;\n        t2 *= t2;\n        n2 = t2 * t2 * (grad4[gi2] * x2 + grad4[gi2 + 1] * y2 + grad4[gi2 + 2] * z2 + grad4[gi2 + 3] * w2);\n      }\n      var t3 = 0.6 - x3 * x3 - y3 * y3 - z3 * z3 - w3 * w3;\n      if (t3 < 0) n3 = 0.0;\n      else {\n        var gi3 = (perm[ii + i3 + perm[jj + j3 + perm[kk + k3 + perm[ll + l3]]]] % 32) * 4;\n        t3 *= t3;\n        n3 = t3 * t3 * (grad4[gi3] * x3 + grad4[gi3 + 1] * y3 + grad4[gi3 + 2] * z3 + grad4[gi3 + 3] * w3);\n      }\n      var t4 = 0.6 - x4 * x4 - y4 * y4 - z4 * z4 - w4 * w4;\n      if (t4 < 0) n4 = 0.0;\n      else {\n        var gi4 = (perm[ii + 1 + perm[jj + 1 + perm[kk + 1 + perm[ll + 1]]]] % 32) * 4;\n        t4 *= t4;\n        n4 = t4 * t4 * (grad4[gi4] * x4 + grad4[gi4 + 1] * y4 + grad4[gi4 + 2] * z4 + grad4[gi4 + 3] * w4);\n      }\n      // Sum up and scale the result to cover the range [-1,1]\n      return 27.0 * (n0 + n1 + n2 + n3 + n4);\n    }\n  };\n\n  function buildPermutationTable(random) {\n    var i;\n    var p = new Uint8Array(256);\n    for (i = 0; i < 256; i++) {\n      p[i] = i;\n    }\n    for (i = 0; i < 255; i++) {\n      var r = i + ~~(random() * (256 - i));\n      var aux = p[i];\n      p[i] = p[r];\n      p[r] = aux;\n    }\n    return p;\n  }\n  SimplexNoise._buildPermutationTable = buildPermutationTable;\n\n  function alea() {\n    // Johannes Baagøe <baagoe@baagoe.com>, 2010\n    var s0 = 0;\n    var s1 = 0;\n    var s2 = 0;\n    var c = 1;\n\n    var mash = masher();\n    s0 = mash(' ');\n    s1 = mash(' ');\n    s2 = mash(' ');\n\n    for (var i = 0; i < arguments.length; i++) {\n      s0 -= mash(arguments[i]);\n      if (s0 < 0) {\n        s0 += 1;\n      }\n      s1 -= mash(arguments[i]);\n      if (s1 < 0) {\n        s1 += 1;\n      }\n      s2 -= mash(arguments[i]);\n      if (s2 < 0) {\n        s2 += 1;\n      }\n    }\n    mash = null;\n    return function() {\n      var t = 2091639 * s0 + c * 2.3283064365386963e-10; // 2^-32\n      s0 = s1;\n      s1 = s2;\n      return s2 = t - (c = t | 0);\n    };\n  }\n  function masher() {\n    var n = 0xefc8249d;\n    return function(data) {\n      data = data.toString();\n      for (var i = 0; i < data.length; i++) {\n        n += data.charCodeAt(i);\n        var h = 0.02519603282416938 * n;\n        n = h >>> 0;\n        h -= n;\n        h *= n;\n        n = h >>> 0;\n        h -= n;\n        n += h * 0x100000000; // 2^32\n      }\n      return (n >>> 0) * 2.3283064365386963e-10; // 2^-32\n    };\n  }\n\n  // amd\n  if (typeof define !== 'undefined' && define.amd) define(function() {return SimplexNoise;});\n  // common js\n  if (typeof exports !== 'undefined') exports.SimplexNoise = SimplexNoise;\n  // browser\n  else if (typeof window !== 'undefined') window.SimplexNoise = SimplexNoise;\n  // nodejs\n  if (typeof module !== 'undefined') {\n    module.exports = SimplexNoise;\n  }\n\n})();\n","'use strict';\n\nmodule.exports = (string, separator) => {\n\tif (!(typeof string === 'string' && typeof separator === 'string')) {\n\t\tthrow new TypeError('Expected the arguments to be of type `string`');\n\t}\n\n\tif (separator === '') {\n\t\treturn [string];\n\t}\n\n\tconst separatorIndex = string.indexOf(separator);\n\n\tif (separatorIndex === -1) {\n\t\treturn [string];\n\t}\n\n\treturn [\n\t\tstring.slice(0, separatorIndex),\n\t\tstring.slice(separatorIndex + separator.length)\n\t];\n};\n","'use strict'\n\nmodule.exports = stemmer\n\n// Standard suffix manipulations.\nvar step2list = {\n  ational: 'ate',\n  tional: 'tion',\n  enci: 'ence',\n  anci: 'ance',\n  izer: 'ize',\n  bli: 'ble',\n  alli: 'al',\n  entli: 'ent',\n  eli: 'e',\n  ousli: 'ous',\n  ization: 'ize',\n  ation: 'ate',\n  ator: 'ate',\n  alism: 'al',\n  iveness: 'ive',\n  fulness: 'ful',\n  ousness: 'ous',\n  aliti: 'al',\n  iviti: 'ive',\n  biliti: 'ble',\n  logi: 'log'\n}\n\nvar step3list = {\n  icate: 'ic',\n  ative: '',\n  alize: 'al',\n  iciti: 'ic',\n  ical: 'ic',\n  ful: '',\n  ness: ''\n}\n\n// Consonant-vowel sequences.\nvar consonant = '[^aeiou]'\nvar vowel = '[aeiouy]'\nvar consonants = '(' + consonant + '[^aeiouy]*)'\nvar vowels = '(' + vowel + '[aeiou]*)'\n\nvar gt0 = new RegExp('^' + consonants + '?' + vowels + consonants)\nvar eq1 = new RegExp(\n  '^' + consonants + '?' + vowels + consonants + vowels + '?$'\n)\nvar gt1 = new RegExp('^' + consonants + '?(' + vowels + consonants + '){2,}')\nvar vowelInStem = new RegExp('^' + consonants + '?' + vowel)\nvar consonantLike = new RegExp('^' + consonants + vowel + '[^aeiouwxy]$')\n\n// Exception expressions.\nvar sfxLl = /ll$/\nvar sfxE = /^(.+?)e$/\nvar sfxY = /^(.+?)y$/\nvar sfxIon = /^(.+?(s|t))(ion)$/\nvar sfxEdOrIng = /^(.+?)(ed|ing)$/\nvar sfxAtOrBlOrIz = /(at|bl|iz)$/\nvar sfxEED = /^(.+?)eed$/\nvar sfxS = /^.+?[^s]s$/\nvar sfxSsesOrIes = /^.+?(ss|i)es$/\nvar sfxMultiConsonantLike = /([^aeiouylsz])\\1$/\nvar step2 = /^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/\nvar step3 = /^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/\nvar step4 = /^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/\n\n// Stem `value`.\n// eslint-disable-next-line complexity\nfunction stemmer(value) {\n  var firstCharacterWasLowerCaseY\n  var match\n\n  value = String(value).toLowerCase()\n\n  // Exit early.\n  if (value.length < 3) {\n    return value\n  }\n\n  // Detect initial `y`, make sure it never matches.\n  if (\n    value.charCodeAt(0) === 121 // Lowercase Y\n  ) {\n    firstCharacterWasLowerCaseY = true\n    value = 'Y' + value.slice(1)\n  }\n\n  // Step 1a.\n  if (sfxSsesOrIes.test(value)) {\n    // Remove last two characters.\n    value = value.slice(0, value.length - 2)\n  } else if (sfxS.test(value)) {\n    // Remove last character.\n    value = value.slice(0, value.length - 1)\n  }\n\n  // Step 1b.\n  if ((match = sfxEED.exec(value))) {\n    if (gt0.test(match[1])) {\n      // Remove last character.\n      value = value.slice(0, value.length - 1)\n    }\n  } else if ((match = sfxEdOrIng.exec(value)) && vowelInStem.test(match[1])) {\n    value = match[1]\n\n    if (sfxAtOrBlOrIz.test(value)) {\n      // Append `e`.\n      value += 'e'\n    } else if (sfxMultiConsonantLike.test(value)) {\n      // Remove last character.\n      value = value.slice(0, value.length - 1)\n    } else if (consonantLike.test(value)) {\n      // Append `e`.\n      value += 'e'\n    }\n  }\n\n  // Step 1c.\n  if ((match = sfxY.exec(value)) && vowelInStem.test(match[1])) {\n    // Remove suffixing `y` and append `i`.\n    value = match[1] + 'i'\n  }\n\n  // Step 2.\n  if ((match = step2.exec(value)) && gt0.test(match[1])) {\n    value = match[1] + step2list[match[2]]\n  }\n\n  // Step 3.\n  if ((match = step3.exec(value)) && gt0.test(match[1])) {\n    value = match[1] + step3list[match[2]]\n  }\n\n  // Step 4.\n  if ((match = step4.exec(value))) {\n    if (gt1.test(match[1])) {\n      value = match[1]\n    }\n  } else if ((match = sfxIon.exec(value)) && gt1.test(match[1])) {\n    value = match[1]\n  }\n\n  // Step 5.\n  if (\n    (match = sfxE.exec(value)) &&\n    (gt1.test(match[1]) ||\n      (eq1.test(match[1]) && !consonantLike.test(match[1])))\n  ) {\n    value = match[1]\n  }\n\n  if (sfxLl.test(value) && gt1.test(value)) {\n    value = value.slice(0, value.length - 1)\n  }\n\n  // Turn initial `Y` back to `y`.\n  if (firstCharacterWasLowerCaseY) {\n    value = 'y' + value.slice(1)\n  }\n\n  return value\n}\n","'use strict';\nmodule.exports = str => encodeURIComponent(str).replace(/[!'()*]/g, x => `%${x.charCodeAt(0).toString(16).toUpperCase()}`);\n","/*!\n * word-wrap <https://github.com/jonschlinkert/word-wrap>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\nmodule.exports = function(str, options) {\n  options = options || {};\n  if (str == null) {\n    return str;\n  }\n\n  var width = options.width || 50;\n  var indent = (typeof options.indent === 'string')\n    ? options.indent\n    : '  ';\n\n  var newline = options.newline || '\\n' + indent;\n  var escape = typeof options.escape === 'function'\n    ? options.escape\n    : identity;\n\n  var regexString = '.{1,' + width + '}';\n  if (options.cut !== true) {\n    regexString += '([\\\\s\\u200B]+|$)|[^\\\\s\\u200B]+?([\\\\s\\u200B]+|$)';\n  }\n\n  var re = new RegExp(regexString, 'g');\n  var lines = str.match(re) || [];\n  var result = indent + lines.map(function(line) {\n    if (line.slice(-1) === '\\n') {\n      line = line.slice(0, line.length - 1);\n    }\n    return escape(line);\n  }).join(newline);\n\n  if (options.trim === true) {\n    result = result.replace(/[ \\t]*$/gm, '');\n  }\n  return result;\n};\n\nfunction identity(str) {\n  return str;\n}\n","const PRNG = require(\"./prng\");\n\nfunction defined(a, b) {\n  return typeof a === \"undefined\" ? b : a;\n}\n\nfunction Random(seed) {\n  if (seed == null) seed = PRNG.generateSeedFast();\n  const prng = PRNG().seed(seed);\n  let _nextGaussian = null;\n  let _hasNextGaussian = false;\n\n  return {\n    get seed() {\n      return seed;\n    },\n    set seed(v) {\n      seed = v;\n      prng.seed(seed);\n      _nextGaussian = null;\n      _hasNextGaussian = false;\n    },\n    value,\n    valueNonZero: valueNonZero,\n    sign: sign,\n    boolean: boolean,\n    chance: chance,\n    range: range,\n    rangeFloor: rangeFloor,\n    pick: pick,\n    shuffle: shuffle,\n    onCircle: onCircle,\n    insideCircle: insideCircle,\n    onSphere: onSphere,\n    insideSphere: insideSphere,\n    quaternion: quaternion,\n    weighted: weighted,\n    weightedSet: weightedSet,\n    weightedSetIndex: weightedSetIndex,\n    deck,\n    gaussian: gaussian,\n  };\n\n  function value() {\n    return prng.next();\n  }\n\n  function valueNonZero() {\n    var u = 0;\n    while (u === 0) u = value();\n    return u;\n  }\n\n  function sign() {\n    return boolean() ? 1 : -1;\n  }\n\n  function boolean() {\n    return value() > 0.5;\n  }\n\n  function chance(n) {\n    n = defined(n, 0.5);\n    if (typeof n !== \"number\") throw new TypeError(\"expected n to be a number\");\n    return value() < n;\n  }\n\n  function range(min, max) {\n    if (max === undefined) {\n      max = min;\n      min = 0;\n    }\n\n    if (typeof min !== \"number\" || typeof max !== \"number\") {\n      throw new TypeError(\"Expected all arguments to be numbers\");\n    }\n\n    return value() * (max - min) + min;\n  }\n\n  function rangeFloor(min, max) {\n    if (max === undefined) {\n      max = min;\n      min = 0;\n    }\n\n    if (typeof min !== \"number\" || typeof max !== \"number\") {\n      throw new TypeError(\"Expected all arguments to be numbers\");\n    }\n\n    return Math.floor(range(min, max));\n  }\n\n  function pick(array) {\n    if (array.length === 0) return undefined;\n    return array[rangeFloor(0, array.length)];\n  }\n\n  function shuffle(arr) {\n    if (!Array.isArray(arr)) {\n      throw new TypeError(\"Expected Array, got \" + typeof arr);\n    }\n\n    var rand;\n    var tmp;\n    var len = arr.length;\n    var ret = arr.slice();\n    while (len) {\n      rand = Math.floor(value() * len--);\n      tmp = ret[len];\n      ret[len] = ret[rand];\n      ret[rand] = tmp;\n    }\n    return ret;\n  }\n\n  function onCircle(radius, out) {\n    radius = defined(radius, 1);\n    out = out || [];\n    var theta = value() * 2.0 * Math.PI;\n    out[0] = radius * Math.cos(theta);\n    out[1] = radius * Math.sin(theta);\n    return out;\n  }\n\n  function insideCircle(radius, out) {\n    radius = defined(radius, 1);\n    out = out || [];\n    onCircle(1, out);\n    var r = radius * Math.sqrt(value());\n    out[0] *= r;\n    out[1] *= r;\n    return out;\n  }\n\n  function onSphere(radius, out) {\n    radius = defined(radius, 1);\n    out = out || [];\n    var u = value() * Math.PI * 2;\n    var v = value() * 2 - 1;\n    var phi = u;\n    var theta = Math.acos(v);\n    out[0] = radius * Math.sin(theta) * Math.cos(phi);\n    out[1] = radius * Math.sin(theta) * Math.sin(phi);\n    out[2] = radius * Math.cos(theta);\n    return out;\n  }\n\n  function insideSphere(radius, out) {\n    radius = defined(radius, 1);\n    out = out || [];\n    var u = value() * Math.PI * 2;\n    var v = value() * 2 - 1;\n    var k = value();\n\n    var phi = u;\n    var theta = Math.acos(v);\n    var r = radius * Math.cbrt(k);\n    out[0] = r * Math.sin(theta) * Math.cos(phi);\n    out[1] = r * Math.sin(theta) * Math.sin(phi);\n    out[2] = r * Math.cos(theta);\n    return out;\n  }\n\n  function quaternion(out) {\n    out = out || [];\n    var u1 = value();\n    var u2 = value();\n    var u3 = value();\n\n    var sq1 = Math.sqrt(1 - u1);\n    var sq2 = Math.sqrt(u1);\n\n    var theta1 = Math.PI * 2 * u2;\n    var theta2 = Math.PI * 2 * u3;\n\n    var x = Math.sin(theta1) * sq1;\n    var y = Math.cos(theta1) * sq1;\n    var z = Math.sin(theta2) * sq2;\n    var w = Math.cos(theta2) * sq2;\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    out[3] = w;\n    return out;\n  }\n\n  function weightedSet(set) {\n    set = set || [];\n    if (set.length === 0) return null;\n    return set[weightedSetIndex(set)].value;\n  }\n\n  function weightedSetIndex(set) {\n    set = set || [];\n    if (set.length === 0) return -1;\n    return weighted(\n      set.map(function (s) {\n        return s.weight;\n      })\n    );\n  }\n\n  function weighted(weights) {\n    weights = weights || [];\n    if (weights.length === 0) return -1;\n    var totalWeight = 0;\n    var i;\n\n    for (i = 0; i < weights.length; i++) {\n      totalWeight += weights[i];\n    }\n\n    if (totalWeight <= 0) throw new Error(\"Weights must sum to > 0\");\n\n    var random = value() * totalWeight;\n    for (i = 0; i < weights.length; i++) {\n      if (random < weights[i]) {\n        return i;\n      }\n      random -= weights[i];\n    }\n    return 0;\n  }\n\n  function gaussian(mean, standardDerivation) {\n    mean = defined(mean, 0);\n    standardDerivation = defined(standardDerivation, 1);\n\n    // https://github.com/openjdk-mirror/jdk7u-jdk/blob/f4d80957e89a19a29bb9f9807d2a28351ed7f7df/src/share/classes/java/util/Random.java#L496\n    if (_hasNextGaussian) {\n      _hasNextGaussian = false;\n      var result = _nextGaussian;\n      _nextGaussian = null;\n      return mean + standardDerivation * result;\n    } else {\n      var v1 = 0;\n      var v2 = 0;\n      var s = 0;\n      do {\n        v1 = value() * 2 - 1; // between -1 and 1\n        v2 = value() * 2 - 1; // between -1 and 1\n        s = v1 * v1 + v2 * v2;\n      } while (s >= 1 || s === 0);\n      var multiplier = Math.sqrt((-2 * Math.log(s)) / s);\n      _nextGaussian = v2 * multiplier;\n      _hasNextGaussian = true;\n      return mean + standardDerivation * (v1 * multiplier);\n    }\n  }\n\n  function deck(array) {\n    array = shuffle(array);\n    let index = 0;\n    return {\n      get array() {\n        return array;\n      },\n      get index() {\n        return index;\n      },\n      get current() {\n        return array[index];\n      },\n      next() {\n        let cur = this.current;\n        index++;\n        if (index > array.length - 1) {\n          this.shuffle();\n          index = 0;\n        }\n        return cur;\n      },\n      nextIndex() {\n        let cur = index;\n        index++;\n        if (index > array.length - 1) {\n          this.shuffle();\n          index = 0;\n        }\n        return cur;\n      },\n      shuffle() {\n        array = shuffle(array);\n      },\n    };\n  }\n}\n\nRandom.seed = PRNG.generateSeedFast;\nRandom.pureSeed = PRNG.generateSeed;\n\nmodule.exports = Random;\n","class Partition {\n  constructor(bounds, parent, depth = 0) {\n    this.bounds = copyBounds(bounds);\n    this.depth = depth;\n    this.children = [];\n    this.parent = parent;\n  }\n\n  get x() {\n    const [min] = this.bounds;\n    return min[0];\n  }\n\n  set x(v) {\n    this.bounds[0][0] = v;\n  }\n\n  get y() {\n    const [min] = this.bounds;\n    return min[1];\n  }\n\n  set y(v) {\n    this.bounds[0][1] = v;\n  }\n\n  get cx() {\n    return this.x + this.width / 2;\n  }\n\n  get cy() {\n    return this.y + this.height / 2;\n  }\n\n  get width() {\n    const [min, max] = this.bounds;\n    return max[0] - min[0];\n  }\n\n  get height() {\n    const [min, max] = this.bounds;\n    return max[1] - min[1];\n  }\n\n  get leaf() {\n    return this.parent && this.children.length === 0;\n  }\n\n  detach() {\n    if (this.parent) {\n      const idx = this.parent.children.indexOf(this);\n      this.parent.children.splice(idx, 1);\n    }\n  }\n}\n\nfunction bsp({\n  cellWidth,\n  cellHeight,\n  offset,\n  rows,\n  columns,\n  maxDepth = 3,\n  minDimension,\n  splitter,\n  round = true,\n  filter = () => true,\n  shouldSplit = () => true,\n  random = () => Math.random(),\n  variance = 0.5,\n  squariness = 0.5,\n}) {\n  const randomChoice = (bias = 1, exp = 1) => {\n    return random() / Math.pow(bias, exp) < 0.5;\n  };\n\n  function randomRange(min, max) {\n    return random() * (max - min) + min;\n  }\n\n  function defaultSplitter(part) {\n    const [min, max] = part.bounds;\n    const w = max[0] - min[0];\n    const h = max[1] - min[1];\n    const v = variance * 0.5;\n    const fract = randomRange(0.5 - v, 0.5 + v);\n    const horizontal = randomChoice(w / h, squariness);\n    const inverse = random() > 0.5;\n    return splitBounds(part.bounds, fract, horizontal, inverse).map((bounds) =>\n      roundBoundsToGrid(bounds)\n    );\n  }\n\n  function roundToGrid([x, y]) {\n    x -= offset[0];\n    y -= offset[1];\n    x = Math.floor(x / cellWidth) * cellWidth;\n    y = Math.floor(y / cellHeight) * cellHeight;\n    x += offset[0];\n    y += offset[1];\n    return [x, y];\n  }\n\n  function roundBoundsToGrid([min, max]) {\n    return [roundToGrid(min), roundToGrid(max)];\n  }\n\n  function splitPart(part) {\n    if (part.depth < maxDepth && shouldSplit(part)) {\n      const childBounds = splitter(part) || [];\n      part.children = childBounds\n        .filter(largeEnough)\n        .map((bound) => {\n          return new Partition(bound, part, part.depth + 1);\n        })\n        .filter(filter);\n      part.children.forEach(splitPart);\n    }\n  }\n\n  function largeEnough(bounds) {\n    if (!isFinite(minDimension)) return true;\n    const [min, max] = bounds;\n    const w = max[0] - min[0];\n    const h = max[1] - min[1];\n    return w >= minDimension && h >= minDimension;\n  }\n\n  function splitBounds(\n    bounds,\n    fract = 0.5,\n    horizontal = true,\n    inverse = false\n  ) {\n    const [min, max] = bounds;\n    const [x1, y1] = min;\n    const [x2, y2] = max;\n    const width = x2 - x1;\n    const height = y2 - y1;\n\n    fract = Math.max(0, Math.min(1, fract));\n    fract = inverse ? 1 - fract : fract;\n\n    const dim = horizontal ? width : height;\n    let off = dim * fract;\n    // if (round) off = Math.floor(off);\n\n    let a, b;\n    if (horizontal) {\n      a = [\n        [x1, y1],\n        [x1 + off, y2],\n      ];\n      b = [\n        [x1 + off, y1],\n        [x2, y2],\n      ];\n    } else {\n      a = [\n        [x1, y1],\n        [x2, y1 + off],\n      ];\n      b = [\n        [x1, y1 + off],\n        [x2, y2],\n      ];\n    }\n    return [a, b];\n  }\n\n  splitter = splitter || defaultSplitter;\n  const [x, y] = offset;\n  const graph = new Partition([\n    [x, y],\n    [x + cellWidth * columns, y + cellHeight * rows],\n  ]);\n  splitPart(graph);\n  return graph;\n}\n\nfunction walk(part, cb = () => {}) {\n  function walkNode(part) {\n    cb(part);\n    part.children.forEach(walkNode);\n  }\n  walkNode(part);\n}\n\nfunction walkAll(part, cb = () => {}) {\n  const stack = [part];\n  while (stack.length > 0) {\n    const next = stack.pop();\n    cb(next);\n    const children = [...next.children];\n    if (children.length > 0) {\n      stack.push(...children);\n    }\n  }\n}\n\nfunction list(part, { leafOnly = false, maxDepth = Infinity } = {}) {\n  const stack = [{ depth: 0, node: part }];\n  const res = [];\n  while (stack.length > 0) {\n    const { node, depth = 0 } = stack.pop();\n    if (depth >= maxDepth) continue;\n\n    if (!leafOnly || node.leaf) {\n      res.push(node);\n    }\n\n    if (depth < maxDepth) {\n      const children = [...node.children].map((c) => {\n        return { node: c, depth: depth + 1 };\n      });\n      if (children.length > 0) {\n        stack.push(...children);\n      }\n    }\n  }\n  return res.reverse();\n}\n\nfunction copyBounds(bounds) {\n  return bounds.map((b) => b.slice());\n}\n\nmodule.exports = bsp;\nmodule.exports.walk = walk;\nmodule.exports.walkAll = walkAll;\nmodule.exports.list = list;\nmodule.exports.bsp = bsp;\nmodule.exports.Partition = Partition;\nmodule.exports.copyBounds = copyBounds;\n","const stemmer = require(\"stemmer\");\nconst stopwords = require(\"./stopwords-en.json\");\nconst stopwordStems = new Set(stopwords.map((w) => stemmer(w)));\nconst stopwordSet = new Set(stopwords);\n\n// const pos = require(\"pos\");\n// const tagger = new pos.Tagger();\n\nconst excludePOSFromFocus = [\n  \"CC\",\n  \"CD\",\n  \"DT\",\n  \"EX\",\n  \"IN\",\n  \"LS\",\n  \"MD\",\n  \"PRP\",\n  \"SYM\",\n  \"TO\",\n  \"UH\",\n  \"WDT\",\n  \"WP\",\n  \"WP$\",\n  \"WRB\",\n];\n\nmodule.exports = function findFocusWords(tokens, tagMap) {\n  const matchFocusOnly = true;\n  const nonStops = tokens.filter((t) => {\n    return !stopwordSet.has(t);\n  });\n  if (!nonStops.length) return matchFocusOnly ? [] : tokens;\n  const tagged = tokens.map((token) => {\n    const t = token in tagMap ? tagMap[token] : \"NN\";\n    return [token, t];\n  });\n  const best = tagged.filter((w) => {\n    return !excludePOSFromFocus.includes(w[1]);\n  });\n  if (!best.length) return matchFocusOnly ? [] : nonStops;\n  const nonVerbs = best.filter((w) => {\n    return !w[1].startsWith(\"VB\");\n  });\n  if (!nonVerbs.length && matchFocusOnly) return [];\n  const result = nonVerbs.length ? nonVerbs : best;\n  return result.map((w) => w[0]);\n};\n","const findFocusWords = require(\"./findFocusWords\");\n\nasync function loadLines(url) {\n  const resp = await fetch(url);\n  return (await resp.text()).split(\"\\n\").filter(Boolean);\n}\n\nconst tokenize = (line) =>\n  line\n    .replace(/\\'[a-z]+/g, \"\")\n    .replace(/\\-/g, \" \")\n    .split(/\\s+/g)\n    .filter(Boolean);\n\nmodule.exports = loadData;\nmodule.exports.tokenize = tokenize;\nasync function loadData(random) {\n  const [haikusRaw, rawAssociations] = await Promise.all([\n    loadLines(\"./assets/haiku-best.txt\"),\n    loadLines(\"./assets/associations.txt\"),\n  ]);\n\n  // TODO \"fall\" word is a bit messy\n  const seasons = [\"spring\", \"summer\", \"winter\", \"autumn\"];\n  const cuesToTargets = new Map();\n  const targetsToCues = new Map();\n  rawAssociations.forEach((a) => {\n    const list = a.split(\",\");\n    const cue = list[0];\n    const targets = list.slice(1);\n    const seasonCue = seasons.includes(cue);\n    targets.forEach((target) => {\n      const seasonTarget = seasons.includes(target);\n      if (seasonCue && seasonTarget) return;\n\n      if (!cuesToTargets.has(cue)) cuesToTargets.set(cue, new Set());\n      if (!targetsToCues.has(target)) targetsToCues.set(target, new Set());\n      cuesToTargets.get(cue).add(target);\n      targetsToCues.get(target).add(cue);\n    });\n  });\n\n  // const removeFromFall = 'wind,summer,spring,snow,season,leaf,frost,autumn,'\n\n  const cues = [...cuesToTargets.keys()];\n\n  // fix specific issue with 'spring' being a VB instead of NN\n  const cleanPOS = (text, pattern) => {\n    const tokens = tokenize(text);\n    const tags = pattern.split(\" \");\n    const idx = tokens.indexOf(\"spring\");\n    if (tokens.length === tags.length && idx >= 0) {\n      tags[idx] = \"NN\";\n      pattern = tags.join(\" \");\n    }\n    const tokenSet = new Set(tokens);\n    const key = [text, pattern].join(\"/\");\n    return [text, pattern, tokenSet, key];\n  };\n\n  const settings = [];\n  const phrases = [];\n  haikusRaw.forEach((h) => {\n    const items = h.split(\"/\");\n    if (items.length === 2) {\n      settings.push(cleanPOS(items[0], items[1]));\n    } else {\n      const verses = items.slice(0, 2);\n      const patterns = items.slice(2);\n      phrases.push([\n        cleanPOS(verses[0], patterns[0]),\n        cleanPOS(verses[1], patterns[1]),\n      ]);\n    }\n  });\n\n  const wordToTag = {};\n  const allKeywords = [];\n  // phrases\n  const allVerses = [...settings, ...phrases.flat()];\n  allVerses.forEach(([verse, pattern, tokenSet]) => {\n    const tokens = [...tokenSet];\n    const tags = pattern.split(\" \");\n    if (tokens.length === tags.length) {\n      tokens.forEach((t, i) => {\n        if (!(t in wordToTag)) {\n          wordToTag[t] = tags[i];\n          if (\n            tags[i] === \"NN\" &&\n            !allKeywords.includes(t) &&\n            (cuesToTargets.has(t) || targetsToCues.has(t))\n          ) {\n            allKeywords.push(t);\n          }\n        }\n      });\n    }\n  });\n\n  const seasonToSeasonalWords = new Map();\n  const seasonalWordsToSeasons = new Map();\n  seasons.forEach((season) => {\n    const seasonKey = season;\n    // const seasonKey = season === \"fall\" ? \"autumn\" : season;\n    const others = neighbours(season);\n    if (seasonToSeasonalWords.has(seasonKey)) {\n      const prev = seasonToSeasonalWords.get(seasonKey);\n      others.forEach((e) => prev.push(e));\n    } else {\n      seasonToSeasonalWords.set(seasonKey, others);\n    }\n    others.forEach((other) => {\n      if (!seasonalWordsToSeasons.has(other))\n        seasonalWordsToSeasons.set(other, []);\n      seasonalWordsToSeasons.get(other).push(seasonKey);\n    });\n  });\n\n  // console.log(seasonToSeasonalWords);\n  // console.log(seasonalWordsToSeasons);\n\n  // printHaiku(random.shuffle(allKeywords).slice(0, 4));\n  // console.log(haiku([\"summer\"], 100).slice(0, 10));\n  // console.log(haiku([\"winter\"], 100).slice(0, 10));\n  // console.log(haiku([\"typewriter\"], 100).slice(0, 10));\n  // console.log(countRelationship([\"spring\"], [\"blossom\"], [\"ice\", \"cream\"]));\n\n  return {\n    haikusRaw,\n    cuesToTargets,\n    targetsToCues,\n    neighbours,\n    associated,\n    randomWord,\n    gatherThemes,\n    haiku,\n    findSeason,\n    // versesFromThemes,\n    walkAssociations,\n  };\n\n  function findSeason(words) {\n    let sums = {\n      winter: 0,\n      autumn: 0,\n      spring: 0,\n      summer: 0,\n    };\n\n    let exactMatches = new Set();\n    words.forEach((w) => {\n      if (w === \"fall\") w = \"autumn\";\n      if (seasons.includes(w)) {\n        exactMatches.add(w);\n      }\n    });\n\n    // if only one season is present in input, make that the result\n    // so e.g. \"winter sun\" -> winter, not winter + summer\n    // but \"cool sun\" can be both winter and summer\n    if (exactMatches.size === 1) {\n      const m = [...exactMatches][0];\n      sums[m]++;\n    } else {\n      words.forEach((w) => {\n        if (w === \"fall\") w = \"autumn\";\n        if (seasons.includes(w)) {\n          sums[w]++;\n        } else if (seasonalWordsToSeasons.has(w)) {\n          seasonalWordsToSeasons.get(w).forEach((s) => {\n            if (s === \"fall\") s = \"autumn\";\n            if (s in sums) {\n              sums[s]++;\n            }\n          });\n        }\n      });\n    }\n\n    const matches = Object.entries(sums).sort((a, b) => b[1] - a[1]);\n    const seasonResults = matches.filter((t) => t[1] > 0).map((s) => s[0]);\n    return {\n      seasons: seasonResults,\n      season: seasonResults.length === 1 ? seasonResults[0] : null,\n      matches,\n    };\n  }\n\n  function printHaiku(inputs) {\n    const h = haiku(inputs);\n    const txt = `${inputs.join(\",\")}--\\n${h\n      .slice(0, 10)\n      .map((n) => n.value.join(\" / \"))\n      .join(\"\\n\")}`;\n    console.log(txt);\n    console.log(\"\\n\");\n  }\n\n  function getFocusWords(tokens) {\n    return findFocusWords(tokens, wordToTag);\n  }\n\n  function excludeClashingSeasonalWords(curSeasons, words) {\n    if (!curSeasons || curSeasons.length === 0) return words.slice();\n\n    const result = [];\n    words.forEach((w) => {\n      const key = w === \"fall\" ? \"autumn\" : w;\n      if (seasons.includes(key)) {\n        if (curSeasons.includes(key) || curSeasons.includes(w)) {\n          result.push(w);\n        }\n      } else {\n        result.push(w);\n      }\n    });\n    return result;\n\n    // const result = [];\n    // words.forEach((w) => {\n    //   const key = w === \"fall\" ? \"autumn\" : w;\n    //   if (seasons.includes(key)) {\n    //     if (curSeasons.includes(key) || curSeasons.includes(w)) {\n    //       result.push(w);\n    //     }\n    //   } else if (seasonalWordsToSeasons.has(key)) {\n    //     const targetSeasons = seasonalWordsToSeasons.get(key);\n    //     if (targetSeasons.some((s) => curSeasons.includes(s))) {\n    //       result.push(w);\n    //     }\n    //   } else {\n    //     result.push(w);\n    //   }\n    // });\n    // return result;\n  }\n\n  function haiku(inputWords, maxIterations = 25, minHaikus = 10) {\n    const curSeasons = findSeason(inputWords).seasons;\n    let otherSeasons = [];\n    if (curSeasons.length > 0) {\n      otherSeasons = seasons.filter((s) => {\n        const k = s === \"autumn\" ? \"fall\" : s;\n        return !curSeasons.includes(s) && !curSeasons.includes(k);\n      });\n    }\n\n    const associatedWithInput = excludeClashingSeasonalWords(curSeasons, [\n      ...new Set([...inputWords, ...associated(inputWords)]),\n    ]);\n    const allInputWords = excludeClashingSeasonalWords(curSeasons, [\n      ...new Set([\n        ...inputWords,\n        ...inputWords.map((w) => neighbours(w)).flat(),\n      ]),\n    ]);\n    const poems = [];\n    const input = [...new Set([...inputWords])];\n    const settingList = filterHaiku(associatedWithInput, {\n      stanza: 0,\n      minAttempts: 0,\n      exclude: [...otherSeasons],\n    });\n    if (settingList.length <= 3) return [];\n\n    for (let i = 0; poems.length < minHaikus && i < maxIterations; i++) {\n      const [verse0, pattern0] = random.pick(settingList);\n      const focus = getFocusWords(tokenize(verse0)).filter(\n        (w) => !input.includes(w)\n      );\n      if (focus.length === 0) continue;\n      const closest = excludeClashingSeasonalWords(\n        curSeasons,\n        associated([...focus])\n          .filter((w) => !focus.includes(w) && !input.includes(w))\n          .slice(0, 10)\n      );\n      if (closest.length === 0) continue;\n\n      const verse1s = filterHaiku(closest, {\n        stanza: 1,\n        minAttempts: 0,\n        minSize: 5,\n        exclude: [...tokenize(verse0), ...otherSeasons],\n      });\n      if (verse1s.length <= 3) continue;\n      const [verse1, pattern1] = random.pick(verse1s);\n\n      const validPatterns = [];\n      phrases.forEach((chunk) => {\n        const [second, third] = chunk;\n        if (second[1] === pattern1) {\n          validPatterns.push(third[1]);\n        }\n      });\n\n      const farthest = excludeClashingSeasonalWords(curSeasons, [\n        ...new Set(\n          closest\n            .slice(0, 5)\n            .map((w) => gatherThemes(w))\n            .flat()\n            .filter(\n              (w) =>\n                !input.includes(w) && !focus.includes(w) && !closest.includes(w)\n            )\n        ),\n      ]);\n      const verse2s = filterHaiku(farthest, {\n        stanza: 2,\n        minSize: 5,\n        minAttempts: 0,\n        patterns: validPatterns,\n        exclude: [\n          ...tokenize(verse0),\n          ...tokenize(verse1),\n          ...otherSeasons,\n          ...focus,\n          ...closest,\n        ],\n      });\n      if (verse2s.length <= 3) continue;\n      const [verse2, pattern2] = random.pick(verse2s);\n\n      const poem = [verse0, verse1, verse2];\n      poems.push({\n        poem,\n        patterns: [pattern0, pattern1, pattern2],\n        themesClose: closest,\n        themesFar: farthest,\n      });\n    }\n\n    poems.forEach((p) => {\n      const lineTokens = p.poem.map((line) => tokenize(line));\n      // const line0 = lineTokens[0];\n      // const line12 = [...lineTokens[1], ...lineTokens[2]];\n      const relations = countRelationshipLines(\n        associatedWithInput,\n        lineTokens[0],\n        lineTokens[1],\n        lineTokens[2]\n      );\n      p.debug = [p.poem.join(\"/\"), \"---\", relations].join(\" \");\n      p.weight = relations;\n      p.value = p.poem;\n    });\n    // poems.sort((a, b) => a.relations - b.relations);\n    poems.sort((a, b) => b.weight - a.weight);\n    // poems.forEach((p) => console.log(p.debug));\n    const result = poems.map((p) => {\n      return { value: p.poem, weight: p.weight };\n    });\n    return result;\n  }\n\n  function intersections(na, nb) {\n    let hits = 0;\n    for (let i = 0; i < na.length; i++) {\n      for (let j = 0; j < nb.length; j++) {\n        if (na[i] === nb[j]) {\n          hits++;\n        }\n      }\n    }\n    return hits;\n  }\n\n  function countRelationshipLines(inputs, a, b, c) {\n    const assoc = countAssociations([...a, ...b, ...c]);\n    let avg = assoc.reduce((sum, a) => sum + a, 0) / 3;\n    let len = Math.sqrt(assoc[0] * assoc[0] + assoc[1] * assoc[1]);\n    let mlen = Math.abs(assoc[0]) + Math.abs(assoc[1]);\n\n    let norm = assoc.slice();\n    // if (len !== 0) {\n    //   norm[0] /= len;\n    //   norm[1] /= len;\n    //   norm[0] *= 5;\n    //   norm[1] *= 5;\n    // }\n\n    const na = [\n      ...new Set([...a, ...a.map((w) => neighbours(w, true)).flat()]),\n    ];\n    const nb = [\n      ...new Set([...b, ...b.map((w) => neighbours(w, true)).flat()]),\n    ];\n    const nc = [\n      ...new Set([...c, ...c.map((w) => neighbours(w, true)).flat()]),\n    ];\n\n    const i0 = intersections(na, nb);\n    const i1 = intersections(nb, nc);\n    const i2 = intersections(na, nc);\n    const nonZeroSum = [i0, i1, i2].reduce((sum, a) => {\n      return sum + (a > 0 ? 1 : 0);\n    }, 0);\n    const score = nonZeroSum >= 2 ? 1 : 0; //nonZeroSum > 1 ? 1 : 0;\n\n    const allNeighbors = [...new Set([...na, ...nb, ...nc])];\n\n    const iz0 = intersections(na, inputs);\n    const iz1 = intersections(nb, inputs);\n    const iz2 = intersections(nc, inputs);\n    const inputNonZeroSum = [iz0, iz1, iz2].reduce((sum, a) => {\n      return sum + (a > 0 ? 1 : 0);\n    }, 0);\n    const inputNonZeroScore = inputNonZeroSum >= 1 ? 1 : 0;\n\n    return inputNonZeroScore * score * (norm[0] * -1 + norm[1]);\n    // (norm[0] * 1 + norm[1] > 0 ? 1 : 0);\n    // return inputNonZeroScore + score * (norm[0] * -1 + norm[1] > 0 ? 1 : 0);\n    // let score = nonZeros + assoc[0] * 0.5 + assoc[1] * 1;\n    // const score = (norm[0] > 0 ? 1 : 0) * (norm[1] > 0 ? 1 : 0);\n    // return score * norm[0] * nonZeros;\n    // return Math.abs(score - 7);\n\n    // return [assoc, \"-\", avg.toFixed(2), len.toFixed(2), mlen];\n\n    // // let score = 0;\n    // const vec = [i0, i1, i2];\n\n    // const len = Math.sqrt(i0 * i0 + i1 * i1 + i2 * i2);\n\n    // let sum = 0;\n    // if (len !== 0) {\n    //   for (let i = 0; i < vec.length; i++) {\n    //     sum += (1 / 3) * (vec[i] / len);\n    //   }\n    // }\n\n    // sum += nonZeros;\n\n    // return [sum, ];\n    // return sum;\n    // return [Math.sqrt(lenSq), \"-\", vec];\n  }\n\n  function countRelationship(a, b) {\n    a = Array.isArray(a) ? a : [a];\n    b = Array.isArray(b) ? b : [b];\n\n    let hits0 = intersections(a, b);\n\n    const na = [...new Set([...a, ...a.map((w) => neighbours(w)).flat()])];\n    const nb = [...new Set([...b, ...b.map((w) => neighbours(w)).flat()])];\n\n    let hits1 = intersections(na, nb);\n\n    const na2 = [...new Set([...na, ...na.map((w) => neighbours(w)).flat()])];\n    const nb2 = [...new Set([...nb, ...nb.map((w) => neighbours(w)).flat()])];\n\n    let hits2 = intersections(na2, nb2);\n\n    return [hits0, hits1, hits2];\n  }\n\n  function distance(a, b, depth = 0, maxDepth = 2) {\n    a = Array.isArray(a) ? a : [a];\n    b = Array.isArray(b) ? b : [b];\n\n    const na = [\n      ...new Set([...a, ...a.map((w) => neighbours(w, true)).flat()]),\n    ];\n    const nb = [\n      ...new Set([...b, ...b.map((w) => neighbours(w, true)).flat()]),\n    ];\n\n    let intersect = false;\n    outer: for (let i = 0; i < na.length; i++) {\n      for (let j = 0; j < nb.length; j++) {\n        if (na[i] === nb[j]) {\n          intersect = true;\n          break outer;\n        }\n      }\n    }\n\n    console.log(depth);\n    console.log(a, b);\n    console.log(na, nb);\n    console.log(intersect);\n    console.log(\"--\");\n\n    if (intersect) {\n      return depth;\n    } else if (depth < maxDepth) {\n      return distance(na, nb, depth + 1, maxDepth);\n    } else {\n      return depth;\n    }\n  }\n\n  function countAssociations(tokens) {\n    const relations1 = new Set();\n    const relations2 = new Set();\n    tokens.forEach((token) => {\n      const related = neighbours(token);\n      tokens.forEach((other) => {\n        if (token === other) return;\n        const relation = [token, other];\n        relation.sort();\n        const r = relation.join(\":\");\n        if (related.includes(other)) {\n          if (!relations1.has(r)) {\n            relations1.add(r);\n          }\n        } else {\n          const otherRelated = neighbours(other);\n          if (otherRelated.some((o) => related.includes(o))) {\n            if (!relations2.has(r)) {\n              relations2.add(r);\n            }\n          }\n        }\n      });\n    });\n    return [relations1.size, relations2.size];\n  }\n\n  function filterHaiku(\n    context = \"\",\n    {\n      stanza = 0,\n      include = [],\n      exclude = [],\n      attempts = 0,\n      maxAttempts = 3,\n      minAttempts = 0,\n      minSize = 10,\n      patterns = null,\n    } = {}\n  ) {\n    context = (Array.isArray(context) ? context : [context]).filter(Boolean);\n    patterns = (Array.isArray(patterns) ? patterns : [patterns]).filter(\n      Boolean\n    );\n    if (context.length <= 0) return [];\n    const map = {};\n    include.forEach((chunk) => {\n      const [verse, pattern, _, key] = chunk;\n      if (!(key in map)) {\n        map[key] = chunk;\n      }\n    });\n    if (stanza === 0) {\n      settings.forEach((chunk) => {\n        checkChunk(chunk);\n      });\n    } else {\n      const idx = stanza - 1;\n      if (idx !== 0 && idx !== 1) {\n        throw new Error(`Stanza must be 0, 1, or 2`);\n      }\n      phrases.forEach((set) => {\n        const chunk = set[idx];\n        checkChunk(chunk);\n      });\n    }\n    const nextChunks = Object.values(map);\n    if (\n      attempts < minAttempts ||\n      (nextChunks.length < minSize && attempts < maxAttempts)\n    ) {\n      let newContext = context.map((c) => neighbours(c)).flat();\n      return filterHaiku(newContext, {\n        include: nextChunks,\n        attempts: attempts + 1,\n        maxAttempts,\n        minAttempts,\n        minSize,\n        patterns,\n        stanza,\n      });\n    }\n    return nextChunks;\n\n    function checkChunk(chunk) {\n      const [verse, curPattern, tokens, key] = chunk;\n      if (!(key in map)) {\n        if (!exclude.some((e) => tokens.has(e))) {\n          let validPattern =\n            patterns.length === 0 || patterns.includes(curPattern);\n          if (validPattern && context.some((c) => tokens.has(c))) {\n            map[key] = chunk;\n          }\n        }\n      }\n    }\n  }\n\n  function associated(words) {\n    words = Array.isArray(words) ? words : [words];\n    const sets = [];\n    words.forEach((w) => {\n      sets.push(neighbours(w));\n    });\n\n    const associatedWords = [\n      ...new Set(sets.flat().filter((w) => !words.includes(w))),\n    ];\n\n    const scored = associatedWords\n      .map((w) => {\n        // how many sets this word appears in\n        let score = 0;\n        sets.forEach((s) => {\n          if (s.includes(w)) score++;\n        });\n        words.forEach((cue) => {\n          if (cuesToTargets.has(cue) && cuesToTargets.get(cue).has(w))\n            score += 1;\n          // if (targetsToCues.has(cue) && targetsToCues.get(cue).has(w))\n          //   score += 1;\n        });\n        if (score <= 1) return false;\n        return {\n          word: w,\n          score,\n        };\n      })\n      .filter(Boolean);\n\n    scored.sort((a, b) => b.score - a.score);\n    return scored.map((w) => w.word);\n  }\n\n  function randomWord() {\n    return random.pick(cues);\n  }\n\n  // function versesFromThemes(stanza, themes, ignore = []) {\n  //   return haikus\n  //     .filter((h) => {\n  //       if (themes.includes(h.lines[stanza])) return false;\n  //       if (\n  //         ignore.length &&\n  //         h.tokenized[stanza].some((t) => ignore.includes(t))\n  //       )\n  //         return false;\n  //       if (h.tokenized[stanza].some((t) => themes.includes(t))) return true;\n  //       return false;\n  //     })\n  //     .map((t) => t.lines[stanza]);\n  // }\n\n  function neighbours(word, direct = false) {\n    word = word.toLowerCase();\n    const a = new Set(cuesToTargets.get(word) || []);\n    const b = direct ? [] : new Set(targetsToCues.get(word) || []);\n    const neighbs = [...new Set([...a, ...b])].filter((w) => w !== word);\n    return neighbs;\n  }\n\n  function gatherThemes(seed) {\n    return Array.from(\n      new Set([\n        ...walkAssociations(seed.toLowerCase(), 1, 10, 1, 4),\n        ...walkAssociations(seed.toLowerCase(), 5, 10, 1, 1),\n      ])\n    );\n  }\n\n  function walkAssociations(\n    seed,\n    epochs = 1,\n    iterations = 8,\n    minSteps = 1,\n    maxSteps = 4\n  ) {\n    const words = new Set();\n    seed = seed.toLowerCase();\n    words.add(seed);\n    for (let e = 0; e < epochs; e++) {\n      let start = random.pick(Array.from(words));\n      for (let i = 0; i < iterations; i++) {\n        let current = start;\n        const steps = random.rangeFloor(minSteps, maxSteps);\n        innerLoop: for (let j = 0; j < steps; j++) {\n          const isCueToTarget = random.boolean();\n          const set = Array.from(\n            (isCueToTarget\n              ? cuesToTargets.get(current)\n              : targetsToCues.get(current)) || []\n          );\n          if (set.length === 0) break innerLoop;\n          current = random.pick(set);\n        }\n        words.add(current);\n      }\n    }\n    return Array.from(words);\n  }\n}\n","module.exports = function objectFit({\n  parentWidth,\n  parentHeight,\n  childWidth,\n  childHeight,\n  fit = \"contain\",\n  scale = 1,\n  padding = 0,\n  offsetX = 0.5,\n  offsetY = 0.5,\n}) {\n  const childRatio = childWidth / childHeight;\n  const parentRatio = parentWidth / parentHeight;\n  let w = childWidth * scale;\n  let h = childHeight * scale;\n  let x = 0;\n  let y = 0;\n  if (fit === \"scale-down\") {\n    if (w > parentWidth || h > parentHeight) {\n      const ratio = Math.min(\n        parentWidth / childWidth,\n        parentHeight / childHeight\n      );\n      w = childWidth * scale * ratio - padding * 2;\n      h = childHeight * scale * ratio - padding * 2;\n    }\n  } else if (fit === \"contain\" || fit === \"cover\") {\n    w = parentWidth * scale;\n    h = parentHeight * scale;\n    const contains = fit === \"contain\";\n    const useWidth = contains\n      ? childRatio > parentRatio\n      : childRatio < parentRatio;\n    if (useWidth) {\n      h = w / childRatio;\n    } else {\n      w = h * childRatio;\n    }\n  } else if (fit === \"fill\") {\n    w = parentWidth * scale;\n    h = parentHeight * scale;\n  }\n  x = (parentWidth - w) * offsetX;\n  y = (parentHeight - h) * offsetY;\n  return [x, y, w, h];\n};\n","const MAX_VALID_UINT32 = 4294967295.0;\nconst MAX_UINT32 = 4294967296.0;\n\nconst GEN_SEED = 988523490;\n\nlet uint32;\n\nconst defaultRandom = PRNG().seed(GEN_SEED);\n\nfunction PRNG() {\n  const SizeState = 624;\n  const M = 397;\n  const FirstHalf = SizeState - M;\n  let state = new Uint32Array(SizeState);\n  let index = 0;\n  const MATRIX_A = 0x9908b0df; /* constant vector a */\n  const UPPER_MASK = 0x80000000; /* most significant w-r bits */\n  const LOWER_MASK = 0x7fffffff; /* least significant r bits */\n  const mag01 = new Uint32Array(2);\n  mag01[0] = 0;\n  mag01[1] = MATRIX_A;\n\n  return {\n    seed,\n    next_uint32,\n    next,\n    nextIncludingOne,\n  };\n\n  function seed(uint32Seed) {\n    state[0] = uint32Seed >>> 0;\n    for (let i = 1; i < SizeState; i++) {\n      var s = state[i - 1] ^ (state[i - 1] >>> 30);\n      state[i] =\n        ((((s & 0xffff0000) >>> 16) * 1812433253) << 16) +\n        (s & 0x0000ffff) * 1812433253 +\n        i;\n      /* See Knuth TAOCP Vol2. 3rd Ed. P.106 for multiplier. */\n      /* In the previous versions, MSBs of the seed affect   */\n      /* only MSBs of the array mt[].                        */\n      /* 2002/01/09 modified by Makoto Matsumoto             */\n      state[i] >>>= 0;\n      /* for >32 bit machines */\n    }\n    twist();\n    return this;\n  }\n\n  function next() {\n    return next_uint32() * (1.0 / MAX_UINT32);\n  }\n\n  function nextIncludingOne() {\n    return next_uint32() * (1.0 / MAX_VALID_UINT32);\n  }\n\n  function next_uint32() {\n    // compute new state ?\n    if (index >= SizeState) {\n      twist();\n    }\n    // shuffle bits around\n    let x = state[index++];\n    x ^= x >>> 11;\n    x ^= (x << 7) & 0x9d2c5680;\n    x ^= (x << 15) & 0xefc60000;\n    x ^= x >>> 18;\n    return x >>> 0;\n  }\n\n  function twist() {\n    let kk;\n    let y;\n    for (kk = 0; kk < SizeState - M; kk++) {\n      y = (state[kk] & UPPER_MASK) | (state[kk + 1] & LOWER_MASK);\n      state[kk] = state[kk + M] ^ (y >>> 1) ^ mag01[y & 0x1];\n    }\n    for (; kk < SizeState - 1; kk++) {\n      y = (state[kk] & UPPER_MASK) | (state[kk + 1] & LOWER_MASK);\n      state[kk] = state[kk + (M - SizeState)] ^ (y >>> 1) ^ mag01[y & 0x1];\n    }\n    y = (state[SizeState - 1] & UPPER_MASK) | (state[0] & LOWER_MASK);\n    state[SizeState - 1] = state[M - 1] ^ (y >>> 1) ^ mag01[y & 0x1];\n    // reset to zero for index random number\n    index = 0;\n  }\n}\n\nPRNG.generateSeedFast = generateSeedFast;\nfunction generateSeedFast() {\n  return Math.floor(defaultRandom.next() * MAX_VALID_UINT32);\n}\n\nPRNG.generateSeed = generateSeed;\nfunction generateSeed() {\n  if (window.crypto && window.crypto.getRandomValues) {\n    if (!uint32) uint32 = new Uint32Array(1);\n    window.crypto.getRandomValues(uint32);\n    return uint32[0];\n  }\n  return Math.floor(Math.random() * MAX_VALID_UINT32);\n}\n\nPRNG.MAX_VALID_UINT32 = MAX_VALID_UINT32;\n\nmodule.exports = PRNG;\n","const qs = require(\"query-string\");\n\nfunction parseQuery() {\n  if (typeof window === \"undefined\") return {};\n  const parsed = qs.parse(window.location.search);\n  Object.keys(parsed).forEach((key) => {\n    if (parsed[key] === null) parsed[key] = true;\n    if (parsed[key] === \"false\") parsed[key] = false;\n    if (parsed[key] === \"true\") parsed[key] = true;\n    if (isNumber(parsed[key])) {\n      parsed[key] = Number(parsed[key]);\n    }\n  });\n  return parsed;\n}\n\nfunction isNumber(x) {\n  if (typeof x === \"number\") return true;\n  if (/^0x[0-9a-f]+$/i.test(x)) return true;\n  return /^[-+]?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(e[-+]?\\d+)?$/.test(x);\n}\n\nmodule.exports = parseQuery();\n","// const createInput = require(\"./util/createInput\");\nconst SimplexNoise = require(\"simplex-noise\");\nconst Random = require(\"./Random\");\nconst MathUtil = require(\"canvas-sketch-util/math\");\nconst objectFit = require(\"./objectFit\");\nconst loadData = require(\"./load-data\");\nconst easeFlip = require(\"eases/sine-in\");\nconst bsp = require(\"./bsp\");\nconst treeUtil = require(\"./tree-util\");\nconst wordWrap = require(\"word-wrap\");\nconst query = require(\"./query\");\n\nconst isFrame = query.page != null;\nconst pageNum = query.page != null ? parseInt(query.page, 10) : 0;\nconst isPrint = query.print;\nconst isStatic = isFrame || isPrint;\nconst showText = !isPrint;\n\nconst shouldCoverBackground = !query.nohighlight;\nlet seed = typeof query.seed === \"number\" ? query.seed : Random.pureSeed();\nconsole.log(\"Random seed: %d\", seed);\n\nconst settings = {\n  dimensions: isFrame ? [2412, 3074] : undefined,\n  pixelRatio: isFrame ? 1 : undefined,\n  hotkeys: false,\n  animate: !isStatic,\n};\n\nsettings.suffix = seed;\n// if (isStatic) {\n//   settings.exportPixelRatio = 4;\n// }\n\nconst sketch = async (props) => {\n  const fonts = {\n    bold: {\n      url: \"assets/fonts/SilkaMono-Semibold.otf\",\n      name: \"SilkaMono-Bold\",\n    },\n    regular: {\n      url: \"assets/fonts/SilkaMono-Regular.otf\",\n      name: \"SilkaMono-Light\",\n    },\n  };\n  // We can use Browser's \"FontFace\" API to load fonts from JavaScript\n  // This will ensure the font is renderable before first drawing to Canvas\n  await Promise.all(\n    Object.values(fonts).map(async (def) => {\n      const font = new window.FontFace(def.name, `url(${def.url})`);\n\n      // We use async/await ES6 syntax to wait for the font to load\n      await font.load();\n\n      // Add the loaded font to the document\n      document.fonts.add(font);\n    })\n  );\n\n  const { data = {} } = props;\n  const isSVG = data.svg;\n\n  const canvas = props.canvas;\n  const defaultFontFamily = fonts.regular.name;\n  const drawDirectToCanvas = false;\n  const desiredAspect = 2412 / 3074;\n  const desiredWidth = 600;\n  const desiredHeight = desiredWidth / desiredAspect;\n  const targetScale = props.width / desiredWidth;\n  // good dimensions [600,714]\n\n  const random = Random(seed);\n\n  const fontSize = 8 * (isFrame ? targetScale : 1);\n  const lineHeightSize = 1.15;\n  const shrink = 1.15;\n  let textMeasuredWidth;\n  const textWidth = fontSize;\n  const textHeight = fontSize;\n  const foreground = \"black\";\n  const gray = \"hsl(0, 0%, 50%)\";\n  const background = \"hsl(0, 0%, 95%)\";\n  const corpus = await loadData(random);\n\n  const jitterNoise = new SimplexNoise(random.value);\n  // const inputEl = createInput(onUserInput);\n\n  let lastUserText = \"\";\n  let caretVisible = true;\n  const caretTickDelay = 530 / 1 / 1000;\n  let caretElapsed = 0;\n\n  const defaultInputs = [\"winter\", \"bloom\", \"moon\", \"october\", \"mist\"];\n  let staticInput = typeof query.input === \"string\" ? query.input : undefined;\n  if (!staticInput && typeof pageNum === \"number\" && isFrame) {\n    staticInput =\n      defaultInputs[MathUtil.wrap(pageNum - 1, 0, defaultInputs.length)];\n  }\n\n  const defaultText = staticInput || \"spring\";\n\n  const inputEl = isStatic\n    ? { value: \"\", selectionStart: 0 }\n    : createInput({\n        submit: () => {\n          clearUserTextTimeout();\n          textInputEnded();\n        },\n        changed: () => {\n          if (!lastUserText && inputEl.value) {\n            caretVisible = true;\n            caretElapsed = 0;\n          }\n          lastUserText = inputEl.value;\n          // console.log(\"changed!\", inputEl.value);\n          clearUserTextTimeout();\n          resetTextTimeout();\n        },\n      });\n\n  if (staticInput) inputEl.value = staticInput;\n  let steps = 0;\n  let frameTickElapsed = 0;\n\n  let textInputTimer = null;\n  const textInputDelay = 1000;\n\n  const frameTickFPS = 24;\n  const defaultTriggerDelay = 25;\n  const frameTickDelay = 1 / frameTickFPS;\n  let leafs = [];\n  let leafsToProcess = [];\n  let particles = [];\n  let particlesLeftToDraw = [];\n\n  let infoText = \"type in a prompt (winter, flower, moon...)\";\n\n  let words, haikus, remainingHaikus;\n\n  const userPosition = [0, 0];\n  const canvas2 = document.createElement(\"canvas\");\n  const context2 = canvas2.getContext(\"2d\");\n\n  let needsReset = false;\n  let hasDrawn = false;\n  let showGrid = false;\n  setFont(context2);\n  setFont(props.context);\n\n  const grid = {\n    columns: 60,\n    rows: 40,\n    x: 0,\n    y: 0,\n    cellWidth: textMeasuredWidth * shrink,\n    cellHeight: fontSize * lineHeightSize,\n  };\n  resize(props);\n  textInputEnded();\n  // console.log(\n  //   \"Font\",\n  //   textMeasuredWidth,\n  //   fontSize,\n  //   grid.cellWidth,\n  //   grid.cellHeight\n  // );\n  // console.log(grid.cellWidth / 2 - textMeasuredWidth / 2);\n  // console.log(grid.cellHeight / 2 - fontSize / 2);\n\n  // words.forEach(w => {\n  //   for (let j = 0; j < w.length; j++) {\n  //     const symbol = w.charAt(i);\n  //     const position =\n  //   }\n  // })\n\n  return { render, resize, download };\n\n  function download() {\n    if (isFrame && seed != null && typeof pageNum === \"number\") {\n      const a = document.createElement(\"a\");\n      a.href = canvas.toDataURL(\"image/png\");\n      a.download = seed + \"_\" + pageNum + \".png\";\n      a.click();\n    }\n  }\n\n  // function onUserInput(data) {\n  //   const { event } = data;\n  //   if (data.type === \"action\") {\n  //     if (data.name === \"h\") {\n  //     } else if (data.name === \"g\") {\n  //       showGrid = !showGrid;\n  //       event.preventDefault();\n  //     } else if (data.name === \"c\") {\n  //     }\n  //   } else if (data.type === \"arrow\") {\n  //     const step = event.shiftKey ? 5 : 1;\n  //     moveCaret(data.direction[0] * step, data.direction[1] * step * 0);\n  //   } else if (data.type === \"char\") {\n  //     // const g = placeUserChar(userPosition, data.char);\n  //     userText += data.char;\n  //     moveCaret(1, 0);\n  //   } else if (data.type === \"delete\") {\n  //     const idx = xyToIndex(userPosition);\n  //     removeCell(idx);\n  //   } else if (data.type === \"backspace\") {\n  //     if (!event.shiftKey) {\n  //       moveCaret(-1, 0);\n  //     }\n  //     const idx = xyToIndex(userPosition);\n  //     removeCell(idx);\n  //   } else if (data.type === \"enter\") {\n  //     clearUserTextTimeout();\n  //     textInputEnded();\n  //     moveCaret(0, 1);\n  //   } else if (data.type === \"escape\") {\n  //   }\n  // }\n\n  // function getInputClean () {\n  //   return String(inputEl.value||defaultText).toLowerCase();\n  // }\n\n  function textInputEnded() {\n    needsReset = true;\n    const tokenStr = (inputEl.value || defaultText).toLowerCase().replace(/[^a-z0-9\\-]+/g, ' ').trim();\n    const inputs = loadData.tokenize(tokenStr);\n    if (inputs.length === 0) inputs.push(defaultText);\n    words = corpus.gatherThemes(inputs[0]);\n    haikus = corpus.haiku(inputs, 50, 50).slice(0, 20);\n    remainingHaikus = haikus.slice();\n  }\n\n  function resetTextTimeout() {\n    textInputTimer = setTimeout(textInputEnded, textInputDelay);\n  }\n\n  function clearUserTextTimeout() {\n    clearTimeout(textInputTimer);\n    textInputTimer = null;\n  }\n\n  function removeCell() {}\n\n  function moveCaret(tx = 0, ty = 0) {\n    userPosition[0] += tx;\n    // userPosition[1] += ty;\n    clampUserPosition();\n  }\n\n  function clampUserPosition() {\n    userPosition[0] = MathUtil.clamp(userPosition[0], 0, grid.columns - 1);\n    // userPosition[1] = MathUtil.clamp(userPosition[1], 0, grid.rows - 1);\n  }\n\n  function setFont(context, fontFamily = defaultFontFamily) {\n    setFontFamily(context, fontFamily);\n    context.textAlign = \"left\";\n    context.textBaseline = \"middle\";\n    textMeasuredWidth = context.measureText(\"M\").width;\n  }\n\n  function setFontFamily(context, fontFamily, size = fontSize) {\n    context.font = `${size}px \"${fontFamily}\", \"Andale Mono\", \"Courier New\", monospace`;\n  }\n\n  function resize(props) {\n    const { width, height } = props;\n    const aspect = width / height;\n    const dim = Math.min(width, height);\n    const margin = dim * 0.075;\n    const paddingX = margin;\n    const paddingY = margin;\n    const paddingOffset = isPrint ? 0 : grid.cellHeight * 5;\n    // const paddingOffset = isFrame ? 0 : grid.cellHeight * 5;\n    grid.columns = Math.ceil((width - paddingX * 2) / grid.cellWidth);\n    grid.rows = Math.ceil(\n      (height - paddingY * 2 - paddingOffset) / grid.cellHeight\n    );\n\n    // grid.columns = 80;\n    // grid.rows = 60;\n\n    // const maxCols = 80;\n    // if (grid.columns >= maxCols) {\n    //   grid.columns = maxCols;\n    //   grid.rows = Math.floor(maxCols / aspect);\n    // }\n    // const maxRows = 80;\n    // if (grid.rows >= maxRows) {\n    //   grid.rows = maxRows;\n    //   grid.columns = Math.floor(maxRows * aspect);\n    // }\n\n    grid.x = (width - grid.columns * grid.cellWidth) / 2;\n    grid.y = (height - grid.rows * grid.cellHeight) / 2;\n\n    canvas2.width = props.canvasWidth;\n    canvas2.height = props.canvasHeight;\n    needsReset = true;\n    if (isPrint || isFrame) random.seed = seed;\n  }\n\n  function generate() {\n    particles.length = 0;\n    particlesLeftToDraw.length = 0;\n    leafs = [];\n    leafsToProcess = [];\n    remainingHaikus = haikus.slice();\n\n    let i = 0;\n    const tree = bsp({\n      // filter: (d) => d.depth > 0 && random.gaussian() > -1,\n      // random = () => Math.random(),\n      cellWidth: grid.cellWidth,\n      cellHeight: grid.cellHeight,\n      offset: [grid.x, grid.y],\n      rows: grid.rows,\n      columns: grid.columns,\n      variance: 0.5,\n      squariness: 0.5,\n      // bounds: [\n      //   [grid.x, grid.y],\n      //   [\n      //     grid.x + grid.columns * grid.cellWidth,\n      //     grid.y + grid.rows * grid.cellHeight,\n      //   ],\n      // ],\n      maxDepth: 12,\n      minDimension: grid.cellWidth * 2,\n      shouldSplit: (node) =>\n        node.width > grid.cellWidth * 6 && node.height > grid.cellHeight * 2,\n      random: random.value,\n    });\n\n    const removals = 1;\n    // const detached = [];\n    for (let i = 0; i < removals; i++) {\n      treeUtil.traverse(tree, (p) => {\n        if (p.leaf && p.parent && random.gaussian() > 0) {\n          // detached.push(p.parent);\n          const parent = p.parent;\n          p.parent.detach();\n          // p.parent.children.length = 0;\n          // console.log();\n        }\n      });\n    }\n\n    // treeUtil.traverse(tree, (n) => {\n    //   n.bounds.forEach((b) => {\n    // b[0] += grid.x;\n    // b[1] += grid.x;\n    //   });\n    // });\n    leafs = treeUtil.getLeafNodes(tree);\n    // leafs = leafs\n    //   .map((node) => {\n    //     // const newBounds = [node.bounds[0].slice(), node.bounds[1].slice()];\n    //     // newBounds[1][0] -= 2;\n    //     const newBounds = shrinkBounds(\n    //       node.bounds,\n    //       grid.cellWidth * 2,\n    //       grid.cellWidth * 0\n    //     );\n    //     if (!newBounds) return null;\n    //     node.innerBounds = newBounds;\n    //     return node;\n    //   })\n    //   .filter(Boolean);\n\n    // sort by area\n    leafs.sort((a, b) => b.width * b.height - a.width * a.height);\n    leafsToProcess = leafs.slice();\n    generateLeafs();\n  }\n\n  function generateLeafs() {\n    const labels = [];\n    let maxHaikus = 10;\n    let haikuCount = 0;\n\n    const haikuCellSpots = new Set();\n\n    for (let n = 0; n < leafsToProcess.length; n++) {\n      const node = leafsToProcess[n];\n      const [minGrid, maxGrid, columns, rows] = pixelBoundsToGridBounds(\n        node.bounds\n      );\n      const [minCol, minRow] = minGrid;\n      let [maxCol, maxRow] = maxGrid;\n\n      let colSpace = columns;\n      let rowSpace = rows;\n      if (colSpace <= 3 || rowSpace <= 3) continue;\n      const space = colSpace;\n\n      // this leaf is now \"processed\" and removed from the list\n      // leafsToProcess.shift();\n\n      const rowLabels = new Array(rowSpace).fill(0).map(() => []);\n      // let curWords = words.filter((f) => f.length >= 3 && Math.abs(f.length - space) < 20);\n      let curWords = words.filter((f) => f.length >= 3 && f.length <= space);\n      if (curWords.length > 0) {\n        // curWords.sort((a, b) => b.length - a.length);\n        // curWords.sort((a, b) => a.length - b.length);\n        curWords = random.shuffle(curWords);\n        for (let j = 0; j < curWords.length && j < rowSpace; j++) {\n          const word = curWords[j];\n          const label = [];\n          const color = foreground;\n\n          for (let i = 0; i < word.length; i++) {\n            const c = word.charAt(i);\n            let row, col;\n            col = Math.round(\n              MathUtil.mapRange(i, 0, word.length - 1, minCol, maxCol - 1, true)\n            );\n            row = minRow + j;\n            if (c === \" \") continue;\n            label.push(createCell(col, row, c, foreground));\n          }\n          if (label.length) rowLabels[j] = label;\n        }\n      }\n\n      if (remainingHaikus.length && haikuCount < maxHaikus) {\n        let haikuIndexToSplice = -1;\n        haikuLoop: for (let hi = 0; hi < remainingHaikus.length; hi++) {\n          const haiku = remainingHaikus[hi];\n          let lines = justified(haiku.value, colSpace, rowSpace);\n          if (lines.length < rowSpace) {\n            // const color = `hsl(${random.range(0, 360)}, 70%, 50%)`;\n            const maxLines = Math.min(lines.length, rowSpace);\n            const remainingLines = Math.max(0, rowSpace - lines.length);\n            const lineOff = random.rangeFloor(1, remainingLines);\n            // rowLabels[lineOff - 1] = [];\n            // rowLabels[lineOff + maxLines] = [];\n\n            const colStart = minCol;\n            const rowStart = minRow + lineOff;\n\n            // first we check to see if this haiku will collide with another\n            if (willCollide(haikuCellSpots, lines, colStart, rowStart)) {\n              continue haikuLoop;\n            }\n\n            for (let j = 0; j < lines.length; j++) {\n              const line = lines[j];\n              const label = [];\n              inner: for (let i = 0; i < line.length; i++) {\n                const [char, offset] = line[i];\n                const col = colStart + offset;\n                const row = rowStart + j;\n                label.push(\n                  createCell(col, row, char, foreground, fonts.bold.name, true)\n                );\n                haikuCellSpots.add([col, row].join(\":\"));\n              }\n              if (label.length) rowLabels[lineOff + j] = label;\n            }\n            haikuIndexToSplice = hi;\n            node.haiku = true;\n            node.rowspan = Math.min(lines.length, rowSpace);\n            break haikuLoop;\n          }\n        }\n        if (haikuIndexToSplice >= 0) {\n          remainingHaikus.splice(haikuIndexToSplice, 1);\n          haikuCount++;\n        }\n      }\n\n      rowLabels.forEach((l) => labels.push(l));\n    }\n\n    const consumedCells = [];\n\n    const allParticles = labels.flat();\n    const haikuParticles = allParticles.filter((h) => h.coverBackground);\n\n    allParticles.forEach((w) => {\n      if (!w.coverBackground) {\n        const key = w.position.join(\":\");\n        if (haikuCellSpots.has(key)) {\n          return;\n        }\n      }\n      particles.push(w);\n      particlesLeftToDraw.unshift(w);\n    });\n  }\n\n  function willCollide(currentSet, lines, colStart, rowStart) {\n    for (let j = 0; j < lines.length; j++) {\n      const line = lines[j];\n      for (let i = 0; i < line.length; i++) {\n        const [char, offset] = line[i];\n        const col = colStart + offset;\n        const row = rowStart + j;\n        const key = [col, row].join(\":\");\n        if (currentSet.has(key)) return true;\n      }\n    }\n    return false;\n  }\n\n  function shrinkBounds(bounds, amountX = 0, amountY = 0) {\n    const [min, max] = bounds.map((b) => b.slice());\n    const halfX = amountX / 2;\n    const halfY = amountY / 2;\n    const min2 = [min[0] + halfX, min[1] + halfY];\n    const max2 = [max[0] - halfX, max[1] - halfY];\n    if (min2[0] >= max2[0] || min2[1] >= max2[1]) return null;\n    return [min2, max2];\n  }\n\n  function justified(poem, columns) {\n    return wordWrap(poem.join(\"\\n\"), {\n      width: columns,\n      // cut: true,\n    })\n      .split(\"\\n\")\n      .map((line) => line.trim())\n      .filter(Boolean)\n      .map((line) => {\n        const result = [];\n        // const result = new Array(columns).fill(\" \");\n        for (let c = 0; c < line.length; c++) {\n          const char = line.charAt(c);\n          let offset = c;\n          // let offset = Math.round(\n          //   MathUtil.mapRange(c, 0, line.length - 1, 0, columns - 1, true)\n          // );\n          result.push([char, offset]);\n          // result[offset] = char;\n        }\n        return result;\n        // return result.map((s, i) => {\n        //   return [s, i];\n        // });\n      });\n    // const lines = [];\n    // for (let p = 0; p < poem.length; p++) {\n    //   const poemLine = poem[p];\n    //   const tokens = loadData.tokenize(poemLine);\n    //   const line = [];\n    //   for (let t = 0; t < tokens.length; t++) {\n    //     line.push()\n    //   }\n    // }\n    // return lines;\n  }\n\n  function createCell(\n    col,\n    row,\n    c,\n    color = foreground,\n    fontFamily = defaultFontFamily,\n    coverBackground = false\n  ) {\n    return {\n      coverBackground,\n      fontFamily,\n      drawn: false,\n      drawCount: 0,\n      time: 0,\n      duration: 0,\n      durationIn: 1,\n      durationOut: 0,\n      started: true,\n      active: true,\n      delay: 0,\n      alpha: 1,\n      color,\n      symbol: c,\n      sort: gridToPixel([col, row])[0] + random.gaussian(0, 80),\n      position: [col, row],\n    };\n  }\n\n  function render(props) {\n    renderFrame(props);\n    if (props.exporting && isSVG) {\n      return [\n        props.canvas,\n        data.svgSerialize(props, {\n          background,\n          foreground,\n          fontSize,\n          cellWidth: grid.cellWidth,\n          cellHeight: grid.cellHeight,\n          textWidth: textMeasuredWidth,\n          texts: particles.map((p) => {\n            const [cx, cy] = gridToPixel(p.position);\n\n            const jitterStrength = 0.5;\n            const f = 1;\n            const tx = jitterNoise.noise3D(cx * f, cy * f, -1) * jitterStrength;\n            const ty = jitterNoise.noise3D(cx * f, cy * f, 1) * jitterStrength;\n\n            const x = cx + tx;\n            const y = cy + ty;\n            return {\n              x,\n              y,\n              symbol: p.symbol,\n            };\n          }),\n        }),\n      ];\n    }\n  }\n\n  function renderFrame(props) {\n    const { width, height, data = {} } = props;\n    const altContext = drawDirectToCanvas ? props.context : context2;\n\n    altContext.save();\n    if (!drawDirectToCanvas) altContext.scale(props.scaleX, props.scaleY);\n    if (needsReset) {\n      if (isSVG) {\n        altContext.clearRect(0, 0, width, height);\n      } else {\n        altContext.fillStyle = background;\n        altContext.fillRect(0, 0, width, height);\n      }\n      generate();\n      needsReset = false;\n      // particlesLeftToDraw = particles.slice();\n      // particlesLeftToDraw.reverse();\n    }\n    const dt = Math.min(1 / 10, props.deltaTime);\n\n    let didStep = false;\n    caretElapsed += dt;\n    if (caretElapsed >= caretTickDelay) {\n      caretElapsed %= caretTickDelay;\n      caretVisible = !caretVisible;\n    }\n\n    frameTickElapsed += dt;\n    if (frameTickElapsed > frameTickDelay) {\n      frameTickElapsed %= frameTickDelay;\n      steps++;\n      didStep = true;\n      // if (steps % 30 === 0) {\n      //   clearBackground();\n      //   generate();\n      // }\n    }\n\n    setFont(altContext);\n\n    const gridWidth = grid.cellWidth * grid.columns;\n    const gridHeight = grid.cellHeight * grid.rows;\n\n    const [tx, ty, tw, th] = objectFit({\n      parentWidth: width,\n      parentHeight: height,\n      childWidth: gridWidth,\n      childHeight: gridHeight,\n      fit: \"scale-down\",\n      padding: 20,\n      scale: 1,\n      offsetX: 0.5,\n      offsetY: 0.5,\n    });\n\n    const sx = tw / gridWidth;\n    const sy = th / gridHeight;\n\n    altContext.save();\n    // altContext.translate(tx, ty);\n    // altContext.scale(sx, sy);\n    // if (didStep) {\n\n    // }\n\n    altContext.save();\n    if (showText && isFrame) altContext.translate(0, grid.cellHeight * 1.5);\n    if (didStep || isStatic) {\n      const totalCount = particles.length;\n      const totalDuration = 1;\n      const totalToProcessPerFrame = isStatic ? Infinity : 100; //Math.round(totalCount / 60 / (totalDuration / 2));\n      for (\n        let i = particlesLeftToDraw.length - 1, c = 0;\n        i >= 0 && c < totalToProcessPerFrame;\n        i--, c++\n      ) {\n        const p = particlesLeftToDraw[i];\n        if (isStatic) {\n          p.slice = null;\n          particlesLeftToDraw.splice(i, 1);\n        } else {\n          if (p.drawCount === 0) {\n            p.slice = 0;\n          } else if (p.drawCount === 1) {\n            p.slice = 1;\n          } else {\n            particlesLeftToDraw.splice(i, 1);\n          }\n        }\n        drawText(altContext, p);\n        p.drawCount++;\n      }\n    }\n    altContext.restore();\n\n    // context.save();\n    // context.translate(tx, ty);\n    // context.scale(sx, sy);\n    altContext.restore();\n\n    altContext.restore();\n    const context = props.context;\n\n    if (showGrid) {\n      context.strokeStyle = \"black\";\n      context.fillStyle = \"black\";\n      context.globalAlpha = 0.5;\n      context.beginPath();\n      for (let y = 0; y < grid.rows; y++) {\n        for (let x = 0; x < grid.columns; x++) {\n          // if (userPosition[0] === x && userPosition[1] === y) continue;\n          const px = grid.x + x * grid.cellWidth;\n          const py = grid.y + y * grid.cellHeight;\n\n          const radius = 0.25;\n          context.rect(px, py, grid.cellWidth, grid.cellHeight);\n          const ax = px + grid.cellWidth / 2;\n          const ay = py + grid.cellHeight / 2;\n          context.moveTo(ax, ay);\n          context.arc(ax, ay, radius, 0, Math.PI * 2, false);\n        }\n      }\n      context.stroke();\n      // context.fill();\n      context.globalAlpha = 1;\n    }\n\n    if (!drawDirectToCanvas) {\n      context.clearRect(0, 0, width, height);\n      context.drawImage(canvas2, 0, 0, width, height);\n\n      setFont(context);\n\n      // const ix = grid.x;\n      // const iy = grid.y - fontSize * 2;\n      // const [ipx, ipy] = gridToPixel([0, 0]);\n      // const showText = !isPrint;\n      if (showText) {\n        context.save();\n        const s = 2;\n        context.scale(s, s);\n        context.translate(-grid.x / s, -grid.y / s);\n        const foff = isFrame ? 1 : 2;\n        context.translate(0, -grid.cellHeight * foff);\n        // context.translate(grid.x, grid.y);\n        // context.translate(grid.x, grid.y);\n        // context.translate(grid.x, grid.y);\n\n        const infoGrid = [0, 0];\n        setFontFamily(context, defaultFontFamily, fontSize * 3);\n        const userText = inputEl.value;\n        const curText = userText.length ? userText : infoText;\n        for (let i = 0; i < curText.length; i++) {\n          drawText(context, {\n            symbol: curText.charAt(i),\n            position: [infoGrid[0] + i, infoGrid[1]],\n            coverBackgroundColor: \"#cecece\",\n            coverBackground: true,\n          });\n        }\n\n        if (userText.length && caretVisible && !isFrame && !isPrint) {\n          context.globalAlpha = 1;\n          // const idx = xyToIndex(userPosition);\n          const caretW = 1;\n          const caretH = 1.25;\n          context.globalCompositeOperation = \"difference\";\n          context.fillStyle = \"white\";\n          const userPosition = [inputEl.selectionStart, 0];\n          const pos = gridToPixel([\n            userPosition[0] + infoGrid[0],\n            userPosition[1] + infoGrid[1],\n          ]);\n          const [px, py] = pos;\n          const cx = px + (grid.cellWidth / 2 - (grid.cellWidth * caretW) / 2);\n          const cy =\n            py + (grid.cellHeight / 2 - (grid.cellHeight * caretH) / 2);\n          context.fillRect(\n            cx,\n            cy,\n            grid.cellWidth * caretW,\n            grid.cellHeight * caretH\n          );\n          context.globalCompositeOperation = \"source-over\";\n        }\n\n        context.restore();\n      }\n    }\n  }\n\n  function pixelBoundsToGridBounds([minPx, maxPx]) {\n    const minGrid = pixelToGridUnclamped(minPx);\n    const maxGrid = pixelToGridUnclamped(maxPx);\n    const cols = maxGrid[0] - minGrid[0];\n    const rows = maxGrid[1] - minGrid[1];\n    return [minGrid, maxGrid, cols, rows];\n  }\n\n  function updateParticleTime(p) {\n    p.time += dt;\n    if (p.time > p.delay && !p.started) {\n      p.started = true;\n    }\n    if (p.started) {\n      const curTime = Math.max(0, p.time - p.delay);\n      if (curTime < p.durationIn) {\n        p.alpha = easeFlip(MathUtil.clamp01(curTime / p.durationIn));\n      }\n\n      const totalDur = p.duration + p.durationIn + p.durationOut;\n      if (curTime < p.durationIn) {\n        // p.alpha = easeFlip(MathUtil.clamp01(curTime / p.durationIn));\n      } else if (curTime >= p.durationIn + p.duration) {\n        const start = Math.max(0, curTime - (p.durationIn + p.duration));\n        p.alpha = 1 - easeFlip(MathUtil.clamp01(start / p.durationOut));\n      } else {\n        p.alpha = 1;\n      }\n\n      if (curTime >= totalDur) {\n        p.active = false;\n      }\n    }\n  }\n\n  function xyToIndex(x, y) {\n    if (Array.isArray(x)) {\n      const a = x;\n      x = a[0];\n      y = a[1];\n    }\n    return Math.floor(x) + Math.floor(y) * grid.columns;\n  }\n\n  function indexToXY(index) {\n    const x = Math.floor(index % grid.columns);\n    const y = Math.floor(index / grid.columns);\n    return [x, y];\n  }\n\n  function pixelToGrid([x, y], [cx, cy] = [0, 0]) {\n    x -= grid.x;\n    y -= grid.y;\n    x -= grid.cellWidth * cx;\n    y -= grid.cellHeight * cy;\n    return [\n      Math.max(0, Math.min(grid.columns - 1, Math.floor(x / grid.cellWidth))),\n      Math.max(0, Math.min(grid.rows - 1, Math.floor(y / grid.cellHeight))),\n    ];\n  }\n\n  function pixelToGridUnclamped([x, y], [cx, cy] = [0, 0]) {\n    x -= grid.x;\n    y -= grid.y;\n    x -= grid.cellWidth * cx;\n    y -= grid.cellHeight * cy;\n    return [Math.floor(x / grid.cellWidth), Math.floor(y / grid.cellHeight)];\n  }\n\n  function gridToPixel([x, y], [cx, cy] = [0, 0]) {\n    return [\n      grid.x + x * grid.cellWidth + grid.cellWidth * cx,\n      grid.y + y * grid.cellHeight + grid.cellHeight * cy,\n    ];\n  }\n\n  function snapPixelToGrid(pixel, [cx, cy] = [0, 0]) {\n    const gridCoord = pixelToGrid(pixel, [cx, cy]);\n    const pixelCoord = gridToPixel(gridCoord, [cx, cy]);\n    return pixelCoord;\n  }\n\n  function frameFloor(n) {\n    return isFrame ? Math.floor(n) : n;\n  }\n\n  function drawText(\n    context,\n    {\n      alpha = 1,\n      slice = null,\n      color = foreground,\n      position = [0, 0],\n      symbol = \"?\",\n      fontFamily = defaultFontFamily,\n      coverBackground = false,\n      coverBackgroundColor = \"#f2c615\",\n    }\n  ) {\n    const { width, height } = props;\n    const [cx, cy] = gridToPixel(position);\n    const x = frameFloor(cx);\n    const y = frameFloor(cy);\n\n    context.save();\n\n    const jitterStrength = 0.5;\n\n    const txtWidth = textMeasuredWidth;\n    const ox = grid.cellWidth / 2 - txtWidth / 2;\n    const oy = grid.cellHeight / 2;\n\n    const px = frameFloor(x + ox);\n    const py = frameFloor(y + oy);\n    const f = 1;\n    const sx = cx;\n    const sy = cy;\n    const tx = jitterNoise.noise3D(sx * f, sy * f, -1) * jitterStrength;\n    const ty = jitterNoise.noise3D(sx * f, sy * f, 1) * jitterStrength;\n\n    // context.beginPath();\n    const fx = frameFloor(px + tx);\n    const fy = frameFloor(py + ty);\n\n    const doCover = shouldCoverBackground && coverBackground;\n\n    if (slice != null) {\n      const slices = 2;\n      const sliceHeight = grid.cellHeight / slices;\n      context.beginPath();\n      context.rect(x, y + sliceHeight * slice, grid.cellWidth, sliceHeight);\n      context.clip();\n    }\n\n    // context.fillStyle = background;\n    // context.fillRect(x, y, grid.cellWidth, grid.cellHeight * p.alpha);\n    if (doCover) {\n      const foff = isFrame ? 1 : 0;\n      // context.beginPath();\n      context.globalAlpha = 1;\n      context.fillStyle = coverBackgroundColor;\n      context.fillRect(\n        frameFloor(x) - foff,\n        frameFloor(y) - foff,\n        frameFloor(grid.cellWidth) + foff * 2,\n        frameFloor(grid.cellHeight) + foff * 2\n      );\n      context.globalAlpha = 1;\n      // context.clip();\n    }\n\n    // context.fillStyle = foreground;\n    setFontFamily(context, fontFamily);\n    context.fillStyle = color;\n    if (!doCover) {\n      context.strokeStyle = background;\n      context.lineWidth = Math.min(width, height) * 0.001;\n      context.strokeText(symbol, fx, fy);\n    }\n    context.globalAlpha = 0.95;\n    context.fillText(symbol, fx, fy);\n    // context.globalAlpha = 0.05;\n    // context.fillText(\n    //   symbol,\n    //   fx + random.gaussian(0, 0.1),\n    //   fy + random.gaussian(0, 0.1)\n    // );\n    context.globalAlpha = 1;\n    context.restore();\n  }\n\n  function mapParticleToData(\n    p,\n    {\n      alpha = 1,\n      slice = null,\n      color = foreground,\n      position = [0, 0],\n      symbol = \"?\",\n      fontFamily = defaultFontFamily,\n      coverBackground = false,\n      coverBackgroundColor = \"#f2c615\",\n    }\n  ) {\n    const { width, height } = props;\n    const [cx, cy] = gridToPixel(position);\n    const x = cx;\n    const y = cy;\n\n    return {\n      alpha,\n      color,\n      position,\n      symbol,\n      fontFamily,\n      coverBackground,\n      coverBackgroundColor,\n    };\n  }\n};\n\nfunction createInput(opt = {}) {\n  const inputEl = document.createElement(\"input\");\n  document.body.appendChild(inputEl);\n  Object.assign(inputEl.style, {\n    position: \"absolute\",\n    opacity: \"0\",\n    left: \"0\",\n    top: \"0\",\n  });\n  inputEl.focus();\n  inputEl.addEventListener(\"input\", inputChanged);\n  inputEl.addEventListener(\n    \"focus\",\n    (ev) => {\n      inputEl.value = inputEl.value;\n      forceInputEnd();\n    },\n    false\n  );\n  inputEl.addEventListener(\"keydown\", (ev) => {\n    if (ev.keyCode === 13) {\n      // enter\n      ev.preventDefault();\n      opt.submit(ev);\n      return false;\n    }\n  });\n  window.addEventListener(\"click\", () => inputEl.focus());\n  return inputEl;\n\n  function forceInputEnd() {}\n\n  function inputChanged(ev) {\n    opt.changed(ev);\n  }\n}\n\nmodule.exports.sketch = sketch;\nmodule.exports.settings = settings;\n","module.exports=[\"'ll\",\"'tis\",\"'twas\",\"'ve\",\"10\",\"39\",\"a\",\"a's\",\"able\",\"ableabout\",\"about\",\"above\",\"abroad\",\"abst\",\"accordance\",\"according\",\"accordingly\",\"across\",\"act\",\"actually\",\"ad\",\"added\",\"adj\",\"adopted\",\"ae\",\"af\",\"affected\",\"affecting\",\"affects\",\"after\",\"afterwards\",\"ag\",\"again\",\"against\",\"ago\",\"ah\",\"ahead\",\"ai\",\"ain't\",\"aint\",\"al\",\"all\",\"allow\",\"allows\",\"almost\",\"alone\",\"along\",\"alongside\",\"already\",\"also\",\"although\",\"always\",\"am\",\"amid\",\"amidst\",\"among\",\"amongst\",\"amoungst\",\"amount\",\"an\",\"and\",\"announce\",\"another\",\"any\",\"anybody\",\"anyhow\",\"anymore\",\"anyone\",\"anything\",\"anyway\",\"anyways\",\"anywhere\",\"ao\",\"apart\",\"apparently\",\"appear\",\"appreciate\",\"appropriate\",\"approximately\",\"aq\",\"ar\",\"are\",\"area\",\"areas\",\"aren\",\"aren't\",\"arent\",\"arise\",\"around\",\"arpa\",\"as\",\"aside\",\"ask\",\"asked\",\"asking\",\"asks\",\"associated\",\"at\",\"au\",\"auth\",\"available\",\"aw\",\"away\",\"awfully\",\"az\",\"b\",\"ba\",\"back\",\"backed\",\"backing\",\"backs\",\"backward\",\"backwards\",\"bb\",\"bd\",\"be\",\"became\",\"because\",\"become\",\"becomes\",\"becoming\",\"been\",\"before\",\"beforehand\",\"began\",\"begin\",\"beginning\",\"beginnings\",\"begins\",\"behind\",\"being\",\"beings\",\"believe\",\"below\",\"beside\",\"besides\",\"best\",\"better\",\"between\",\"beyond\",\"bf\",\"bg\",\"bh\",\"bi\",\"big\",\"bill\",\"billion\",\"biol\",\"bj\",\"bm\",\"bn\",\"bo\",\"both\",\"bottom\",\"br\",\"brief\",\"briefly\",\"bs\",\"bt\",\"but\",\"buy\",\"bv\",\"bw\",\"by\",\"bz\",\"c\",\"c'mon\",\"c's\",\"ca\",\"call\",\"came\",\"can\",\"can't\",\"cannot\",\"cant\",\"caption\",\"case\",\"cases\",\"cause\",\"causes\",\"cc\",\"cd\",\"certain\",\"certainly\",\"cf\",\"cg\",\"ch\",\"changes\",\"ci\",\"ck\",\"cl\",\"clear\",\"clearly\",\"click\",\"cm\",\"cmon\",\"cn\",\"co\",\"co.\",\"com\",\"come\",\"comes\",\"computer\",\"con\",\"concerning\",\"consequently\",\"consider\",\"considering\",\"contain\",\"containing\",\"contains\",\"copy\",\"corresponding\",\"could\",\"could've\",\"couldn\",\"couldn't\",\"couldnt\",\"course\",\"cr\",\"cry\",\"cs\",\"cu\",\"currently\",\"cv\",\"cx\",\"cy\",\"cz\",\"d\",\"dare\",\"daren't\",\"darent\",\"date\",\"de\",\"dear\",\"definitely\",\"describe\",\"described\",\"despite\",\"detail\",\"did\",\"didn\",\"didn't\",\"didnt\",\"differ\",\"different\",\"differently\",\"directly\",\"dj\",\"dk\",\"dm\",\"do\",\"does\",\"doesn\",\"doesn't\",\"doesnt\",\"doing\",\"don\",\"don't\",\"done\",\"dont\",\"doubtful\",\"down\",\"downed\",\"downing\",\"downs\",\"downwards\",\"due\",\"during\",\"dz\",\"e\",\"each\",\"early\",\"ec\",\"ed\",\"edu\",\"ee\",\"effect\",\"eg\",\"eh\",\"eight\",\"eighty\",\"either\",\"eleven\",\"else\",\"elsewhere\",\"empty\",\"end\",\"ended\",\"ending\",\"ends\",\"enough\",\"entirely\",\"er\",\"es\",\"especially\",\"et\",\"et-al\",\"etc\",\"even\",\"evenly\",\"ever\",\"evermore\",\"every\",\"everybody\",\"everyone\",\"everything\",\"everywhere\",\"ex\",\"exactly\",\"example\",\"except\",\"f\",\"face\",\"faces\",\"fact\",\"facts\",\"fairly\",\"far\",\"farther\",\"felt\",\"few\",\"fewer\",\"ff\",\"fi\",\"fifteen\",\"fifth\",\"fifty\",\"fify\",\"fill\",\"find\",\"finds\",\"fire\",\"first\",\"five\",\"fix\",\"fj\",\"fk\",\"fm\",\"fo\",\"followed\",\"following\",\"follows\",\"for\",\"forever\",\"former\",\"formerly\",\"forth\",\"forty\",\"forward\",\"found\",\"four\",\"fr\",\"free\",\"from\",\"front\",\"full\",\"fully\",\"further\",\"furthered\",\"furthering\",\"furthermore\",\"furthers\",\"fx\",\"g\",\"ga\",\"gave\",\"gb\",\"gd\",\"ge\",\"general\",\"generally\",\"get\",\"gets\",\"getting\",\"gf\",\"gg\",\"gh\",\"gi\",\"give\",\"given\",\"gives\",\"giving\",\"gl\",\"gm\",\"gmt\",\"gn\",\"go\",\"goes\",\"going\",\"gone\",\"good\",\"goods\",\"got\",\"gotten\",\"gov\",\"gp\",\"gq\",\"gr\",\"great\",\"greater\",\"greatest\",\"greetings\",\"group\",\"grouped\",\"grouping\",\"groups\",\"gs\",\"gt\",\"gu\",\"gw\",\"gy\",\"h\",\"had\",\"hadn't\",\"hadnt\",\"half\",\"happens\",\"hardly\",\"has\",\"hasn\",\"hasn't\",\"hasnt\",\"have\",\"haven\",\"haven't\",\"havent\",\"having\",\"he\",\"he'd\",\"he'll\",\"he's\",\"hed\",\"hell\",\"hello\",\"help\",\"hence\",\"her\",\"here\",\"here's\",\"hereafter\",\"hereby\",\"herein\",\"heres\",\"hereupon\",\"hers\",\"herself\",\"herse”\",\"hes\",\"hi\",\"hid\",\"high\",\"higher\",\"highest\",\"him\",\"himself\",\"himse”\",\"his\",\"hither\",\"hk\",\"hm\",\"hn\",\"home\",\"homepage\",\"hopefully\",\"how\",\"how'd\",\"how'll\",\"how's\",\"howbeit\",\"however\",\"hr\",\"ht\",\"htm\",\"html\",\"http\",\"hu\",\"hundred\",\"i\",\"i'd\",\"i'll\",\"i'm\",\"i've\",\"i.e.\",\"id\",\"ie\",\"if\",\"ignored\",\"ii\",\"il\",\"ill\",\"im\",\"immediate\",\"immediately\",\"importance\",\"important\",\"in\",\"inasmuch\",\"inc\",\"inc.\",\"indeed\",\"index\",\"indicate\",\"indicated\",\"indicates\",\"information\",\"inner\",\"inside\",\"insofar\",\"instead\",\"int\",\"interest\",\"interested\",\"interesting\",\"interests\",\"into\",\"invention\",\"inward\",\"io\",\"iq\",\"ir\",\"is\",\"isn\",\"isn't\",\"isnt\",\"it\",\"it'd\",\"it'll\",\"it's\",\"itd\",\"itll\",\"its\",\"itself\",\"itse”\",\"ive\",\"j\",\"je\",\"jm\",\"jo\",\"join\",\"jp\",\"just\",\"k\",\"ke\",\"keep\",\"keeps\",\"kept\",\"keys\",\"kg\",\"kh\",\"ki\",\"kind\",\"km\",\"kn\",\"knew\",\"know\",\"known\",\"knows\",\"kp\",\"kr\",\"kw\",\"ky\",\"kz\",\"l\",\"la\",\"large\",\"largely\",\"last\",\"lately\",\"later\",\"latest\",\"latter\",\"latterly\",\"lb\",\"lc\",\"least\",\"length\",\"less\",\"lest\",\"let\",\"let's\",\"lets\",\"li\",\"like\",\"liked\",\"likely\",\"likewise\",\"line\",\"little\",\"lk\",\"ll\",\"long\",\"longer\",\"longest\",\"look\",\"looking\",\"looks\",\"low\",\"lower\",\"lr\",\"ls\",\"lt\",\"ltd\",\"lu\",\"lv\",\"ly\",\"m\",\"ma\",\"made\",\"mainly\",\"make\",\"makes\",\"making\",\"man\",\"many\",\"may\",\"maybe\",\"mayn't\",\"maynt\",\"mc\",\"md\",\"me\",\"mean\",\"means\",\"meantime\",\"meanwhile\",\"member\",\"members\",\"men\",\"merely\",\"mg\",\"mh\",\"microsoft\",\"might\",\"might've\",\"mightn't\",\"mightnt\",\"mil\",\"mill\",\"million\",\"mine\",\"minus\",\"miss\",\"mk\",\"ml\",\"mm\",\"mn\",\"mo\",\"more\",\"moreover\",\"most\",\"mostly\",\"move\",\"mp\",\"mq\",\"mr\",\"mrs\",\"ms\",\"msie\",\"mt\",\"mu\",\"much\",\"mug\",\"must\",\"must've\",\"mustn't\",\"mustnt\",\"mv\",\"mw\",\"mx\",\"my\",\"myself\",\"myse”\",\"mz\",\"n\",\"na\",\"name\",\"namely\",\"nay\",\"nc\",\"nd\",\"ne\",\"near\",\"nearly\",\"necessarily\",\"necessary\",\"need\",\"needed\",\"needing\",\"needn't\",\"neednt\",\"needs\",\"neither\",\"net\",\"netscape\",\"never\",\"neverf\",\"neverless\",\"nevertheless\",\"new\",\"newer\",\"newest\",\"next\",\"nf\",\"ng\",\"ni\",\"nine\",\"ninety\",\"nl\",\"no\",\"no-one\",\"nobody\",\"non\",\"none\",\"nonetheless\",\"noone\",\"nor\",\"normally\",\"nos\",\"not\",\"noted\",\"nothing\",\"notwithstanding\",\"novel\",\"now\",\"nowhere\",\"np\",\"nr\",\"nu\",\"null\",\"number\",\"numbers\",\"nz\",\"o\",\"obtain\",\"obtained\",\"obviously\",\"of\",\"off\",\"often\",\"oh\",\"ok\",\"okay\",\"old\",\"older\",\"oldest\",\"om\",\"omitted\",\"on\",\"once\",\"one\",\"one's\",\"ones\",\"only\",\"onto\",\"open\",\"opened\",\"opening\",\"opens\",\"opposite\",\"or\",\"ord\",\"order\",\"ordered\",\"ordering\",\"orders\",\"org\",\"other\",\"others\",\"otherwise\",\"ought\",\"oughtn't\",\"oughtnt\",\"our\",\"ours\",\"ourselves\",\"out\",\"outside\",\"over\",\"overall\",\"owing\",\"own\",\"p\",\"pa\",\"page\",\"pages\",\"part\",\"parted\",\"particular\",\"particularly\",\"parting\",\"parts\",\"past\",\"pe\",\"per\",\"perhaps\",\"pf\",\"pg\",\"ph\",\"pk\",\"pl\",\"place\",\"placed\",\"places\",\"please\",\"plus\",\"pm\",\"pmid\",\"pn\",\"point\",\"pointed\",\"pointing\",\"points\",\"poorly\",\"possible\",\"possibly\",\"potentially\",\"pp\",\"pr\",\"predominantly\",\"present\",\"presented\",\"presenting\",\"presents\",\"presumably\",\"previously\",\"primarily\",\"probably\",\"problem\",\"problems\",\"promptly\",\"proud\",\"provided\",\"provides\",\"pt\",\"put\",\"puts\",\"pw\",\"py\",\"q\",\"qa\",\"que\",\"quickly\",\"quite\",\"qv\",\"r\",\"ran\",\"rather\",\"rd\",\"re\",\"readily\",\"really\",\"reasonably\",\"recent\",\"recently\",\"ref\",\"refs\",\"regarding\",\"regardless\",\"regards\",\"related\",\"relatively\",\"research\",\"reserved\",\"respectively\",\"resulted\",\"resulting\",\"results\",\"right\",\"ring\",\"ro\",\"room\",\"rooms\",\"round\",\"ru\",\"run\",\"rw\",\"s\",\"sa\",\"said\",\"same\",\"saw\",\"say\",\"saying\",\"says\",\"sb\",\"sc\",\"sd\",\"se\",\"sec\",\"second\",\"secondly\",\"seconds\",\"section\",\"see\",\"seeing\",\"seem\",\"seemed\",\"seeming\",\"seems\",\"seen\",\"sees\",\"self\",\"selves\",\"sensible\",\"sent\",\"serious\",\"seriously\",\"seven\",\"seventy\",\"several\",\"sg\",\"sh\",\"shall\",\"shan't\",\"shant\",\"she\",\"she'd\",\"she'll\",\"she's\",\"shed\",\"shell\",\"shes\",\"should\",\"should've\",\"shouldn\",\"shouldn't\",\"shouldnt\",\"show\",\"showed\",\"showing\",\"shown\",\"showns\",\"shows\",\"si\",\"side\",\"sides\",\"significant\",\"significantly\",\"similar\",\"similarly\",\"since\",\"sincere\",\"site\",\"six\",\"sixty\",\"sj\",\"sk\",\"sl\",\"slightly\",\"sm\",\"small\",\"smaller\",\"smallest\",\"sn\",\"so\",\"some\",\"somebody\",\"someday\",\"somehow\",\"someone\",\"somethan\",\"something\",\"sometime\",\"sometimes\",\"somewhat\",\"somewhere\",\"soon\",\"sorry\",\"specifically\",\"specified\",\"specify\",\"specifying\",\"sr\",\"st\",\"state\",\"states\",\"still\",\"stop\",\"strongly\",\"su\",\"sub\",\"substantially\",\"successfully\",\"such\",\"sufficiently\",\"suggest\",\"sup\",\"sure\",\"sv\",\"sy\",\"system\",\"sz\",\"t\",\"t's\",\"take\",\"taken\",\"taking\",\"tc\",\"td\",\"tell\",\"ten\",\"tends\",\"test\",\"text\",\"tf\",\"tg\",\"th\",\"than\",\"thank\",\"thanks\",\"thanx\",\"that\",\"that'll\",\"that's\",\"that've\",\"thatll\",\"thats\",\"thatve\",\"the\",\"their\",\"theirs\",\"them\",\"themselves\",\"then\",\"thence\",\"there\",\"there'd\",\"there'll\",\"there're\",\"there's\",\"there've\",\"thereafter\",\"thereby\",\"thered\",\"therefore\",\"therein\",\"therell\",\"thereof\",\"therere\",\"theres\",\"thereto\",\"thereupon\",\"thereve\",\"these\",\"they\",\"they'd\",\"they'll\",\"they're\",\"they've\",\"theyd\",\"theyll\",\"theyre\",\"theyve\",\"thick\",\"thin\",\"thing\",\"things\",\"think\",\"thinks\",\"third\",\"thirty\",\"this\",\"thorough\",\"thoroughly\",\"those\",\"thou\",\"though\",\"thoughh\",\"thought\",\"thoughts\",\"thousand\",\"three\",\"throug\",\"through\",\"throughout\",\"thru\",\"thus\",\"til\",\"till\",\"tip\",\"tis\",\"tj\",\"tk\",\"tm\",\"tn\",\"to\",\"today\",\"together\",\"too\",\"took\",\"top\",\"toward\",\"towards\",\"tp\",\"tr\",\"tried\",\"tries\",\"trillion\",\"truly\",\"try\",\"trying\",\"ts\",\"tt\",\"turn\",\"turned\",\"turning\",\"turns\",\"tv\",\"tw\",\"twas\",\"twelve\",\"twenty\",\"twice\",\"two\",\"tz\",\"u\",\"ua\",\"ug\",\"uk\",\"um\",\"un\",\"under\",\"underneath\",\"undoing\",\"unfortunately\",\"unless\",\"unlike\",\"unlikely\",\"until\",\"unto\",\"up\",\"upon\",\"ups\",\"upwards\",\"us\",\"use\",\"used\",\"useful\",\"usefully\",\"usefulness\",\"uses\",\"using\",\"usually\",\"uucp\",\"uy\",\"uz\",\"v\",\"va\",\"value\",\"various\",\"vc\",\"ve\",\"versus\",\"very\",\"vg\",\"vi\",\"via\",\"viz\",\"vn\",\"vol\",\"vols\",\"vs\",\"vu\",\"w\",\"want\",\"wanted\",\"wanting\",\"wants\",\"was\",\"wasn\",\"wasn't\",\"wasnt\",\"way\",\"ways\",\"we\",\"we'd\",\"we'll\",\"we're\",\"we've\",\"web\",\"webpage\",\"website\",\"wed\",\"welcome\",\"well\",\"wells\",\"went\",\"were\",\"weren\",\"weren't\",\"werent\",\"weve\",\"wf\",\"what\",\"what'd\",\"what'll\",\"what's\",\"what've\",\"whatever\",\"whatll\",\"whats\",\"whatve\",\"when\",\"when'd\",\"when'll\",\"when's\",\"whence\",\"whenever\",\"where\",\"where'd\",\"where'll\",\"where's\",\"whereafter\",\"whereas\",\"whereby\",\"wherein\",\"wheres\",\"whereupon\",\"wherever\",\"whether\",\"which\",\"whichever\",\"while\",\"whilst\",\"whim\",\"whither\",\"who\",\"who'd\",\"who'll\",\"who's\",\"whod\",\"whoever\",\"whole\",\"wholl\",\"whom\",\"whomever\",\"whos\",\"whose\",\"why\",\"why'd\",\"why'll\",\"why's\",\"widely\",\"width\",\"will\",\"willing\",\"wish\",\"with\",\"within\",\"without\",\"won\",\"won't\",\"wonder\",\"wont\",\"words\",\"work\",\"worked\",\"working\",\"works\",\"world\",\"would\",\"would've\",\"wouldn\",\"wouldn't\",\"wouldnt\",\"ws\",\"www\",\"x\",\"y\",\"ye\",\"year\",\"years\",\"yes\",\"yet\",\"you\",\"you'd\",\"you'll\",\"you're\",\"you've\",\"youd\",\"youll\",\"young\",\"younger\",\"youngest\",\"your\",\"youre\",\"yours\",\"yourself\",\"yourselves\",\"youve\",\"yt\",\"yu\",\"z\",\"za\",\"zero\",\"zm\",\"zr\"]","module.exports.traverse = traverseDepthFirst;\nmodule.exports.traverseDepthFirst = traverseDepthFirst;\nfunction traverseDepthFirst(root, cb) {\n  const stack = [root];\n  while (stack.length > 0) {\n    const node = stack.shift();\n    const ret = cb(node, root);\n    if (ret === false) return;\n    if (node.children) {\n      const children = [...node.children];\n      if (children.length > 0) {\n        stack.unshift(...children);\n      }\n    }\n  }\n}\n\nmodule.exports.traverseBreadthFirst = traverseBreadthFirst;\nfunction traverseBreadthFirst(root, cb) {\n  const stack = [root];\n  while (stack.length > 0) {\n    const node = stack.shift();\n    const ret = cb(node, root);\n    if (ret === false) return;\n    if (node.children) {\n      const children = [...node.children];\n      if (children.length > 0) {\n        stack.push(...children);\n      }\n    }\n  }\n}\n\nmodule.exports.getLeafNodes = getLeafNodes;\nfunction getLeafNodes(root, filter = () => true) {\n  const leafNodes = [];\n  const stack = [root];\n  while (stack.length > 0) {\n    const node = stack.shift();\n    const ret = filter(node, root);\n    if (ret === false) continue;\n    const children = node.children ? [...node.children] : null;\n    if (children && children.length > 0) {\n      stack.unshift(...children);\n    } else {\n      leafNodes.push(node);\n    }\n  }\n  return leafNodes;\n}\n","\nglobal.CANVAS_SKETCH_DEFAULT_STORAGE_KEY = window.location.href;\n"]}